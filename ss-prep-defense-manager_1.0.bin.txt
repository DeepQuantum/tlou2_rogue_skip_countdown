-------------[ t2r script disassembler by icemesh ]--------------
(defun '#03A283316C8FC8F6
        (
            loc_0 - CODE: 0x000004E8 0C 00 00 00 DC::kLoadU16Immediate: R0, 0 | (0 << 0x8)
            loc_1 - CODE: 0x000004F0 15 01 00 00 DC::kLookupInteger/kLookupFloat: R1 R0 -> hashid: 0x37B1139C687F2546(darray-count)
            loc_2 - CODE: 0x000004F8 15 02 01 00 DC::kLookupInteger/kLookupFloat: R2 R1 -> hashid: 0x5690F8DE53AD4943(#5690F8DE53AD4943)
            loc_3 - CODE: 0x00000500 4A 03 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 0FCC25C0CB675047(#0FCC25C0CB675047)
            loc_4 - CODE: 0x00000508 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_5 - CODE: 0x00000510 1B 02 02 01 DC::kCall: ( #5690F8DE53AD4943 '#0FCC25C0CB675047 )
            loc_6 - CODE: 0x00000518 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_7 - CODE: 0x00000520 1C 01 01 01 DC::kCallFf: ( darray-count '#5690F8DE53AD4943 )
            loc_8 - CODE: 0x00000528 15 02 03 00 DC::kLookupInteger/kLookupFloat: R2 R3 -> hashid: 0x2F82623ED7481B3D(begin-foreach)
            loc_9 - CODE: 0x00000530 1C 02 02 00 DC::kCallFf: ( begin-foreach )
            loc_10 - CODE: 0x00000538 43 02 00 00 DC::kMoveInteger/kMovePointer/kMove: R2, R0
            loc_11 - CODE: 0x00000540 43 03 01 00 DC::kMoveInteger/kMovePointer/kMove: R3, R1
            loc_12 - CODE: 0x00000548 20 02 02 03 DC::kIlt: R2 < R3
            loc_13 - CODE: 0x00000550 2F 78 02 00 DC::kBranchIfNot: B loc_120
            loc_14 - CODE: 0x00000558 15 02 04 00 DC::kLookupInteger/kLookupFloat: R2 R4 -> hashid: 0xDB044C8529474AEA(darray-at)
            loc_15 - CODE: 0x00000560 15 03 01 00 DC::kLookupInteger/kLookupFloat: R3 R1 -> hashid: 0x5690F8DE53AD4943(#5690F8DE53AD4943)
            loc_16 - CODE: 0x00000568 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 0FCC25C0CB675047(#0FCC25C0CB675047)
            loc_17 - CODE: 0x00000570 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_18 - CODE: 0x00000578 1B 03 03 01 DC::kCall: ( #5690F8DE53AD4943 '#0FCC25C0CB675047 )
            loc_19 - CODE: 0x00000580 43 04 00 00 DC::kMoveInteger/kMovePointer/kMove: R4, R0
            loc_20 - CODE: 0x00000588 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_21 - CODE: 0x00000590 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_22 - CODE: 0x00000598 1C 02 02 02 DC::kCallFf: ( darray-at '#5690F8DE53AD4943 '#0000000000000000 )
            loc_23 - CODE: 0x000005A0 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_24 - CODE: 0x000005A8 2F 1F 03 00 DC::kBranchIfNot: B loc_31
            loc_25 - CODE: 0x000005B0 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_26 - CODE: 0x000005B8 5D 03 00 00 DC::kAssertPointer:
            loc_27 - CODE: 0x000005C0 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_28 - CODE: 0x000005C8 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_29 - CODE: 0x000005D0 0C 04 07 00 DC::kLoadU16Immediate: R4, 7 | (0 << 0x8)
            loc_30 - CODE: 0x000005D8 1D 03 03 04 DC::kIeq: R3 == R4
            loc_31 - CODE: 0x000005E0 2F 24 03 00 DC::kBranchIfNot: B loc_32
            loc_32 - CODE: 0x000005E8 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_33 - CODE: 0x000005F0 5D 03 00 00 DC::kAssertPointer:
            loc_34 - CODE: 0x000005F8 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_35 - CODE: 0x00000600 2D 3F 00 00 DC::kBranch: B loc_63
            loc_36 - CODE: 0x00000608 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_37 - CODE: 0x00000610 2F 2C 03 00 DC::kBranchIfNot: B loc_44
            loc_38 - CODE: 0x00000618 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_39 - CODE: 0x00000620 5D 03 00 00 DC::kAssertPointer:
            loc_40 - CODE: 0x00000628 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_41 - CODE: 0x00000630 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_42 - CODE: 0x00000638 0C 04 05 00 DC::kLoadU16Immediate: R4, 5 | (0 << 0x8)
            loc_43 - CODE: 0x00000640 1D 03 03 04 DC::kIeq: R3 == R4
            loc_44 - CODE: 0x00000648 2F 31 03 00 DC::kBranchIfNot: B loc_45
            loc_45 - CODE: 0x00000650 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_46 - CODE: 0x00000658 5D 03 00 00 DC::kAssertPointer:
            loc_47 - CODE: 0x00000660 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_48 - CODE: 0x00000668 2D 3F 00 00 DC::kBranch: B loc_63
            loc_49 - CODE: 0x00000670 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_50 - CODE: 0x00000678 2F 39 03 00 DC::kBranchIfNot: B loc_57
            loc_51 - CODE: 0x00000680 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_52 - CODE: 0x00000688 5D 03 00 00 DC::kAssertPointer:
            loc_53 - CODE: 0x00000690 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_54 - CODE: 0x00000698 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_55 - CODE: 0x000006A0 0C 04 04 00 DC::kLoadU16Immediate: R4, 4 | (0 << 0x8)
            loc_56 - CODE: 0x000006A8 1D 03 03 04 DC::kIeq: R3 == R4
            loc_57 - CODE: 0x000006B0 2F 3E 03 00 DC::kBranchIfNot: B loc_58
            loc_58 - CODE: 0x000006B8 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_59 - CODE: 0x000006C0 5D 03 00 00 DC::kAssertPointer:
            loc_60 - CODE: 0x000006C8 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_61 - CODE: 0x000006D0 2D 3F 00 00 DC::kBranch: B loc_63
            loc_62 - CODE: 0x000006D8 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_63 - CODE: 0x000006E0 43 02 03 00 DC::kMoveInteger/kMovePointer/kMove: R2, R3
            loc_64 - CODE: 0x000006E8 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x950817ECFF607C36(npc-stalker?)
            loc_65 - CODE: 0x000006F0 43 04 02 00 DC::kMoveInteger/kMovePointer/kMove: R4, R2
            loc_66 - CODE: 0x000006F8 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_67 - CODE: 0x00000700 1B 03 03 01 DC::kCall: ( npc-stalker? '#0000000000000000 )
            loc_68 - CODE: 0x00000708 2F 51 03 00 DC::kBranchIfNot: B loc_81
            loc_69 - CODE: 0x00000710 15 03 06 00 DC::kLookupInteger/kLookupFloat: R3 R6 -> hashid: 0x1956DD89C10BEAB9(npc-set-zone-region)
            loc_70 - CODE: 0x00000718 43 04 02 00 DC::kMoveInteger/kMovePointer/kMove: R4, R2
            loc_71 - CODE: 0x00000720 15 05 07 00 DC::kLookupInteger/kLookupFloat: R5 R7 -> hashid: 0xF03BEED169C9A5C6(get-symbol)
            loc_72 - CODE: 0x00000728 4A 06 08 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R6, 5FDC403B81C30778(#5FDC403B81C30778)
            loc_73 - CODE: 0x00000730 4A 07 09 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R7, 2D19E518D40792B7(self)
            loc_74 - CODE: 0x00000738 43 31 06 00 DC::kMoveInteger/kMovePointer/kMove: R49, R6
            loc_75 - CODE: 0x00000740 43 32 07 00 DC::kMoveInteger/kMovePointer/kMove: R50, R7
            loc_76 - CODE: 0x00000748 1C 05 05 02 DC::kCallFf: ( get-symbol '#5FDC403B81C30778 'self )
            loc_77 - CODE: 0x00000750 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_78 - CODE: 0x00000758 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_79 - CODE: 0x00000760 1C 03 03 02 DC::kCallFf: ( npc-set-zone-region '#0000000000000000 'get-symbol )
            loc_80 - CODE: 0x00000768 2D 52 00 00 DC::kBranch: B loc_82
            loc_81 - CODE: 0x00000770 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_82 - CODE: 0x00000778 15 03 0A 00 DC::kLookupInteger/kLookupFloat: R3 R10 -> hashid: 0x88547F48DA223122(get-int32)
            loc_83 - CODE: 0x00000780 4A 04 0B 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, C75D966632533F17(#C75D966632533F17)
            loc_84 - CODE: 0x00000788 4A 05 09 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, 2D19E518D40792B7(self)
            loc_85 - CODE: 0x00000790 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_86 - CODE: 0x00000798 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_87 - CODE: 0x000007A0 1C 03 03 02 DC::kCallFf: ( get-int32 '#C75D966632533F17 'self )
            loc_88 - CODE: 0x000007A8 15 04 0A 00 DC::kLookupInteger/kLookupFloat: R4 R10 -> hashid: 0x88547F48DA223122(get-int32)
            loc_89 - CODE: 0x000007B0 4A 05 0C 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, 76853ADC01E9E854(#76853ADC01E9E854)
            loc_90 - CODE: 0x000007B8 4A 06 09 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R6, 2D19E518D40792B7(self)
            loc_91 - CODE: 0x000007C0 43 31 05 00 DC::kMoveInteger/kMovePointer/kMove: R49, R5
            loc_92 - CODE: 0x000007C8 43 32 06 00 DC::kMoveInteger/kMovePointer/kMove: R50, R6
            loc_93 - CODE: 0x000007D0 1C 04 04 02 DC::kCallFf: ( get-int32 '#76853ADC01E9E854 'self )
            loc_94 - CODE: 0x000007D8 02 03 03 04 DC::kScriptCodeISubtract: R3, R3, R4
            loc_95 - CODE: 0x000007E0 0C 04 05 00 DC::kLoadU16Immediate: R4, 5 | (0 << 0x8)
            loc_96 - CODE: 0x000007E8 21 03 03 04 DC::kIlte: R3 <= R4
            loc_97 - CODE: 0x000007F0 2F 70 03 00 DC::kBranchIfNot: B loc_112
            loc_98 - CODE: 0x000007F8 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x950817ECFF607C36(npc-stalker?)
            loc_99 - CODE: 0x00000800 43 04 02 00 DC::kMoveInteger/kMovePointer/kMove: R4, R2
            loc_100 - CODE: 0x00000808 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_101 - CODE: 0x00000810 1B 03 03 01 DC::kCall: ( npc-stalker? '#0000000000000000 )
            loc_102 - CODE: 0x00000818 2F 6E 03 00 DC::kBranchIfNot: B loc_110
            loc_103 - CODE: 0x00000820 15 03 0D 00 DC::kLookupInteger/kLookupFloat: R3 R13 -> hashid: 0x4277EB0D5F4C59F2(send-event)
            loc_104 - CODE: 0x00000828 4A 04 0E 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, BB434AF286349ED0(enable-overwhelm)
            loc_105 - CODE: 0x00000830 43 05 02 00 DC::kMoveInteger/kMovePointer/kMove: R5, R2
            loc_106 - CODE: 0x00000838 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_107 - CODE: 0x00000840 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_108 - CODE: 0x00000848 1C 03 03 02 DC::kCallFf: ( send-event 'enable-overwhelm '#0000000000000000 )
            loc_109 - CODE: 0x00000850 2D 6F 00 00 DC::kBranch: B loc_111
            loc_110 - CODE: 0x00000858 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_111 - CODE: 0x00000860 2D 71 00 00 DC::kBranch: B loc_113
            loc_112 - CODE: 0x00000868 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_113 - CODE: 0x00000870 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_114 - CODE: 0x00000878 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_115 - CODE: 0x00000880 01 03 03 04 DC::kScriptCodeIAdd: R3, R3, R4
            loc_116 - CODE: 0x00000888 43 00 03 00 DC::kMoveInteger/kMovePointer/kMove: R0, R3
            loc_117 - CODE: 0x00000890 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_118 - CODE: 0x00000898 43 02 03 00 DC::kMoveInteger/kMovePointer/kMove: R2, R3
            loc_119 - CODE: 0x000008A0 2D 0A 00 00 DC::kBranch: B loc_10
            loc_120 - CODE: 0x000008A8 15 02 0F 00 DC::kLookupInteger/kLookupFloat: R2 R15 -> hashid: 0xB144A57CFDBD80D9(end-foreach)
            loc_121 - CODE: 0x000008B0 1C 02 02 00 DC::kCallFf: ( end-foreach )
            loc_122 - CODE: 0x000008B8 43 00 02 00 DC::kMoveInteger/kMovePointer/kMove: R0, R2
            loc_123 - CODE: 0x000008C0 00 00 00 00 DC::kScriptCodeReturn: 0xB144A57CFDBD80D9
        )
)

(defun '#128F9B0812553FC4
        (
            loc_0 - CODE: 0x000009A0 0C 00 00 00 DC::kLoadU16Immediate: R0, 0 | (0 << 0x8)
            loc_1 - CODE: 0x000009A8 15 01 00 00 DC::kLookupInteger/kLookupFloat: R1 R0 -> hashid: 0x37B1139C687F2546(darray-count)
            loc_2 - CODE: 0x000009B0 15 02 01 00 DC::kLookupInteger/kLookupFloat: R2 R1 -> hashid: 0x064B2CA28F02B29E(get-spawners-by-tag)
            loc_3 - CODE: 0x000009B8 4A 03 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2E8A105432D77E7D(#2E8A105432D77E7D)
            loc_4 - CODE: 0x000009C0 0C 04 00 00 DC::kLoadU16Immediate: R4, 0 | (0 << 0x8)
            loc_5 - CODE: 0x000009C8 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_6 - CODE: 0x000009D0 0C 06 00 00 DC::kLoadU16Immediate: R6, 0 | (0 << 0x8)
            loc_7 - CODE: 0x000009D8 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_8 - CODE: 0x000009E0 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_9 - CODE: 0x000009E8 43 33 05 00 DC::kMoveInteger/kMovePointer/kMove: R51, R5
            loc_10 - CODE: 0x000009F0 43 34 06 00 DC::kMoveInteger/kMovePointer/kMove: R52, R6
            loc_11 - CODE: 0x000009F8 1C 02 02 04 DC::kCallFf: ( get-spawners-by-tag '#2E8A105432D77E7D '#0000000000000000 '#0000000000000000 '#0000000000000000 )
            loc_12 - CODE: 0x00000A00 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_13 - CODE: 0x00000A08 1C 01 01 01 DC::kCallFf: ( darray-count 'get-spawners-by-tag )
            loc_14 - CODE: 0x00000A10 15 02 03 00 DC::kLookupInteger/kLookupFloat: R2 R3 -> hashid: 0x2F82623ED7481B3D(begin-foreach)
            loc_15 - CODE: 0x00000A18 1C 02 02 00 DC::kCallFf: ( begin-foreach )
            loc_16 - CODE: 0x00000A20 43 02 00 00 DC::kMoveInteger/kMovePointer/kMove: R2, R0
            loc_17 - CODE: 0x00000A28 43 03 01 00 DC::kMoveInteger/kMovePointer/kMove: R3, R1
            loc_18 - CODE: 0x00000A30 20 02 02 03 DC::kIlt: R2 < R3
            loc_19 - CODE: 0x00000A38 2F EC 02 00 DC::kBranchIfNot: B loc_236
            loc_20 - CODE: 0x00000A40 15 02 04 00 DC::kLookupInteger/kLookupFloat: R2 R4 -> hashid: 0xDB044C8529474AEA(darray-at)
            loc_21 - CODE: 0x00000A48 15 03 01 00 DC::kLookupInteger/kLookupFloat: R3 R1 -> hashid: 0x064B2CA28F02B29E(get-spawners-by-tag)
            loc_22 - CODE: 0x00000A50 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 2E8A105432D77E7D(#2E8A105432D77E7D)
            loc_23 - CODE: 0x00000A58 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_24 - CODE: 0x00000A60 0C 06 00 00 DC::kLoadU16Immediate: R6, 0 | (0 << 0x8)
            loc_25 - CODE: 0x00000A68 0C 07 00 00 DC::kLoadU16Immediate: R7, 0 | (0 << 0x8)
            loc_26 - CODE: 0x00000A70 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_27 - CODE: 0x00000A78 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_28 - CODE: 0x00000A80 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_29 - CODE: 0x00000A88 43 34 07 00 DC::kMoveInteger/kMovePointer/kMove: R52, R7
            loc_30 - CODE: 0x00000A90 1C 03 03 04 DC::kCallFf: ( get-spawners-by-tag '#2E8A105432D77E7D '#0000000000000000 '#0000000000000000 '#0000000000000000 )
            loc_31 - CODE: 0x00000A98 43 04 00 00 DC::kMoveInteger/kMovePointer/kMove: R4, R0
            loc_32 - CODE: 0x00000AA0 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_33 - CODE: 0x00000AA8 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_34 - CODE: 0x00000AB0 1C 02 02 02 DC::kCallFf: ( darray-at 'get-spawners-by-tag '#0000000000000000 )
            loc_35 - CODE: 0x00000AB8 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_36 - CODE: 0x00000AC0 2F 2B 03 00 DC::kBranchIfNot: B loc_43
            loc_37 - CODE: 0x00000AC8 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_38 - CODE: 0x00000AD0 5D 03 00 00 DC::kAssertPointer:
            loc_39 - CODE: 0x00000AD8 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_40 - CODE: 0x00000AE0 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_41 - CODE: 0x00000AE8 0C 04 07 00 DC::kLoadU16Immediate: R4, 7 | (0 << 0x8)
            loc_42 - CODE: 0x00000AF0 1D 03 03 04 DC::kIeq: R3 == R4
            loc_43 - CODE: 0x00000AF8 2F 30 03 00 DC::kBranchIfNot: B loc_44
            loc_44 - CODE: 0x00000B00 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_45 - CODE: 0x00000B08 5D 03 00 00 DC::kAssertPointer:
            loc_46 - CODE: 0x00000B10 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_47 - CODE: 0x00000B18 2D 4B 00 00 DC::kBranch: B loc_75
            loc_48 - CODE: 0x00000B20 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_49 - CODE: 0x00000B28 2F 38 03 00 DC::kBranchIfNot: B loc_56
            loc_50 - CODE: 0x00000B30 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_51 - CODE: 0x00000B38 5D 03 00 00 DC::kAssertPointer:
            loc_52 - CODE: 0x00000B40 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_53 - CODE: 0x00000B48 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_54 - CODE: 0x00000B50 0C 04 05 00 DC::kLoadU16Immediate: R4, 5 | (0 << 0x8)
            loc_55 - CODE: 0x00000B58 1D 03 03 04 DC::kIeq: R3 == R4
            loc_56 - CODE: 0x00000B60 2F 3D 03 00 DC::kBranchIfNot: B loc_57
            loc_57 - CODE: 0x00000B68 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_58 - CODE: 0x00000B70 5D 03 00 00 DC::kAssertPointer:
            loc_59 - CODE: 0x00000B78 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_60 - CODE: 0x00000B80 2D 4B 00 00 DC::kBranch: B loc_75
            loc_61 - CODE: 0x00000B88 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_62 - CODE: 0x00000B90 2F 45 03 00 DC::kBranchIfNot: B loc_69
            loc_63 - CODE: 0x00000B98 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_64 - CODE: 0x00000BA0 5D 03 00 00 DC::kAssertPointer:
            loc_65 - CODE: 0x00000BA8 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_66 - CODE: 0x00000BB0 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_67 - CODE: 0x00000BB8 0C 04 04 00 DC::kLoadU16Immediate: R4, 4 | (0 << 0x8)
            loc_68 - CODE: 0x00000BC0 1D 03 03 04 DC::kIeq: R3 == R4
            loc_69 - CODE: 0x00000BC8 2F 4A 03 00 DC::kBranchIfNot: B loc_70
            loc_70 - CODE: 0x00000BD0 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_71 - CODE: 0x00000BD8 5D 03 00 00 DC::kAssertPointer:
            loc_72 - CODE: 0x00000BE0 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_73 - CODE: 0x00000BE8 2D 4B 00 00 DC::kBranch: B loc_75
            loc_74 - CODE: 0x00000BF0 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_75 - CODE: 0x00000BF8 43 02 03 00 DC::kMoveInteger/kMovePointer/kMove: R2, R3
            loc_76 - CODE: 0x00000C00 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x573E5609158C8746(tag-int32)
            loc_77 - CODE: 0x00000C08 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 2E8A105432D77E7D(#2E8A105432D77E7D)
            loc_78 - CODE: 0x00000C10 43 05 02 00 DC::kMoveInteger/kMovePointer/kMove: R5, R2
            loc_79 - CODE: 0x00000C18 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_80 - CODE: 0x00000C20 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_81 - CODE: 0x00000C28 1C 03 03 02 DC::kCallFf: ( tag-int32 '#2E8A105432D77E7D '#0000000000000000 )
            loc_82 - CODE: 0x00000C30 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_83 - CODE: 0x00000C38 1D 03 03 04 DC::kIeq: R3 == R4
            loc_84 - CODE: 0x00000C40 2F 63 03 00 DC::kBranchIfNot: B loc_85
            loc_85 - CODE: 0x00000C48 15 03 06 00 DC::kLookupInteger/kLookupFloat: R3 R6 -> hashid: 0x2E1754E916BAC4F7(darray-append)
            loc_86 - CODE: 0x00000C50 4A 04 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 7FD6EFB3F61AFF35(#7FD6EFB3F61AFF35)
            loc_87 - CODE: 0x00000C58 15 05 08 00 DC::kLookupInteger/kLookupFloat: R5 R8 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_88 - CODE: 0x00000C60 0C 06 07 00 DC::kLoadU16Immediate: R6, 7 | (0 << 0x8)
            loc_89 - CODE: 0x00000C68 43 07 02 00 DC::kMoveInteger/kMovePointer/kMove: R7, R2
            loc_90 - CODE: 0x00000C70 43 31 06 00 DC::kMoveInteger/kMovePointer/kMove: R49, R6
            loc_91 - CODE: 0x00000C78 43 32 07 00 DC::kMoveInteger/kMovePointer/kMove: R50, R7
            loc_92 - CODE: 0x00000C80 1C 05 05 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#0000000000000000 )
            loc_93 - CODE: 0x00000C88 0C 06 01 00 DC::kLoadU16Immediate: R6, 1 | (0 << 0x8)
            loc_94 - CODE: 0x00000C90 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_95 - CODE: 0x00000C98 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_96 - CODE: 0x00000CA0 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_97 - CODE: 0x00000CA8 1C 03 03 03 DC::kCallFf: ( darray-append '#7FD6EFB3F61AFF35 'new-boxed-value '#0000000000000001 )
            loc_98 - CODE: 0x00000CB0 2D E5 00 00 DC::kBranch: B loc_229
            loc_99 - CODE: 0x00000CB8 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x573E5609158C8746(tag-int32)
            loc_100 - CODE: 0x00000CC0 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 2E8A105432D77E7D(#2E8A105432D77E7D)
            loc_101 - CODE: 0x00000CC8 43 05 02 00 DC::kMoveInteger/kMovePointer/kMove: R5, R2
            loc_102 - CODE: 0x00000CD0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_103 - CODE: 0x00000CD8 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_104 - CODE: 0x00000CE0 1C 03 03 02 DC::kCallFf: ( tag-int32 '#2E8A105432D77E7D '#0000000000000000 )
            loc_105 - CODE: 0x00000CE8 0C 04 02 00 DC::kLoadU16Immediate: R4, 2 | (0 << 0x8)
            loc_106 - CODE: 0x00000CF0 1D 03 03 04 DC::kIeq: R3 == R4
            loc_107 - CODE: 0x00000CF8 2F 7A 03 00 DC::kBranchIfNot: B loc_108
            loc_108 - CODE: 0x00000D00 15 03 06 00 DC::kLookupInteger/kLookupFloat: R3 R6 -> hashid: 0x2E1754E916BAC4F7(darray-append)
            loc_109 - CODE: 0x00000D08 4A 04 09 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 7FD6ECB3F61AFA1C(#7FD6ECB3F61AFA1C)
            loc_110 - CODE: 0x00000D10 15 05 08 00 DC::kLookupInteger/kLookupFloat: R5 R8 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_111 - CODE: 0x00000D18 0C 06 07 00 DC::kLoadU16Immediate: R6, 7 | (0 << 0x8)
            loc_112 - CODE: 0x00000D20 43 07 02 00 DC::kMoveInteger/kMovePointer/kMove: R7, R2
            loc_113 - CODE: 0x00000D28 43 31 06 00 DC::kMoveInteger/kMovePointer/kMove: R49, R6
            loc_114 - CODE: 0x00000D30 43 32 07 00 DC::kMoveInteger/kMovePointer/kMove: R50, R7
            loc_115 - CODE: 0x00000D38 1C 05 05 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#0000000000000000 )
            loc_116 - CODE: 0x00000D40 0C 06 01 00 DC::kLoadU16Immediate: R6, 1 | (0 << 0x8)
            loc_117 - CODE: 0x00000D48 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_118 - CODE: 0x00000D50 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_119 - CODE: 0x00000D58 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_120 - CODE: 0x00000D60 1C 03 03 03 DC::kCallFf: ( darray-append '#7FD6ECB3F61AFA1C 'new-boxed-value '#0000000000000001 )
            loc_121 - CODE: 0x00000D68 2D E5 00 00 DC::kBranch: B loc_229
            loc_122 - CODE: 0x00000D70 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x573E5609158C8746(tag-int32)
            loc_123 - CODE: 0x00000D78 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 2E8A105432D77E7D(#2E8A105432D77E7D)
            loc_124 - CODE: 0x00000D80 43 05 02 00 DC::kMoveInteger/kMovePointer/kMove: R5, R2
            loc_125 - CODE: 0x00000D88 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_126 - CODE: 0x00000D90 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_127 - CODE: 0x00000D98 1C 03 03 02 DC::kCallFf: ( tag-int32 '#2E8A105432D77E7D '#0000000000000000 )
            loc_128 - CODE: 0x00000DA0 0C 04 03 00 DC::kLoadU16Immediate: R4, 3 | (0 << 0x8)
            loc_129 - CODE: 0x00000DA8 1D 03 03 04 DC::kIeq: R3 == R4
            loc_130 - CODE: 0x00000DB0 2F 91 03 00 DC::kBranchIfNot: B loc_131
            loc_131 - CODE: 0x00000DB8 15 03 06 00 DC::kLookupInteger/kLookupFloat: R3 R6 -> hashid: 0x2E1754E916BAC4F7(darray-append)
            loc_132 - CODE: 0x00000DC0 4A 04 0A 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 7FD6EDB3F61AFBCF(#7FD6EDB3F61AFBCF)
            loc_133 - CODE: 0x00000DC8 15 05 08 00 DC::kLookupInteger/kLookupFloat: R5 R8 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_134 - CODE: 0x00000DD0 0C 06 07 00 DC::kLoadU16Immediate: R6, 7 | (0 << 0x8)
            loc_135 - CODE: 0x00000DD8 43 07 02 00 DC::kMoveInteger/kMovePointer/kMove: R7, R2
            loc_136 - CODE: 0x00000DE0 43 31 06 00 DC::kMoveInteger/kMovePointer/kMove: R49, R6
            loc_137 - CODE: 0x00000DE8 43 32 07 00 DC::kMoveInteger/kMovePointer/kMove: R50, R7
            loc_138 - CODE: 0x00000DF0 1C 05 05 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#0000000000000000 )
            loc_139 - CODE: 0x00000DF8 0C 06 01 00 DC::kLoadU16Immediate: R6, 1 | (0 << 0x8)
            loc_140 - CODE: 0x00000E00 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_141 - CODE: 0x00000E08 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_142 - CODE: 0x00000E10 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_143 - CODE: 0x00000E18 1C 03 03 03 DC::kCallFf: ( darray-append '#7FD6EDB3F61AFBCF 'new-boxed-value '#0000000000000001 )
            loc_144 - CODE: 0x00000E20 2D E5 00 00 DC::kBranch: B loc_229
            loc_145 - CODE: 0x00000E28 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x573E5609158C8746(tag-int32)
            loc_146 - CODE: 0x00000E30 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 2E8A105432D77E7D(#2E8A105432D77E7D)
            loc_147 - CODE: 0x00000E38 43 05 02 00 DC::kMoveInteger/kMovePointer/kMove: R5, R2
            loc_148 - CODE: 0x00000E40 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_149 - CODE: 0x00000E48 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_150 - CODE: 0x00000E50 1C 03 03 02 DC::kCallFf: ( tag-int32 '#2E8A105432D77E7D '#0000000000000000 )
            loc_151 - CODE: 0x00000E58 0C 04 04 00 DC::kLoadU16Immediate: R4, 4 | (0 << 0x8)
            loc_152 - CODE: 0x00000E60 1D 03 03 04 DC::kIeq: R3 == R4
            loc_153 - CODE: 0x00000E68 2F A8 03 00 DC::kBranchIfNot: B loc_154
            loc_154 - CODE: 0x00000E70 15 03 06 00 DC::kLookupInteger/kLookupFloat: R3 R6 -> hashid: 0x2E1754E916BAC4F7(darray-append)
            loc_155 - CODE: 0x00000E78 4A 04 0B 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 7FD6EAB3F61AF6B6(#7FD6EAB3F61AF6B6)
            loc_156 - CODE: 0x00000E80 15 05 08 00 DC::kLookupInteger/kLookupFloat: R5 R8 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_157 - CODE: 0x00000E88 0C 06 07 00 DC::kLoadU16Immediate: R6, 7 | (0 << 0x8)
            loc_158 - CODE: 0x00000E90 43 07 02 00 DC::kMoveInteger/kMovePointer/kMove: R7, R2
            loc_159 - CODE: 0x00000E98 43 31 06 00 DC::kMoveInteger/kMovePointer/kMove: R49, R6
            loc_160 - CODE: 0x00000EA0 43 32 07 00 DC::kMoveInteger/kMovePointer/kMove: R50, R7
            loc_161 - CODE: 0x00000EA8 1C 05 05 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#0000000000000000 )
            loc_162 - CODE: 0x00000EB0 0C 06 01 00 DC::kLoadU16Immediate: R6, 1 | (0 << 0x8)
            loc_163 - CODE: 0x00000EB8 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_164 - CODE: 0x00000EC0 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_165 - CODE: 0x00000EC8 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_166 - CODE: 0x00000ED0 1C 03 03 03 DC::kCallFf: ( darray-append '#7FD6EAB3F61AF6B6 'new-boxed-value '#0000000000000001 )
            loc_167 - CODE: 0x00000ED8 2D E5 00 00 DC::kBranch: B loc_229
            loc_168 - CODE: 0x00000EE0 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x573E5609158C8746(tag-int32)
            loc_169 - CODE: 0x00000EE8 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 2E8A105432D77E7D(#2E8A105432D77E7D)
            loc_170 - CODE: 0x00000EF0 43 05 02 00 DC::kMoveInteger/kMovePointer/kMove: R5, R2
            loc_171 - CODE: 0x00000EF8 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_172 - CODE: 0x00000F00 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_173 - CODE: 0x00000F08 1C 03 03 02 DC::kCallFf: ( tag-int32 '#2E8A105432D77E7D '#0000000000000000 )
            loc_174 - CODE: 0x00000F10 0C 04 05 00 DC::kLoadU16Immediate: R4, 5 | (0 << 0x8)
            loc_175 - CODE: 0x00000F18 1D 03 03 04 DC::kIeq: R3 == R4
            loc_176 - CODE: 0x00000F20 2F BF 03 00 DC::kBranchIfNot: B loc_177
            loc_177 - CODE: 0x00000F28 15 03 06 00 DC::kLookupInteger/kLookupFloat: R3 R6 -> hashid: 0x2E1754E916BAC4F7(darray-append)
            loc_178 - CODE: 0x00000F30 4A 04 0C 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 7FD6EBB3F61AF869(#7FD6EBB3F61AF869)
            loc_179 - CODE: 0x00000F38 15 05 08 00 DC::kLookupInteger/kLookupFloat: R5 R8 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_180 - CODE: 0x00000F40 0C 06 07 00 DC::kLoadU16Immediate: R6, 7 | (0 << 0x8)
            loc_181 - CODE: 0x00000F48 43 07 02 00 DC::kMoveInteger/kMovePointer/kMove: R7, R2
            loc_182 - CODE: 0x00000F50 43 31 06 00 DC::kMoveInteger/kMovePointer/kMove: R49, R6
            loc_183 - CODE: 0x00000F58 43 32 07 00 DC::kMoveInteger/kMovePointer/kMove: R50, R7
            loc_184 - CODE: 0x00000F60 1C 05 05 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#0000000000000000 )
            loc_185 - CODE: 0x00000F68 0C 06 01 00 DC::kLoadU16Immediate: R6, 1 | (0 << 0x8)
            loc_186 - CODE: 0x00000F70 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_187 - CODE: 0x00000F78 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_188 - CODE: 0x00000F80 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_189 - CODE: 0x00000F88 1C 03 03 03 DC::kCallFf: ( darray-append '#7FD6EBB3F61AF869 'new-boxed-value '#0000000000000001 )
            loc_190 - CODE: 0x00000F90 2D E5 00 00 DC::kBranch: B loc_229
            loc_191 - CODE: 0x00000F98 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x573E5609158C8746(tag-int32)
            loc_192 - CODE: 0x00000FA0 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 2E8A105432D77E7D(#2E8A105432D77E7D)
            loc_193 - CODE: 0x00000FA8 43 05 02 00 DC::kMoveInteger/kMovePointer/kMove: R5, R2
            loc_194 - CODE: 0x00000FB0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_195 - CODE: 0x00000FB8 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_196 - CODE: 0x00000FC0 1C 03 03 02 DC::kCallFf: ( tag-int32 '#2E8A105432D77E7D '#0000000000000000 )
            loc_197 - CODE: 0x00000FC8 0C 04 06 00 DC::kLoadU16Immediate: R4, 6 | (0 << 0x8)
            loc_198 - CODE: 0x00000FD0 1D 03 03 04 DC::kIeq: R3 == R4
            loc_199 - CODE: 0x00000FD8 2F D6 03 00 DC::kBranchIfNot: B loc_200
            loc_200 - CODE: 0x00000FE0 15 03 06 00 DC::kLookupInteger/kLookupFloat: R3 R6 -> hashid: 0x2E1754E916BAC4F7(darray-append)
            loc_201 - CODE: 0x00000FE8 4A 04 0D 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 7FD6E8B3F61AF350(#7FD6E8B3F61AF350)
            loc_202 - CODE: 0x00000FF0 15 05 08 00 DC::kLookupInteger/kLookupFloat: R5 R8 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_203 - CODE: 0x00000FF8 0C 06 07 00 DC::kLoadU16Immediate: R6, 7 | (0 << 0x8)
            loc_204 - CODE: 0x00001000 43 07 02 00 DC::kMoveInteger/kMovePointer/kMove: R7, R2
            loc_205 - CODE: 0x00001008 43 31 06 00 DC::kMoveInteger/kMovePointer/kMove: R49, R6
            loc_206 - CODE: 0x00001010 43 32 07 00 DC::kMoveInteger/kMovePointer/kMove: R50, R7
            loc_207 - CODE: 0x00001018 1C 05 05 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#0000000000000000 )
            loc_208 - CODE: 0x00001020 0C 06 01 00 DC::kLoadU16Immediate: R6, 1 | (0 << 0x8)
            loc_209 - CODE: 0x00001028 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_210 - CODE: 0x00001030 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_211 - CODE: 0x00001038 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_212 - CODE: 0x00001040 1C 03 03 03 DC::kCallFf: ( darray-append '#7FD6E8B3F61AF350 'new-boxed-value '#0000000000000001 )
            loc_213 - CODE: 0x00001048 2D E5 00 00 DC::kBranch: B loc_229
            loc_214 - CODE: 0x00001050 15 03 0E 00 DC::kLookupInteger/kLookupFloat: R3 R14 -> hashid: 0x917303216620ACB6(is-final-build?)
            loc_215 - CODE: 0x00001058 1C 03 03 00 DC::kCallFf: ( is-final-build? )
            loc_216 - CODE: 0x00001060 30 03 03 00 DC::kNot: R3 R3
            loc_217 - CODE: 0x00001068 2F E4 03 00 DC::kBranchIfNot: B loc_218
            loc_218 - CODE: 0x00001070 15 03 0F 00 DC::kLookupInteger/kLookupFloat: R3 R15 -> hashid: 0xE64D0EF45AB45695(display)
            loc_219 - CODE: 0x00001078 15 04 10 00 DC::kLookupInteger/kLookupFloat: R4 R16 -> hashid: 0x5445173390656D6D(#5445173390656D6D)
            loc_220 - CODE: 0x00001080 41 05 11 00 DC::kLoadStaticPointerImm: R5, 000001C7FAEC9F7C // offset 1684C
            loc_221 - CODE: 0x00001088 43 31 05 00 DC::kMoveInteger/kMovePointer/kMove: R49, R5
            loc_222 - CODE: 0x00001090 1C 04 04 01 DC::kCallFf: ( #5445173390656D6D '#000000000001684C )
            loc_223 - CODE: 0x00001098 0C 05 13 00 DC::kLoadU16Immediate: R5, 19 | (0 << 0x8)
            loc_224 - CODE: 0x000010A0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_225 - CODE: 0x000010A8 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_226 - CODE: 0x000010B0 1C 03 03 02 DC::kCallFf: ( display '#5445173390656D6D '#0000000000000013 )
            loc_227 - CODE: 0x000010B8 2D E5 00 00 DC::kBranch: B loc_229
            loc_228 - CODE: 0x000010C0 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_229 - CODE: 0x000010C8 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_230 - CODE: 0x000010D0 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_231 - CODE: 0x000010D8 01 03 03 04 DC::kScriptCodeIAdd: R3, R3, R4
            loc_232 - CODE: 0x000010E0 43 00 03 00 DC::kMoveInteger/kMovePointer/kMove: R0, R3
            loc_233 - CODE: 0x000010E8 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_234 - CODE: 0x000010F0 43 02 03 00 DC::kMoveInteger/kMovePointer/kMove: R2, R3
            loc_235 - CODE: 0x000010F8 2D 10 00 00 DC::kBranch: B loc_16
            loc_236 - CODE: 0x00001100 15 02 12 00 DC::kLookupInteger/kLookupFloat: R2 R18 -> hashid: 0xB144A57CFDBD80D9(end-foreach)
            loc_237 - CODE: 0x00001108 1C 02 02 00 DC::kCallFf: ( end-foreach )
            loc_238 - CODE: 0x00001110 43 00 02 00 DC::kMoveInteger/kMovePointer/kMove: R0, R2
            loc_239 - CODE: 0x00001118 00 00 00 00 DC::kScriptCodeReturn: 0xB144A57CFDBD80D9
        )
)

Unhandled case @ 0x0000000000000058
    'd-array '#193FF04ADD813C9F = ???

(defun '#1B0A9903B50CAEDF
        (
            loc_0 - CODE: 0x00001228 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0xB96C7EEF7ACAB122(#B96C7EEF7ACAB122)
            loc_1 - CODE: 0x00001230 2F 06 00 00 DC::kBranchIfNot: B loc_6
            loc_2 - CODE: 0x00001238 15 00 00 01 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0xB96C7EEF7ACAB122(#B96C7EEF7ACAB122)
            loc_3 - CODE: 0x00001240 5D 00 00 00 DC::kAssertPointer:
            loc_4 - CODE: 0x00001248 3B 00 00 A1 DC::kIaddImm: R0, R0, 161
            loc_5 - CODE: 0x00001250 4C 00 00 00 DC::kLoadU8: R0, B96C7EEF7ACAB122
            loc_6 - CODE: 0x00001258 2F 0C 00 00 DC::kBranchIfNot: B loc_12
            loc_7 - CODE: 0x00001260 15 00 01 00 DC::kLookupInteger/kLookupFloat: R0 R1 -> hashid: 0x37B1139C687F2546(darray-count)
            loc_8 - CODE: 0x00001268 4A 01 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 5DB77A87064A4880(#5DB77A87064A4880)
            loc_9 - CODE: 0x00001270 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_10 - CODE: 0x00001278 1C 00 00 01 DC::kCallFf: ( darray-count '#5DB77A87064A4880 )
            loc_11 - CODE: 0x00001280 2D 12 00 00 DC::kBranch: B loc_18
            loc_12 - CODE: 0x00001288 15 00 03 00 DC::kLookupInteger/kLookupFloat: R0 R3 -> hashid: 0x88547F48DA223122(get-int32)
            loc_13 - CODE: 0x00001290 4A 01 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, F18F077253E7AE67(#F18F077253E7AE67)
            loc_14 - CODE: 0x00001298 4A 02 05 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R2, 2D19E518D40792B7(self)
            loc_15 - CODE: 0x000012A0 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_16 - CODE: 0x000012A8 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_17 - CODE: 0x000012B0 1C 00 00 02 DC::kCallFf: ( get-int32 '#F18F077253E7AE67 'self )
            loc_18 - CODE: 0x000012B8 0C 01 00 00 DC::kLoadU16Immediate: R1, 0 | (0 << 0x8)
            loc_19 - CODE: 0x000012C0 43 02 01 00 DC::kMoveInteger/kMovePointer/kMove: R2, R1
            loc_20 - CODE: 0x000012C8 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_21 - CODE: 0x000012D0 20 02 02 03 DC::kIlt: R2 < R3
            loc_22 - CODE: 0x000012D8 2F 37 02 00 DC::kBranchIfNot: B loc_23
            loc_23 - CODE: 0x000012E0 15 02 06 00 DC::kLookupInteger/kLookupFloat: R2 R6 -> hashid: 0xD38017D9196659C4(group-shuffle)
            loc_24 - CODE: 0x000012E8 4A 03 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 5DB77A87064A4880(#5DB77A87064A4880)
            loc_25 - CODE: 0x000012F0 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_26 - CODE: 0x000012F8 1B 02 02 01 DC::kCall: ( group-shuffle '#5DB77A87064A4880 )
            loc_27 - CODE: 0x00001300 15 02 07 00 DC::kLookupInteger/kLookupFloat: R2 R7 -> hashid: 0x2E1754E916BAC4F7(darray-append)
            loc_28 - CODE: 0x00001308 4A 03 08 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 49356079838C08B0(#49356079838C08B0)
            loc_29 - CODE: 0x00001310 15 04 09 00 DC::kLookupInteger/kLookupFloat: R4 R9 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_30 - CODE: 0x00001318 0C 05 07 00 DC::kLoadU16Immediate: R5, 7 | (0 << 0x8)
            loc_31 - CODE: 0x00001320 15 06 0A 00 DC::kLookupInteger/kLookupFloat: R6 R10 -> hashid: 0xA863D3A641A90D67(group-get-first-member)
            loc_32 - CODE: 0x00001328 4A 07 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R7, 5DB77A87064A4880(#5DB77A87064A4880)
            loc_33 - CODE: 0x00001330 43 31 07 00 DC::kMoveInteger/kMovePointer/kMove: R49, R7
            loc_34 - CODE: 0x00001338 1B 06 06 01 DC::kCall: ( group-get-first-member '#5DB77A87064A4880 )
            loc_35 - CODE: 0x00001340 43 31 05 00 DC::kMoveInteger/kMovePointer/kMove: R49, R5
            loc_36 - CODE: 0x00001348 43 32 06 00 DC::kMoveInteger/kMovePointer/kMove: R50, R6
            loc_37 - CODE: 0x00001350 1C 04 04 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 'group-get-first-member )
            loc_38 - CODE: 0x00001358 0C 05 01 00 DC::kLoadU16Immediate: R5, 1 | (0 << 0x8)
            loc_39 - CODE: 0x00001360 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_40 - CODE: 0x00001368 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_41 - CODE: 0x00001370 43 33 05 00 DC::kMoveInteger/kMovePointer/kMove: R51, R5
            loc_42 - CODE: 0x00001378 1C 02 02 03 DC::kCallFf: ( darray-append '#49356079838C08B0 'new-boxed-value '#0000000000000001 )
            loc_43 - CODE: 0x00001380 15 02 0B 00 DC::kLookupInteger/kLookupFloat: R2 R11 -> hashid: 0x7BDC7740B2C7C543(darray-remove)
            loc_44 - CODE: 0x00001388 4A 03 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 5DB77A87064A4880(#5DB77A87064A4880)
            loc_45 - CODE: 0x00001390 0C 04 00 00 DC::kLoadU16Immediate: R4, 0 | (0 << 0x8)
            loc_46 - CODE: 0x00001398 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_47 - CODE: 0x000013A0 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_48 - CODE: 0x000013A8 1C 02 02 02 DC::kCallFf: ( darray-remove '#5DB77A87064A4880 '#0000000000000000 )
            loc_49 - CODE: 0x000013B0 43 02 01 00 DC::kMoveInteger/kMovePointer/kMove: R2, R1
            loc_50 - CODE: 0x000013B8 0C 03 01 00 DC::kLoadU16Immediate: R3, 1 | (0 << 0x8)
            loc_51 - CODE: 0x000013C0 01 02 02 03 DC::kScriptCodeIAdd: R2, R2, R3
            loc_52 - CODE: 0x000013C8 43 01 02 00 DC::kMoveInteger/kMovePointer/kMove: R1, R2
            loc_53 - CODE: 0x000013D0 43 02 01 00 DC::kMoveInteger/kMovePointer/kMove: R2, R1
            loc_54 - CODE: 0x000013D8 2D 13 00 00 DC::kBranch: B loc_19
            loc_55 - CODE: 0x000013E0 43 01 02 00 DC::kMoveInteger/kMovePointer/kMove: R1, R2
            loc_56 - CODE: 0x000013E8 43 00 01 00 DC::kMoveInteger/kMovePointer/kMove: R0, R1
            loc_57 - CODE: 0x000013F0 15 00 0C 00 DC::kLookupInteger/kLookupFloat: R0 R12 -> hashid: 0xF337942CCA790A66(task-active?)
            loc_58 - CODE: 0x000013F8 4A 01 0D 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, EFDC3B2C4596801E(t2r-defense)
            loc_59 - CODE: 0x00001400 4A 02 0E 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R2, FAA82DA46843EB55(t2r-hospital-defense)
            loc_60 - CODE: 0x00001408 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_61 - CODE: 0x00001410 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_62 - CODE: 0x00001418 1B 00 00 02 DC::kCall: ( task-active? 't2r-defense 't2r-hospital-defense )
            loc_63 - CODE: 0x00001420 2F 4B 00 00 DC::kBranchIfNot: B loc_75
            loc_64 - CODE: 0x00001428 15 00 0F 00 DC::kLookupInteger/kLookupFloat: R0 R15 -> hashid: 0x79744AF88E92B5EB(darray-contains?)
            loc_65 - CODE: 0x00001430 4A 01 08 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 49356079838C08B0(#49356079838C08B0)
            loc_66 - CODE: 0x00001438 15 02 09 00 DC::kLookupInteger/kLookupFloat: R2 R9 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_67 - CODE: 0x00001440 0C 03 07 00 DC::kLoadU16Immediate: R3, 7 | (0 << 0x8)
            loc_68 - CODE: 0x00001448 4A 04 10 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, E1183DCEAF2232CB(#E1183DCEAF2232CB)
            loc_69 - CODE: 0x00001450 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_70 - CODE: 0x00001458 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_71 - CODE: 0x00001460 1C 02 02 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#E1183DCEAF2232CB )
            loc_72 - CODE: 0x00001468 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_73 - CODE: 0x00001470 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_74 - CODE: 0x00001478 1C 00 00 02 DC::kCallFf: ( darray-contains? '#49356079838C08B0 'new-boxed-value )
            loc_75 - CODE: 0x00001480 2F 57 00 00 DC::kBranchIfNot: B loc_87
            loc_76 - CODE: 0x00001488 15 00 0F 00 DC::kLookupInteger/kLookupFloat: R0 R15 -> hashid: 0x79744AF88E92B5EB(darray-contains?)
            loc_77 - CODE: 0x00001490 4A 01 08 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 49356079838C08B0(#49356079838C08B0)
            loc_78 - CODE: 0x00001498 15 02 09 00 DC::kLookupInteger/kLookupFloat: R2 R9 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_79 - CODE: 0x000014A0 0C 03 07 00 DC::kLoadU16Immediate: R3, 7 | (0 << 0x8)
            loc_80 - CODE: 0x000014A8 4A 04 11 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 9E486E339704DF00(#9E486E339704DF00)
            loc_81 - CODE: 0x000014B0 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_82 - CODE: 0x000014B8 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_83 - CODE: 0x000014C0 1C 02 02 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#9E486E339704DF00 )
            loc_84 - CODE: 0x000014C8 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_85 - CODE: 0x000014D0 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_86 - CODE: 0x000014D8 1C 00 00 02 DC::kCallFf: ( darray-contains? '#49356079838C08B0 'new-boxed-value )
            loc_87 - CODE: 0x000014E0 2F 63 00 00 DC::kBranchIfNot: B loc_99
            loc_88 - CODE: 0x000014E8 15 00 0F 00 DC::kLookupInteger/kLookupFloat: R0 R15 -> hashid: 0x79744AF88E92B5EB(darray-contains?)
            loc_89 - CODE: 0x000014F0 4A 01 08 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 49356079838C08B0(#49356079838C08B0)
            loc_90 - CODE: 0x000014F8 15 02 09 00 DC::kLookupInteger/kLookupFloat: R2 R9 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_91 - CODE: 0x00001500 0C 03 07 00 DC::kLoadU16Immediate: R3, 7 | (0 << 0x8)
            loc_92 - CODE: 0x00001508 4A 04 12 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 9E4F7C33970B1578(#9E4F7C33970B1578)
            loc_93 - CODE: 0x00001510 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_94 - CODE: 0x00001518 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_95 - CODE: 0x00001520 1C 02 02 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#9E4F7C33970B1578 )
            loc_96 - CODE: 0x00001528 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_97 - CODE: 0x00001530 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_98 - CODE: 0x00001538 1C 00 00 02 DC::kCallFf: ( darray-contains? '#49356079838C08B0 'new-boxed-value )
            loc_99 - CODE: 0x00001540 2F 77 00 00 DC::kBranchIfNot: B loc_119
            loc_100 - CODE: 0x00001548 15 00 13 00 DC::kLookupInteger/kLookupFloat: R0 R19 -> hashid: 0xF4D7341575F5AC87(kill-entity)
            loc_101 - CODE: 0x00001550 4A 01 14 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 9C900EB3D203CF22(window-1o3x2o0-rl1-dw910-1)
            loc_102 - CODE: 0x00001558 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_103 - CODE: 0x00001560 1C 00 00 01 DC::kCallFf: ( kill-entity 'window-1o3x2o0-rl1-dw910-1 )
            loc_104 - CODE: 0x00001568 15 00 15 00 DC::kLookupInteger/kLookupFloat: R0 R21 -> hashid: 0x9599515A51A1F98B(enable-action-pack)
            loc_105 - CODE: 0x00001570 4A 01 16 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 3082E981D664BB36(tap-vault-822)
            loc_106 - CODE: 0x00001578 0C 02 00 00 DC::kLoadU16Immediate: R2, 0 | (0 << 0x8)
            loc_107 - CODE: 0x00001580 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_108 - CODE: 0x00001588 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_109 - CODE: 0x00001590 1C 00 00 02 DC::kCallFf: ( enable-action-pack 'tap-vault-822 '#0000000000000000 )
            loc_110 - CODE: 0x00001598 15 00 17 00 DC::kLookupInteger/kLookupFloat: R0 R23 -> hashid: 0xD5B3A3A4579CC8F5(wait-one-frame)
            loc_111 - CODE: 0x000015A0 1C 00 00 00 DC::kCallFf: ( wait-one-frame )
            loc_112 - CODE: 0x000015A8 15 00 15 00 DC::kLookupInteger/kLookupFloat: R0 R21 -> hashid: 0x9599515A51A1F98B(enable-action-pack)
            loc_113 - CODE: 0x000015B0 4A 01 16 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 3082E981D664BB36(tap-vault-822)
            loc_114 - CODE: 0x000015B8 0C 02 01 00 DC::kLoadU16Immediate: R2, 1 | (0 << 0x8)
            loc_115 - CODE: 0x000015C0 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_116 - CODE: 0x000015C8 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_117 - CODE: 0x000015D0 1C 00 00 02 DC::kCallFf: ( enable-action-pack 'tap-vault-822 '#0000000000000001 )
            loc_118 - CODE: 0x000015D8 2D D6 00 00 DC::kBranch: B loc_214
            loc_119 - CODE: 0x000015E0 15 00 0C 00 DC::kLookupInteger/kLookupFloat: R0 R12 -> hashid: 0xF337942CCA790A66(task-active?)
            loc_120 - CODE: 0x000015E8 4A 01 0D 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, EFDC3B2C4596801E(t2r-defense)
            loc_121 - CODE: 0x000015F0 4A 02 18 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R2, 8F9FB44B8C668633(t2r-street-patrol-defense)
            loc_122 - CODE: 0x000015F8 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_123 - CODE: 0x00001600 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_124 - CODE: 0x00001608 1B 00 00 02 DC::kCall: ( task-active? 't2r-defense 't2r-street-patrol-defense )
            loc_125 - CODE: 0x00001610 2F D5 00 00 DC::kBranchIfNot: B loc_213
            loc_126 - CODE: 0x00001618 15 00 0F 00 DC::kLookupInteger/kLookupFloat: R0 R15 -> hashid: 0x79744AF88E92B5EB(darray-contains?)
            loc_127 - CODE: 0x00001620 4A 01 08 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 49356079838C08B0(#49356079838C08B0)
            loc_128 - CODE: 0x00001628 15 02 09 00 DC::kLookupInteger/kLookupFloat: R2 R9 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_129 - CODE: 0x00001630 0C 03 07 00 DC::kLoadU16Immediate: R3, 7 | (0 << 0x8)
            loc_130 - CODE: 0x00001638 4A 04 19 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 9E4F8233970B1FAA(#9E4F8233970B1FAA)
            loc_131 - CODE: 0x00001640 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_132 - CODE: 0x00001648 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_133 - CODE: 0x00001650 1C 02 02 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#9E4F8233970B1FAA )
            loc_134 - CODE: 0x00001658 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_135 - CODE: 0x00001660 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_136 - CODE: 0x00001668 1C 00 00 02 DC::kCallFf: ( darray-contains? '#49356079838C08B0 'new-boxed-value )
            loc_137 - CODE: 0x00001670 2F 90 00 00 DC::kBranchIfNot: B loc_144
            loc_138 - CODE: 0x00001678 0C 00 01 00 DC::kLoadU16Immediate: R0, 1 | (0 << 0x8)
            loc_139 - CODE: 0x00001680 15 01 01 00 DC::kLookupInteger/kLookupFloat: R1 R1 -> hashid: 0x37B1139C687F2546(darray-count)
            loc_140 - CODE: 0x00001688 4A 02 08 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R2, 49356079838C08B0(#49356079838C08B0)
            loc_141 - CODE: 0x00001690 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_142 - CODE: 0x00001698 1C 01 01 01 DC::kCallFf: ( darray-count '#49356079838C08B0 )
            loc_143 - CODE: 0x000016A0 1D 00 00 01 DC::kIeq: R0 == R1
            loc_144 - CODE: 0x000016A8 2F AC 00 00 DC::kBranchIfNot: B loc_145
            loc_145 - CODE: 0x000016B0 15 00 06 00 DC::kLookupInteger/kLookupFloat: R0 R6 -> hashid: 0xD38017D9196659C4(group-shuffle)
            loc_146 - CODE: 0x000016B8 4A 01 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 5DB77A87064A4880(#5DB77A87064A4880)
            loc_147 - CODE: 0x000016C0 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_148 - CODE: 0x000016C8 1B 00 00 01 DC::kCall: ( group-shuffle '#5DB77A87064A4880 )
            loc_149 - CODE: 0x000016D0 15 00 07 00 DC::kLookupInteger/kLookupFloat: R0 R7 -> hashid: 0x2E1754E916BAC4F7(darray-append)
            loc_150 - CODE: 0x000016D8 4A 01 08 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 49356079838C08B0(#49356079838C08B0)
            loc_151 - CODE: 0x000016E0 15 02 09 00 DC::kLookupInteger/kLookupFloat: R2 R9 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_152 - CODE: 0x000016E8 0C 03 07 00 DC::kLoadU16Immediate: R3, 7 | (0 << 0x8)
            loc_153 - CODE: 0x000016F0 15 04 0A 00 DC::kLookupInteger/kLookupFloat: R4 R10 -> hashid: 0xA863D3A641A90D67(group-get-first-member)
            loc_154 - CODE: 0x000016F8 4A 05 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, 5DB77A87064A4880(#5DB77A87064A4880)
            loc_155 - CODE: 0x00001700 43 31 05 00 DC::kMoveInteger/kMovePointer/kMove: R49, R5
            loc_156 - CODE: 0x00001708 1B 04 04 01 DC::kCall: ( group-get-first-member '#5DB77A87064A4880 )
            loc_157 - CODE: 0x00001710 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_158 - CODE: 0x00001718 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_159 - CODE: 0x00001720 1C 02 02 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 'group-get-first-member )
            loc_160 - CODE: 0x00001728 0C 03 01 00 DC::kLoadU16Immediate: R3, 1 | (0 << 0x8)
            loc_161 - CODE: 0x00001730 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_162 - CODE: 0x00001738 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_163 - CODE: 0x00001740 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_164 - CODE: 0x00001748 1C 00 00 03 DC::kCallFf: ( darray-append '#49356079838C08B0 'new-boxed-value '#0000000000000001 )
            loc_165 - CODE: 0x00001750 15 00 0B 00 DC::kLookupInteger/kLookupFloat: R0 R11 -> hashid: 0x7BDC7740B2C7C543(darray-remove)
            loc_166 - CODE: 0x00001758 4A 01 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 5DB77A87064A4880(#5DB77A87064A4880)
            loc_167 - CODE: 0x00001760 0C 02 00 00 DC::kLoadU16Immediate: R2, 0 | (0 << 0x8)
            loc_168 - CODE: 0x00001768 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_169 - CODE: 0x00001770 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_170 - CODE: 0x00001778 1C 00 00 02 DC::kCallFf: ( darray-remove '#5DB77A87064A4880 '#0000000000000000 )
            loc_171 - CODE: 0x00001780 2D D4 00 00 DC::kBranch: B loc_212
            loc_172 - CODE: 0x00001788 15 00 0F 00 DC::kLookupInteger/kLookupFloat: R0 R15 -> hashid: 0x79744AF88E92B5EB(darray-contains?)
            loc_173 - CODE: 0x00001790 4A 01 08 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 49356079838C08B0(#49356079838C08B0)
            loc_174 - CODE: 0x00001798 15 02 09 00 DC::kLookupInteger/kLookupFloat: R2 R9 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_175 - CODE: 0x000017A0 0C 03 07 00 DC::kLoadU16Immediate: R3, 7 | (0 << 0x8)
            loc_176 - CODE: 0x000017A8 4A 04 1A 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 9E4F7F33970B1A91(#9E4F7F33970B1A91)
            loc_177 - CODE: 0x000017B0 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_178 - CODE: 0x000017B8 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_179 - CODE: 0x000017C0 1C 02 02 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#9E4F7F33970B1A91 )
            loc_180 - CODE: 0x000017C8 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_181 - CODE: 0x000017D0 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_182 - CODE: 0x000017D8 1C 00 00 02 DC::kCallFf: ( darray-contains? '#49356079838C08B0 'new-boxed-value )
            loc_183 - CODE: 0x000017E0 2F D3 00 00 DC::kBranchIfNot: B loc_211
            loc_184 - CODE: 0x000017E8 15 00 07 00 DC::kLookupInteger/kLookupFloat: R0 R7 -> hashid: 0x2E1754E916BAC4F7(darray-append)
            loc_185 - CODE: 0x000017F0 4A 01 08 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 49356079838C08B0(#49356079838C08B0)
            loc_186 - CODE: 0x000017F8 15 02 09 00 DC::kLookupInteger/kLookupFloat: R2 R9 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_187 - CODE: 0x00001800 0C 03 07 00 DC::kLoadU16Immediate: R3, 7 | (0 << 0x8)
            loc_188 - CODE: 0x00001808 4A 04 1B 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 3A53AC8027F00F99(#3A53AC8027F00F99)
            loc_189 - CODE: 0x00001810 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_190 - CODE: 0x00001818 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_191 - CODE: 0x00001820 1C 02 02 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#3A53AC8027F00F99 )
            loc_192 - CODE: 0x00001828 0C 03 01 00 DC::kLoadU16Immediate: R3, 1 | (0 << 0x8)
            loc_193 - CODE: 0x00001830 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_194 - CODE: 0x00001838 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_195 - CODE: 0x00001840 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_196 - CODE: 0x00001848 1C 00 00 03 DC::kCallFf: ( darray-append '#49356079838C08B0 'new-boxed-value '#0000000000000001 )
            loc_197 - CODE: 0x00001850 15 00 07 00 DC::kLookupInteger/kLookupFloat: R0 R7 -> hashid: 0x2E1754E916BAC4F7(darray-append)
            loc_198 - CODE: 0x00001858 4A 01 08 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 49356079838C08B0(#49356079838C08B0)
            loc_199 - CODE: 0x00001860 15 02 09 00 DC::kLookupInteger/kLookupFloat: R2 R9 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_200 - CODE: 0x00001868 0C 03 07 00 DC::kLoadU16Immediate: R3, 7 | (0 << 0x8)
            loc_201 - CODE: 0x00001870 4A 04 1C 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 43C261802D7FB888(#43C261802D7FB888)
            loc_202 - CODE: 0x00001878 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_203 - CODE: 0x00001880 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_204 - CODE: 0x00001888 1C 02 02 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#43C261802D7FB888 )
            loc_205 - CODE: 0x00001890 0C 03 01 00 DC::kLoadU16Immediate: R3, 1 | (0 << 0x8)
            loc_206 - CODE: 0x00001898 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_207 - CODE: 0x000018A0 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_208 - CODE: 0x000018A8 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_209 - CODE: 0x000018B0 1C 00 00 03 DC::kCallFf: ( darray-append '#49356079838C08B0 'new-boxed-value '#0000000000000001 )
            loc_210 - CODE: 0x000018B8 2D D4 00 00 DC::kBranch: B loc_212
            loc_211 - CODE: 0x000018C0 0C 00 00 00 DC::kLoadU16Immediate: R0, 0 | (0 << 0x8)
            loc_212 - CODE: 0x000018C8 2D D6 00 00 DC::kBranch: B loc_214
            loc_213 - CODE: 0x000018D0 0C 00 00 00 DC::kLoadU16Immediate: R0, 0 | (0 << 0x8)
            loc_214 - CODE: 0x000018D8 00 00 00 00 DC::kScriptCodeReturn: 0x0000000000000000
        )
)

Unhandled case @ 0x0000000000000088
    'd-array '#1CBFC2CDCEA648EC = ???

(defun '#1E2286D8AA77FAEC
        (
            loc_0 - CODE: 0x00001A20 0C 00 00 00 DC::kLoadU16Immediate: R0, 0 | (0 << 0x8)
            loc_1 - CODE: 0x00001A28 15 01 00 00 DC::kLookupInteger/kLookupFloat: R1 R0 -> hashid: 0x37B1139C687F2546(darray-count)
            loc_2 - CODE: 0x00001A30 15 02 01 00 DC::kLookupInteger/kLookupFloat: R2 R1 -> hashid: 0x064B2CA28F02B29E(get-spawners-by-tag)
            loc_3 - CODE: 0x00001A38 4A 03 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 81E5F1ED578882E9(#81E5F1ED578882E9)
            loc_4 - CODE: 0x00001A40 0C 04 00 00 DC::kLoadU16Immediate: R4, 0 | (0 << 0x8)
            loc_5 - CODE: 0x00001A48 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_6 - CODE: 0x00001A50 0C 06 00 00 DC::kLoadU16Immediate: R6, 0 | (0 << 0x8)
            loc_7 - CODE: 0x00001A58 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_8 - CODE: 0x00001A60 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_9 - CODE: 0x00001A68 43 33 05 00 DC::kMoveInteger/kMovePointer/kMove: R51, R5
            loc_10 - CODE: 0x00001A70 43 34 06 00 DC::kMoveInteger/kMovePointer/kMove: R52, R6
            loc_11 - CODE: 0x00001A78 1C 02 02 04 DC::kCallFf: ( get-spawners-by-tag '#81E5F1ED578882E9 '#0000000000000000 '#0000000000000000 '#0000000000000000 )
            loc_12 - CODE: 0x00001A80 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_13 - CODE: 0x00001A88 1C 01 01 01 DC::kCallFf: ( darray-count 'get-spawners-by-tag )
            loc_14 - CODE: 0x00001A90 15 02 03 00 DC::kLookupInteger/kLookupFloat: R2 R3 -> hashid: 0x2F82623ED7481B3D(begin-foreach)
            loc_15 - CODE: 0x00001A98 1C 02 02 00 DC::kCallFf: ( begin-foreach )
            loc_16 - CODE: 0x00001AA0 43 02 00 00 DC::kMoveInteger/kMovePointer/kMove: R2, R0
            loc_17 - CODE: 0x00001AA8 43 03 01 00 DC::kMoveInteger/kMovePointer/kMove: R3, R1
            loc_18 - CODE: 0x00001AB0 20 02 02 03 DC::kIlt: R2 < R3
            loc_19 - CODE: 0x00001AB8 2F 5E 02 00 DC::kBranchIfNot: B loc_94
            loc_20 - CODE: 0x00001AC0 15 02 04 00 DC::kLookupInteger/kLookupFloat: R2 R4 -> hashid: 0xDB044C8529474AEA(darray-at)
            loc_21 - CODE: 0x00001AC8 15 03 01 00 DC::kLookupInteger/kLookupFloat: R3 R1 -> hashid: 0x064B2CA28F02B29E(get-spawners-by-tag)
            loc_22 - CODE: 0x00001AD0 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 81E5F1ED578882E9(#81E5F1ED578882E9)
            loc_23 - CODE: 0x00001AD8 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_24 - CODE: 0x00001AE0 0C 06 00 00 DC::kLoadU16Immediate: R6, 0 | (0 << 0x8)
            loc_25 - CODE: 0x00001AE8 0C 07 00 00 DC::kLoadU16Immediate: R7, 0 | (0 << 0x8)
            loc_26 - CODE: 0x00001AF0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_27 - CODE: 0x00001AF8 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_28 - CODE: 0x00001B00 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_29 - CODE: 0x00001B08 43 34 07 00 DC::kMoveInteger/kMovePointer/kMove: R52, R7
            loc_30 - CODE: 0x00001B10 1C 03 03 04 DC::kCallFf: ( get-spawners-by-tag '#81E5F1ED578882E9 '#0000000000000000 '#0000000000000000 '#0000000000000000 )
            loc_31 - CODE: 0x00001B18 43 04 00 00 DC::kMoveInteger/kMovePointer/kMove: R4, R0
            loc_32 - CODE: 0x00001B20 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_33 - CODE: 0x00001B28 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_34 - CODE: 0x00001B30 1C 02 02 02 DC::kCallFf: ( darray-at 'get-spawners-by-tag '#0000000000000000 )
            loc_35 - CODE: 0x00001B38 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_36 - CODE: 0x00001B40 2F 2B 03 00 DC::kBranchIfNot: B loc_43
            loc_37 - CODE: 0x00001B48 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_38 - CODE: 0x00001B50 5D 03 00 00 DC::kAssertPointer:
            loc_39 - CODE: 0x00001B58 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_40 - CODE: 0x00001B60 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_41 - CODE: 0x00001B68 0C 04 07 00 DC::kLoadU16Immediate: R4, 7 | (0 << 0x8)
            loc_42 - CODE: 0x00001B70 1D 03 03 04 DC::kIeq: R3 == R4
            loc_43 - CODE: 0x00001B78 2F 30 03 00 DC::kBranchIfNot: B loc_44
            loc_44 - CODE: 0x00001B80 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_45 - CODE: 0x00001B88 5D 03 00 00 DC::kAssertPointer:
            loc_46 - CODE: 0x00001B90 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_47 - CODE: 0x00001B98 2D 4B 00 00 DC::kBranch: B loc_75
            loc_48 - CODE: 0x00001BA0 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_49 - CODE: 0x00001BA8 2F 38 03 00 DC::kBranchIfNot: B loc_56
            loc_50 - CODE: 0x00001BB0 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_51 - CODE: 0x00001BB8 5D 03 00 00 DC::kAssertPointer:
            loc_52 - CODE: 0x00001BC0 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_53 - CODE: 0x00001BC8 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_54 - CODE: 0x00001BD0 0C 04 05 00 DC::kLoadU16Immediate: R4, 5 | (0 << 0x8)
            loc_55 - CODE: 0x00001BD8 1D 03 03 04 DC::kIeq: R3 == R4
            loc_56 - CODE: 0x00001BE0 2F 3D 03 00 DC::kBranchIfNot: B loc_57
            loc_57 - CODE: 0x00001BE8 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_58 - CODE: 0x00001BF0 5D 03 00 00 DC::kAssertPointer:
            loc_59 - CODE: 0x00001BF8 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_60 - CODE: 0x00001C00 2D 4B 00 00 DC::kBranch: B loc_75
            loc_61 - CODE: 0x00001C08 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_62 - CODE: 0x00001C10 2F 45 03 00 DC::kBranchIfNot: B loc_69
            loc_63 - CODE: 0x00001C18 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_64 - CODE: 0x00001C20 5D 03 00 00 DC::kAssertPointer:
            loc_65 - CODE: 0x00001C28 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_66 - CODE: 0x00001C30 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_67 - CODE: 0x00001C38 0C 04 04 00 DC::kLoadU16Immediate: R4, 4 | (0 << 0x8)
            loc_68 - CODE: 0x00001C40 1D 03 03 04 DC::kIeq: R3 == R4
            loc_69 - CODE: 0x00001C48 2F 4A 03 00 DC::kBranchIfNot: B loc_70
            loc_70 - CODE: 0x00001C50 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_71 - CODE: 0x00001C58 5D 03 00 00 DC::kAssertPointer:
            loc_72 - CODE: 0x00001C60 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_73 - CODE: 0x00001C68 2D 4B 00 00 DC::kBranch: B loc_75
            loc_74 - CODE: 0x00001C70 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_75 - CODE: 0x00001C78 43 02 03 00 DC::kMoveInteger/kMovePointer/kMove: R2, R3
            loc_76 - CODE: 0x00001C80 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x123B57C00EF4B676(entity-exists?)
            loc_77 - CODE: 0x00001C88 43 04 02 00 DC::kMoveInteger/kMovePointer/kMove: R4, R2
            loc_78 - CODE: 0x00001C90 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_79 - CODE: 0x00001C98 1C 03 03 01 DC::kCallFf: ( entity-exists? '#0000000000000000 )
            loc_80 - CODE: 0x00001CA0 2F 56 03 00 DC::kBranchIfNot: B loc_86
            loc_81 - CODE: 0x00001CA8 15 03 06 00 DC::kLookupInteger/kLookupFloat: R3 R6 -> hashid: 0xE9354E7BBA446DDA(interactable-disable)
            loc_82 - CODE: 0x00001CB0 43 04 02 00 DC::kMoveInteger/kMovePointer/kMove: R4, R2
            loc_83 - CODE: 0x00001CB8 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_84 - CODE: 0x00001CC0 1C 03 03 01 DC::kCallFf: ( interactable-disable '#0000000000000000 )
            loc_85 - CODE: 0x00001CC8 2D 57 00 00 DC::kBranch: B loc_87
            loc_86 - CODE: 0x00001CD0 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_87 - CODE: 0x00001CD8 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_88 - CODE: 0x00001CE0 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_89 - CODE: 0x00001CE8 01 03 03 04 DC::kScriptCodeIAdd: R3, R3, R4
            loc_90 - CODE: 0x00001CF0 43 00 03 00 DC::kMoveInteger/kMovePointer/kMove: R0, R3
            loc_91 - CODE: 0x00001CF8 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_92 - CODE: 0x00001D00 43 02 03 00 DC::kMoveInteger/kMovePointer/kMove: R2, R3
            loc_93 - CODE: 0x00001D08 2D 10 00 00 DC::kBranch: B loc_16
            loc_94 - CODE: 0x00001D10 15 02 07 00 DC::kLookupInteger/kLookupFloat: R2 R7 -> hashid: 0xB144A57CFDBD80D9(end-foreach)
            loc_95 - CODE: 0x00001D18 1C 02 02 00 DC::kCallFf: ( end-foreach )
            loc_96 - CODE: 0x00001D20 43 00 02 00 DC::kMoveInteger/kMovePointer/kMove: R0, R2
            loc_97 - CODE: 0x00001D28 00 00 00 00 DC::kScriptCodeReturn: 0xB144A57CFDBD80D9
        )
)

(defun '#25E7D5F88785AFD9
        (
            loc_0 - CODE: 0x00001DC8 0C 00 00 00 DC::kLoadU16Immediate: R0, 0 | (0 << 0x8)
            loc_1 - CODE: 0x00001DD0 15 01 00 00 DC::kLookupInteger/kLookupFloat: R1 R0 -> hashid: 0x37B1139C687F2546(darray-count)
            loc_2 - CODE: 0x00001DD8 15 02 01 00 DC::kLookupInteger/kLookupFloat: R2 R1 -> hashid: 0x5690F8DE53AD4943(#5690F8DE53AD4943)
            loc_3 - CODE: 0x00001DE0 4A 03 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 0FCC25C0CB675047(#0FCC25C0CB675047)
            loc_4 - CODE: 0x00001DE8 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_5 - CODE: 0x00001DF0 1B 02 02 01 DC::kCall: ( #5690F8DE53AD4943 '#0FCC25C0CB675047 )
            loc_6 - CODE: 0x00001DF8 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_7 - CODE: 0x00001E00 1C 01 01 01 DC::kCallFf: ( darray-count '#5690F8DE53AD4943 )
            loc_8 - CODE: 0x00001E08 15 02 03 00 DC::kLookupInteger/kLookupFloat: R2 R3 -> hashid: 0x2F82623ED7481B3D(begin-foreach)
            loc_9 - CODE: 0x00001E10 1C 02 02 00 DC::kCallFf: ( begin-foreach )
            loc_10 - CODE: 0x00001E18 43 02 00 00 DC::kMoveInteger/kMovePointer/kMove: R2, R0
            loc_11 - CODE: 0x00001E20 43 03 01 00 DC::kMoveInteger/kMovePointer/kMove: R3, R1
            loc_12 - CODE: 0x00001E28 20 02 02 03 DC::kIlt: R2 < R3
            loc_13 - CODE: 0x00001E30 2F 7C 02 00 DC::kBranchIfNot: B loc_124
            loc_14 - CODE: 0x00001E38 15 02 04 00 DC::kLookupInteger/kLookupFloat: R2 R4 -> hashid: 0xDB044C8529474AEA(darray-at)
            loc_15 - CODE: 0x00001E40 15 03 01 00 DC::kLookupInteger/kLookupFloat: R3 R1 -> hashid: 0x5690F8DE53AD4943(#5690F8DE53AD4943)
            loc_16 - CODE: 0x00001E48 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 0FCC25C0CB675047(#0FCC25C0CB675047)
            loc_17 - CODE: 0x00001E50 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_18 - CODE: 0x00001E58 1B 03 03 01 DC::kCall: ( #5690F8DE53AD4943 '#0FCC25C0CB675047 )
            loc_19 - CODE: 0x00001E60 43 04 00 00 DC::kMoveInteger/kMovePointer/kMove: R4, R0
            loc_20 - CODE: 0x00001E68 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_21 - CODE: 0x00001E70 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_22 - CODE: 0x00001E78 1C 02 02 02 DC::kCallFf: ( darray-at '#5690F8DE53AD4943 '#0000000000000000 )
            loc_23 - CODE: 0x00001E80 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_24 - CODE: 0x00001E88 2F 1F 03 00 DC::kBranchIfNot: B loc_31
            loc_25 - CODE: 0x00001E90 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_26 - CODE: 0x00001E98 5D 03 00 00 DC::kAssertPointer:
            loc_27 - CODE: 0x00001EA0 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_28 - CODE: 0x00001EA8 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_29 - CODE: 0x00001EB0 0C 04 07 00 DC::kLoadU16Immediate: R4, 7 | (0 << 0x8)
            loc_30 - CODE: 0x00001EB8 1D 03 03 04 DC::kIeq: R3 == R4
            loc_31 - CODE: 0x00001EC0 2F 24 03 00 DC::kBranchIfNot: B loc_32
            loc_32 - CODE: 0x00001EC8 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_33 - CODE: 0x00001ED0 5D 03 00 00 DC::kAssertPointer:
            loc_34 - CODE: 0x00001ED8 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_35 - CODE: 0x00001EE0 2D 3F 00 00 DC::kBranch: B loc_63
            loc_36 - CODE: 0x00001EE8 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_37 - CODE: 0x00001EF0 2F 2C 03 00 DC::kBranchIfNot: B loc_44
            loc_38 - CODE: 0x00001EF8 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_39 - CODE: 0x00001F00 5D 03 00 00 DC::kAssertPointer:
            loc_40 - CODE: 0x00001F08 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_41 - CODE: 0x00001F10 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_42 - CODE: 0x00001F18 0C 04 05 00 DC::kLoadU16Immediate: R4, 5 | (0 << 0x8)
            loc_43 - CODE: 0x00001F20 1D 03 03 04 DC::kIeq: R3 == R4
            loc_44 - CODE: 0x00001F28 2F 31 03 00 DC::kBranchIfNot: B loc_45
            loc_45 - CODE: 0x00001F30 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_46 - CODE: 0x00001F38 5D 03 00 00 DC::kAssertPointer:
            loc_47 - CODE: 0x00001F40 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_48 - CODE: 0x00001F48 2D 3F 00 00 DC::kBranch: B loc_63
            loc_49 - CODE: 0x00001F50 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_50 - CODE: 0x00001F58 2F 39 03 00 DC::kBranchIfNot: B loc_57
            loc_51 - CODE: 0x00001F60 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_52 - CODE: 0x00001F68 5D 03 00 00 DC::kAssertPointer:
            loc_53 - CODE: 0x00001F70 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_54 - CODE: 0x00001F78 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_55 - CODE: 0x00001F80 0C 04 04 00 DC::kLoadU16Immediate: R4, 4 | (0 << 0x8)
            loc_56 - CODE: 0x00001F88 1D 03 03 04 DC::kIeq: R3 == R4
            loc_57 - CODE: 0x00001F90 2F 3E 03 00 DC::kBranchIfNot: B loc_58
            loc_58 - CODE: 0x00001F98 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_59 - CODE: 0x00001FA0 5D 03 00 00 DC::kAssertPointer:
            loc_60 - CODE: 0x00001FA8 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_61 - CODE: 0x00001FB0 2D 3F 00 00 DC::kBranch: B loc_63
            loc_62 - CODE: 0x00001FB8 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_63 - CODE: 0x00001FC0 43 02 03 00 DC::kMoveInteger/kMovePointer/kMove: R2, R3
            loc_64 - CODE: 0x00001FC8 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x00C080FBFC4C4D86(get-boolean)
            loc_65 - CODE: 0x00001FD0 4A 04 06 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, BB2330E582B47BBD(#BB2330E582B47BBD)
            loc_66 - CODE: 0x00001FD8 4A 05 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, 2D19E518D40792B7(self)
            loc_67 - CODE: 0x00001FE0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_68 - CODE: 0x00001FE8 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_69 - CODE: 0x00001FF0 1C 03 03 02 DC::kCallFf: ( get-boolean '#BB2330E582B47BBD 'self )
            loc_70 - CODE: 0x00001FF8 30 03 03 00 DC::kNot: R3 R3
            loc_71 - CODE: 0x00002000 2F 53 03 00 DC::kBranchIfNot: B loc_72
            loc_72 - CODE: 0x00002008 15 03 08 00 DC::kLookupInteger/kLookupFloat: R3 R8 -> hashid: 0x395C30ADA4413111(#395C30ADA4413111)
            loc_73 - CODE: 0x00002010 4A 04 09 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 289E392F06ED8265(#289E392F06ED8265)
            loc_74 - CODE: 0x00002018 0C 05 01 00 DC::kLoadU16Immediate: R5, 1 | (0 << 0x8)
            loc_75 - CODE: 0x00002020 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_76 - CODE: 0x00002028 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_77 - CODE: 0x00002030 1B 03 03 02 DC::kCall: ( #395C30ADA4413111 '#289E392F06ED8265 '#0000000000000001 )
            loc_78 - CODE: 0x00002038 15 03 0A 00 DC::kLookupInteger/kLookupFloat: R3 R10 -> hashid: 0x63EA3189A921370C(#63EA3189A921370C)
            loc_79 - CODE: 0x00002040 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_80 - CODE: 0x00002048 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_81 - CODE: 0x00002050 1B 03 03 01 DC::kCall: ( #63EA3189A921370C '#0000000000000001 )
            loc_82 - CODE: 0x00002058 2D 54 00 00 DC::kBranch: B loc_84
            loc_83 - CODE: 0x00002060 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_84 - CODE: 0x00002068 15 03 0B 00 DC::kLookupInteger/kLookupFloat: R3 R11 -> hashid: 0xB01A3D0B241EF695(npc-set-combat-params)
            loc_85 - CODE: 0x00002070 15 04 0C 00 DC::kLookupInteger/kLookupFloat: R4 R12 -> hashid: 0xF03BEED169C9A5C6(get-symbol)
            loc_86 - CODE: 0x00002078 4A 05 0D 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, 43FEF6458EB0E749(#43FEF6458EB0E749)
            loc_87 - CODE: 0x00002080 4A 06 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R6, 2D19E518D40792B7(self)
            loc_88 - CODE: 0x00002088 43 31 05 00 DC::kMoveInteger/kMovePointer/kMove: R49, R5
            loc_89 - CODE: 0x00002090 43 32 06 00 DC::kMoveInteger/kMovePointer/kMove: R50, R6
            loc_90 - CODE: 0x00002098 1C 04 04 02 DC::kCallFf: ( get-symbol '#43FEF6458EB0E749 'self )
            loc_91 - CODE: 0x000020A0 4A 05 0E 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, 5296AE9C8EB63B3D(*ski-escape-gallows-buddy-combat-params*)
            loc_92 - CODE: 0x000020A8 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_93 - CODE: 0x000020B0 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_94 - CODE: 0x000020B8 1C 03 03 02 DC::kCallFf: ( npc-set-combat-params 'get-symbol '*ski-escape-gallows-buddy-combat-params* )
            loc_95 - CODE: 0x000020C0 15 03 0F 00 DC::kLookupInteger/kLookupFloat: R3 R15 -> hashid: 0xCA4C74CF0DC3D3D9(npc-bloater?)
            loc_96 - CODE: 0x000020C8 43 04 02 00 DC::kMoveInteger/kMovePointer/kMove: R4, R2
            loc_97 - CODE: 0x000020D0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_98 - CODE: 0x000020D8 1B 03 03 01 DC::kCall: ( npc-bloater? '#0000000000000000 )
            loc_99 - CODE: 0x000020E0 30 03 03 00 DC::kNot: R3 R3
            loc_100 - CODE: 0x000020E8 2F 6C 03 00 DC::kBranchIfNot: B loc_101
            loc_101 - CODE: 0x000020F0 15 03 10 00 DC::kLookupInteger/kLookupFloat: R3 R16 -> hashid: 0x9F91780CB512C9A4(npc-set-targeting-params)
            loc_102 - CODE: 0x000020F8 43 04 02 00 DC::kMoveInteger/kMovePointer/kMove: R4, R2
            loc_103 - CODE: 0x00002100 4A 05 11 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, BD1EE4DCADC93372(#BD1EE4DCADC93372)
            loc_104 - CODE: 0x00002108 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_105 - CODE: 0x00002110 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_106 - CODE: 0x00002118 1C 03 03 02 DC::kCallFf: ( npc-set-targeting-params '#0000000000000000 '#BD1EE4DCADC93372 )
            loc_107 - CODE: 0x00002120 2D 6D 00 00 DC::kBranch: B loc_109
            loc_108 - CODE: 0x00002128 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_109 - CODE: 0x00002130 15 03 12 00 DC::kLookupInteger/kLookupFloat: R3 R18 -> hashid: 0xFF17C0DCE7D03192(set-boolean)
            loc_110 - CODE: 0x00002138 4A 04 06 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, BB2330E582B47BBD(#BB2330E582B47BBD)
            loc_111 - CODE: 0x00002140 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_112 - CODE: 0x00002148 4A 06 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R6, 2D19E518D40792B7(self)
            loc_113 - CODE: 0x00002150 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_114 - CODE: 0x00002158 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_115 - CODE: 0x00002160 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_116 - CODE: 0x00002168 1C 03 03 03 DC::kCallFf: ( set-boolean '#BB2330E582B47BBD '#0000000000000000 'self )
            loc_117 - CODE: 0x00002170 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_118 - CODE: 0x00002178 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_119 - CODE: 0x00002180 01 03 03 04 DC::kScriptCodeIAdd: R3, R3, R4
            loc_120 - CODE: 0x00002188 43 00 03 00 DC::kMoveInteger/kMovePointer/kMove: R0, R3
            loc_121 - CODE: 0x00002190 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_122 - CODE: 0x00002198 43 02 03 00 DC::kMoveInteger/kMovePointer/kMove: R2, R3
            loc_123 - CODE: 0x000021A0 2D 0A 00 00 DC::kBranch: B loc_10
            loc_124 - CODE: 0x000021A8 15 02 13 00 DC::kLookupInteger/kLookupFloat: R2 R19 -> hashid: 0xB144A57CFDBD80D9(end-foreach)
            loc_125 - CODE: 0x000021B0 1C 02 02 00 DC::kCallFf: ( end-foreach )
            loc_126 - CODE: 0x000021B8 43 00 02 00 DC::kMoveInteger/kMovePointer/kMove: R0, R2
            loc_127 - CODE: 0x000021C0 15 00 14 00 DC::kLookupInteger/kLookupFloat: R0 R20 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_128 - CODE: 0x000021C8 4A 01 15 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 666A36D5D105DD03(#666A36D5D105DD03)
            loc_129 - CODE: 0x000021D0 15 02 16 00 DC::kLookupInteger/kLookupFloat: R2 R22 -> hashid: 0x88547F48DA223122(get-int32)
            loc_130 - CODE: 0x000021D8 4A 03 17 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 4734285FD89016B2(#4734285FD89016B2)
            loc_131 - CODE: 0x000021E0 4A 04 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 2D19E518D40792B7(self)
            loc_132 - CODE: 0x000021E8 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_133 - CODE: 0x000021F0 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_134 - CODE: 0x000021F8 1C 02 02 02 DC::kCallFf: ( get-int32 '#4734285FD89016B2 'self )
            loc_135 - CODE: 0x00002200 4A 03 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_136 - CODE: 0x00002208 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_137 - CODE: 0x00002210 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_138 - CODE: 0x00002218 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_139 - CODE: 0x00002220 1C 00 00 03 DC::kCallFf: ( set-int32 '#666A36D5D105DD03 'get-int32 'self )
            loc_140 - CODE: 0x00002228 15 00 12 00 DC::kLookupInteger/kLookupFloat: R0 R18 -> hashid: 0xFF17C0DCE7D03192(set-boolean)
            loc_141 - CODE: 0x00002230 4A 01 18 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, A5649F440B443FFF(#A5649F440B443FFF)
            loc_142 - CODE: 0x00002238 0C 02 00 00 DC::kLoadU16Immediate: R2, 0 | (0 << 0x8)
            loc_143 - CODE: 0x00002240 4A 03 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_144 - CODE: 0x00002248 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_145 - CODE: 0x00002250 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_146 - CODE: 0x00002258 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_147 - CODE: 0x00002260 1C 00 00 03 DC::kCallFf: ( set-boolean '#A5649F440B443FFF '#0000000000000000 'self )
            loc_148 - CODE: 0x00002268 00 00 00 00 DC::kScriptCodeReturn: 0xFF17C0DCE7D03192
        )
)

(defun '#26FF1ED42567F2B2
        (
            loc_0 - CODE: 0x00007360 43 00 31 00 DC::kMoveInteger/kMovePointer/kMove: R0, R49
            loc_1 - CODE: 0x00007368 0C 01 00 00 DC::kLoadU16Immediate: R1, 0 | (0 << 0x8)
            loc_2 - CODE: 0x00007370 15 02 00 00 DC::kLookupInteger/kLookupFloat: R2 R0 -> hashid: 0x37B1139C687F2546(darray-count)
            loc_3 - CODE: 0x00007378 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_4 - CODE: 0x00007380 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_5 - CODE: 0x00007388 1C 02 02 01 DC::kCallFf: ( darray-count '#0000000000000000 )
            loc_6 - CODE: 0x00007390 15 03 01 00 DC::kLookupInteger/kLookupFloat: R3 R1 -> hashid: 0x2F82623ED7481B3D(begin-foreach)
            loc_7 - CODE: 0x00007398 1C 03 03 00 DC::kCallFf: ( begin-foreach )
            loc_8 - CODE: 0x000073A0 43 03 01 00 DC::kMoveInteger/kMovePointer/kMove: R3, R1
            loc_9 - CODE: 0x000073A8 43 04 02 00 DC::kMoveInteger/kMovePointer/kMove: R4, R2
            loc_10 - CODE: 0x000073B0 20 03 03 04 DC::kIlt: R3 < R4
            loc_11 - CODE: 0x000073B8 2F 4A 03 00 DC::kBranchIfNot: B loc_74
            loc_12 - CODE: 0x000073C0 15 03 02 00 DC::kLookupInteger/kLookupFloat: R3 R2 -> hashid: 0xDB044C8529474AEA(darray-at)
            loc_13 - CODE: 0x000073C8 43 04 00 00 DC::kMoveInteger/kMovePointer/kMove: R4, R0
            loc_14 - CODE: 0x000073D0 43 05 01 00 DC::kMoveInteger/kMovePointer/kMove: R5, R1
            loc_15 - CODE: 0x000073D8 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_16 - CODE: 0x000073E0 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_17 - CODE: 0x000073E8 1C 03 03 02 DC::kCallFf: ( darray-at '#0000000000000000 '#0000000000000000 )
            loc_18 - CODE: 0x000073F0 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_19 - CODE: 0x000073F8 2F 1A 04 00 DC::kBranchIfNot: B loc_26
            loc_20 - CODE: 0x00007400 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_21 - CODE: 0x00007408 5D 04 00 00 DC::kAssertPointer:
            loc_22 - CODE: 0x00007410 3B 04 04 0C DC::kIaddImm: R4, R4, 12
            loc_23 - CODE: 0x00007418 4E 04 04 00 DC::kLoadU16: R4, B144A57CFDBD80D9
            loc_24 - CODE: 0x00007420 0C 05 07 00 DC::kLoadU16Immediate: R5, 7 | (0 << 0x8)
            loc_25 - CODE: 0x00007428 1D 04 04 05 DC::kIeq: R4 == R5
            loc_26 - CODE: 0x00007430 2F 1F 04 00 DC::kBranchIfNot: B loc_27
            loc_27 - CODE: 0x00007438 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_28 - CODE: 0x00007440 5D 04 00 00 DC::kAssertPointer:
            loc_29 - CODE: 0x00007448 51 04 04 00 DC::kLoadPointer/kLoadI64/kLoadU64: R4, R4
            loc_30 - CODE: 0x00007450 2D 3A 00 00 DC::kBranch: B loc_58
            loc_31 - CODE: 0x00007458 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_32 - CODE: 0x00007460 2F 27 04 00 DC::kBranchIfNot: B loc_39
            loc_33 - CODE: 0x00007468 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_34 - CODE: 0x00007470 5D 04 00 00 DC::kAssertPointer:
            loc_35 - CODE: 0x00007478 3B 04 04 0C DC::kIaddImm: R4, R4, 12
            loc_36 - CODE: 0x00007480 4E 04 04 00 DC::kLoadU16: R4, B144A57CFDBD80D9
            loc_37 - CODE: 0x00007488 0C 05 05 00 DC::kLoadU16Immediate: R5, 5 | (0 << 0x8)
            loc_38 - CODE: 0x00007490 1D 04 04 05 DC::kIeq: R4 == R5
            loc_39 - CODE: 0x00007498 2F 2C 04 00 DC::kBranchIfNot: B loc_40
            loc_40 - CODE: 0x000074A0 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_41 - CODE: 0x000074A8 5D 04 00 00 DC::kAssertPointer:
            loc_42 - CODE: 0x000074B0 51 04 04 00 DC::kLoadPointer/kLoadI64/kLoadU64: R4, R4
            loc_43 - CODE: 0x000074B8 2D 3A 00 00 DC::kBranch: B loc_58
            loc_44 - CODE: 0x000074C0 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_45 - CODE: 0x000074C8 2F 34 04 00 DC::kBranchIfNot: B loc_52
            loc_46 - CODE: 0x000074D0 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_47 - CODE: 0x000074D8 5D 04 00 00 DC::kAssertPointer:
            loc_48 - CODE: 0x000074E0 3B 04 04 0C DC::kIaddImm: R4, R4, 12
            loc_49 - CODE: 0x000074E8 4E 04 04 00 DC::kLoadU16: R4, B144A57CFDBD80D9
            loc_50 - CODE: 0x000074F0 0C 05 04 00 DC::kLoadU16Immediate: R5, 4 | (0 << 0x8)
            loc_51 - CODE: 0x000074F8 1D 04 04 05 DC::kIeq: R4 == R5
            loc_52 - CODE: 0x00007500 2F 39 04 00 DC::kBranchIfNot: B loc_53
            loc_53 - CODE: 0x00007508 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_54 - CODE: 0x00007510 5D 04 00 00 DC::kAssertPointer:
            loc_55 - CODE: 0x00007518 51 04 04 00 DC::kLoadPointer/kLoadI64/kLoadU64: R4, R4
            loc_56 - CODE: 0x00007520 2D 3A 00 00 DC::kBranch: B loc_58
            loc_57 - CODE: 0x00007528 0C 04 00 00 DC::kLoadU16Immediate: R4, 0 | (0 << 0x8)
            loc_58 - CODE: 0x00007530 43 03 04 00 DC::kMoveInteger/kMovePointer/kMove: R3, R4
            loc_59 - CODE: 0x00007538 15 04 03 00 DC::kLookupInteger/kLookupFloat: R4 R3 -> hashid: 0x01B0043CB1358D18(spawn-entity)
            loc_60 - CODE: 0x00007540 43 05 03 00 DC::kMoveInteger/kMovePointer/kMove: R5, R3
            loc_61 - CODE: 0x00007548 0C 06 00 00 DC::kLoadU16Immediate: R6, 0 | (0 << 0x8)
            loc_62 - CODE: 0x00007550 0C 07 00 00 DC::kLoadU16Immediate: R7, 0 | (0 << 0x8)
            loc_63 - CODE: 0x00007558 43 31 05 00 DC::kMoveInteger/kMovePointer/kMove: R49, R5
            loc_64 - CODE: 0x00007560 43 32 06 00 DC::kMoveInteger/kMovePointer/kMove: R50, R6
            loc_65 - CODE: 0x00007568 43 33 07 00 DC::kMoveInteger/kMovePointer/kMove: R51, R7
            loc_66 - CODE: 0x00007570 1C 04 04 03 DC::kCallFf: ( spawn-entity '#0000000000000000 '#0000000000000000 '#0000000000000000 )
            loc_67 - CODE: 0x00007578 43 04 01 00 DC::kMoveInteger/kMovePointer/kMove: R4, R1
            loc_68 - CODE: 0x00007580 0C 05 01 00 DC::kLoadU16Immediate: R5, 1 | (0 << 0x8)
            loc_69 - CODE: 0x00007588 01 04 04 05 DC::kScriptCodeIAdd: R4, R4, R5
            loc_70 - CODE: 0x00007590 43 01 04 00 DC::kMoveInteger/kMovePointer/kMove: R1, R4
            loc_71 - CODE: 0x00007598 43 04 01 00 DC::kMoveInteger/kMovePointer/kMove: R4, R1
            loc_72 - CODE: 0x000075A0 43 03 04 00 DC::kMoveInteger/kMovePointer/kMove: R3, R4
            loc_73 - CODE: 0x000075A8 2D 08 00 00 DC::kBranch: B loc_8
            loc_74 - CODE: 0x000075B0 15 03 04 00 DC::kLookupInteger/kLookupFloat: R3 R4 -> hashid: 0xB144A57CFDBD80D9(end-foreach)
            loc_75 - CODE: 0x000075B8 1C 03 03 00 DC::kCallFf: ( end-foreach )
            loc_76 - CODE: 0x000075C0 43 01 03 00 DC::kMoveInteger/kMovePointer/kMove: R1, R3
            loc_77 - CODE: 0x000075C8 00 01 01 00 DC::kScriptCodeReturn: 0xB144A57CFDBD80D9
        )
)

Unhandled case @ 0x00000000000000E8
    'd-array '#2E2D541C67B711FA = ???

(defun '#37199CCC268E8E45
        (
            loc_0 - CODE: 0x00002390 0C 00 00 00 DC::kLoadU16Immediate: R0, 0 | (0 << 0x8)
            loc_1 - CODE: 0x00002398 15 01 00 00 DC::kLookupInteger/kLookupFloat: R1 R0 -> hashid: 0x37B1139C687F2546(darray-count)
            loc_2 - CODE: 0x000023A0 15 02 01 00 DC::kLookupInteger/kLookupFloat: R2 R1 -> hashid: 0x5690F8DE53AD4943(#5690F8DE53AD4943)
            loc_3 - CODE: 0x000023A8 4A 03 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 0FCC25C0CB675047(#0FCC25C0CB675047)
            loc_4 - CODE: 0x000023B0 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_5 - CODE: 0x000023B8 1B 02 02 01 DC::kCall: ( #5690F8DE53AD4943 '#0FCC25C0CB675047 )
            loc_6 - CODE: 0x000023C0 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_7 - CODE: 0x000023C8 1C 01 01 01 DC::kCallFf: ( darray-count '#5690F8DE53AD4943 )
            loc_8 - CODE: 0x000023D0 15 02 03 00 DC::kLookupInteger/kLookupFloat: R2 R3 -> hashid: 0x2F82623ED7481B3D(begin-foreach)
            loc_9 - CODE: 0x000023D8 1C 02 02 00 DC::kCallFf: ( begin-foreach )
            loc_10 - CODE: 0x000023E0 43 02 00 00 DC::kMoveInteger/kMovePointer/kMove: R2, R0
            loc_11 - CODE: 0x000023E8 43 03 01 00 DC::kMoveInteger/kMovePointer/kMove: R3, R1
            loc_12 - CODE: 0x000023F0 20 02 02 03 DC::kIlt: R2 < R3
            loc_13 - CODE: 0x000023F8 2F 69 02 00 DC::kBranchIfNot: B loc_105
            loc_14 - CODE: 0x00002400 15 02 04 00 DC::kLookupInteger/kLookupFloat: R2 R4 -> hashid: 0xDB044C8529474AEA(darray-at)
            loc_15 - CODE: 0x00002408 15 03 01 00 DC::kLookupInteger/kLookupFloat: R3 R1 -> hashid: 0x5690F8DE53AD4943(#5690F8DE53AD4943)
            loc_16 - CODE: 0x00002410 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 0FCC25C0CB675047(#0FCC25C0CB675047)
            loc_17 - CODE: 0x00002418 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_18 - CODE: 0x00002420 1B 03 03 01 DC::kCall: ( #5690F8DE53AD4943 '#0FCC25C0CB675047 )
            loc_19 - CODE: 0x00002428 43 04 00 00 DC::kMoveInteger/kMovePointer/kMove: R4, R0
            loc_20 - CODE: 0x00002430 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_21 - CODE: 0x00002438 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_22 - CODE: 0x00002440 1C 02 02 02 DC::kCallFf: ( darray-at '#5690F8DE53AD4943 '#0000000000000000 )
            loc_23 - CODE: 0x00002448 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_24 - CODE: 0x00002450 2F 1F 03 00 DC::kBranchIfNot: B loc_31
            loc_25 - CODE: 0x00002458 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_26 - CODE: 0x00002460 5D 03 00 00 DC::kAssertPointer:
            loc_27 - CODE: 0x00002468 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_28 - CODE: 0x00002470 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_29 - CODE: 0x00002478 0C 04 07 00 DC::kLoadU16Immediate: R4, 7 | (0 << 0x8)
            loc_30 - CODE: 0x00002480 1D 03 03 04 DC::kIeq: R3 == R4
            loc_31 - CODE: 0x00002488 2F 24 03 00 DC::kBranchIfNot: B loc_32
            loc_32 - CODE: 0x00002490 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_33 - CODE: 0x00002498 5D 03 00 00 DC::kAssertPointer:
            loc_34 - CODE: 0x000024A0 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_35 - CODE: 0x000024A8 2D 3F 00 00 DC::kBranch: B loc_63
            loc_36 - CODE: 0x000024B0 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_37 - CODE: 0x000024B8 2F 2C 03 00 DC::kBranchIfNot: B loc_44
            loc_38 - CODE: 0x000024C0 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_39 - CODE: 0x000024C8 5D 03 00 00 DC::kAssertPointer:
            loc_40 - CODE: 0x000024D0 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_41 - CODE: 0x000024D8 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_42 - CODE: 0x000024E0 0C 04 05 00 DC::kLoadU16Immediate: R4, 5 | (0 << 0x8)
            loc_43 - CODE: 0x000024E8 1D 03 03 04 DC::kIeq: R3 == R4
            loc_44 - CODE: 0x000024F0 2F 31 03 00 DC::kBranchIfNot: B loc_45
            loc_45 - CODE: 0x000024F8 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_46 - CODE: 0x00002500 5D 03 00 00 DC::kAssertPointer:
            loc_47 - CODE: 0x00002508 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_48 - CODE: 0x00002510 2D 3F 00 00 DC::kBranch: B loc_63
            loc_49 - CODE: 0x00002518 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_50 - CODE: 0x00002520 2F 39 03 00 DC::kBranchIfNot: B loc_57
            loc_51 - CODE: 0x00002528 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_52 - CODE: 0x00002530 5D 03 00 00 DC::kAssertPointer:
            loc_53 - CODE: 0x00002538 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_54 - CODE: 0x00002540 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_55 - CODE: 0x00002548 0C 04 04 00 DC::kLoadU16Immediate: R4, 4 | (0 << 0x8)
            loc_56 - CODE: 0x00002550 1D 03 03 04 DC::kIeq: R3 == R4
            loc_57 - CODE: 0x00002558 2F 3E 03 00 DC::kBranchIfNot: B loc_58
            loc_58 - CODE: 0x00002560 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_59 - CODE: 0x00002568 5D 03 00 00 DC::kAssertPointer:
            loc_60 - CODE: 0x00002570 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_61 - CODE: 0x00002578 2D 3F 00 00 DC::kBranch: B loc_63
            loc_62 - CODE: 0x00002580 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_63 - CODE: 0x00002588 43 02 03 00 DC::kMoveInteger/kMovePointer/kMove: R2, R3
            loc_64 - CODE: 0x00002590 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x0AA93D5F0398B3DB(npc-set-demeanor)
            loc_65 - CODE: 0x00002598 43 04 02 00 DC::kMoveInteger/kMovePointer/kMove: R4, R2
            loc_66 - CODE: 0x000025A0 0C 05 02 00 DC::kLoadU16Immediate: R5, 2 | (0 << 0x8)
            loc_67 - CODE: 0x000025A8 0C 06 01 00 DC::kLoadU16Immediate: R6, 1 | (0 << 0x8)
            loc_68 - CODE: 0x000025B0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_69 - CODE: 0x000025B8 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_70 - CODE: 0x000025C0 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_71 - CODE: 0x000025C8 1C 03 03 03 DC::kCallFf: ( npc-set-demeanor '#0000000000000000 '#0000000000000002 '#0000000000000001 )
            loc_72 - CODE: 0x000025D0 15 03 06 00 DC::kLookupInteger/kLookupFloat: R3 R6 -> hashid: 0xB16E0ACE0AAE6778(npc-move-to)
            loc_73 - CODE: 0x000025D8 43 04 02 00 DC::kMoveInteger/kMovePointer/kMove: R4, R2
            loc_74 - CODE: 0x000025E0 15 05 07 00 DC::kLookupInteger/kLookupFloat: R5 R7 -> hashid: 0x00DA32FA0240DF12(get-object-locator)
            loc_75 - CODE: 0x000025E8 15 06 08 00 DC::kLookupInteger/kLookupFloat: R6 R8 -> hashid: 0xF03BEED169C9A5C6(get-symbol)
            loc_76 - CODE: 0x000025F0 4A 07 09 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R7, 43FEF6458EB0E749(#43FEF6458EB0E749)
            loc_77 - CODE: 0x000025F8 4A 08 0A 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R8, 2D19E518D40792B7(self)
            loc_78 - CODE: 0x00002600 43 31 07 00 DC::kMoveInteger/kMovePointer/kMove: R49, R7
            loc_79 - CODE: 0x00002608 43 32 08 00 DC::kMoveInteger/kMovePointer/kMove: R50, R8
            loc_80 - CODE: 0x00002610 1C 06 06 02 DC::kCallFf: ( get-symbol '#43FEF6458EB0E749 'self )
            loc_81 - CODE: 0x00002618 43 31 06 00 DC::kMoveInteger/kMovePointer/kMove: R49, R6
            loc_82 - CODE: 0x00002620 1C 05 05 01 DC::kCallFf: ( get-object-locator 'get-symbol )
            loc_83 - CODE: 0x00002628 0C 06 01 00 DC::kLoadU16Immediate: R6, 1 | (0 << 0x8)
            loc_84 - CODE: 0x00002630 0C 07 00 00 DC::kLoadU16Immediate: R7, 0 | (0 << 0x8)
            loc_85 - CODE: 0x00002638 0C 08 00 00 DC::kLoadU16Immediate: R8, 0 | (0 << 0x8)
            loc_86 - CODE: 0x00002640 0C 09 00 00 DC::kLoadU16Immediate: R9, 0 | (0 << 0x8)
            loc_87 - CODE: 0x00002648 0C 0A 00 00 DC::kLoadU16Immediate: R10, 0 | (0 << 0x8)
            loc_88 - CODE: 0x00002650 0C 0B 00 00 DC::kLoadU16Immediate: R11, 0 | (0 << 0x8)
            loc_89 - CODE: 0x00002658 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_90 - CODE: 0x00002660 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_91 - CODE: 0x00002668 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_92 - CODE: 0x00002670 43 34 07 00 DC::kMoveInteger/kMovePointer/kMove: R52, R7
            loc_93 - CODE: 0x00002678 43 35 08 00 DC::kMoveInteger/kMovePointer/kMove: R53, R8
            loc_94 - CODE: 0x00002680 43 36 09 00 DC::kMoveInteger/kMovePointer/kMove: R54, R9
            loc_95 - CODE: 0x00002688 43 37 0A 00 DC::kMoveInteger/kMovePointer/kMove: R55, R10
            loc_96 - CODE: 0x00002690 43 38 0B 00 DC::kMoveInteger/kMovePointer/kMove: R56, R11
            loc_97 - CODE: 0x00002698 1C 03 03 08 DC::kCallFf: ( npc-move-to '#0000000000000000 'get-object-locator '#0000000000000001 '#0000000000000000 '#0000000000000000 '#0000000000000000 '#0000000000000000 '#0000000000000000 )
            loc_98 - CODE: 0x000026A0 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_99 - CODE: 0x000026A8 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_100 - CODE: 0x000026B0 01 03 03 04 DC::kScriptCodeIAdd: R3, R3, R4
            loc_101 - CODE: 0x000026B8 43 00 03 00 DC::kMoveInteger/kMovePointer/kMove: R0, R3
            loc_102 - CODE: 0x000026C0 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_103 - CODE: 0x000026C8 43 02 03 00 DC::kMoveInteger/kMovePointer/kMove: R2, R3
            loc_104 - CODE: 0x000026D0 2D 0A 00 00 DC::kBranch: B loc_10
            loc_105 - CODE: 0x000026D8 15 02 0B 00 DC::kLookupInteger/kLookupFloat: R2 R11 -> hashid: 0xB144A57CFDBD80D9(end-foreach)
            loc_106 - CODE: 0x000026E0 1C 02 02 00 DC::kCallFf: ( end-foreach )
            loc_107 - CODE: 0x000026E8 43 00 02 00 DC::kMoveInteger/kMovePointer/kMove: R0, R2
            loc_108 - CODE: 0x000026F0 00 00 00 00 DC::kScriptCodeReturn: 0xB144A57CFDBD80D9
        )
)

Unhandled case @ 0x0000000000000118
    'd-array '#38F2619C35F58134 = ???

(defun '#408404221348BF2C
        (
            loc_0 - CODE: 0x000027C8 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0xE04D6B2695705B11(speak-text-to-speech-formatted)
            loc_1 - CODE: 0x000027D0 15 01 01 00 DC::kLookupInteger/kLookupFloat: R1 R1 -> hashid: 0x9481E6778A8D0E9A(%alloc-array)
            loc_2 - CODE: 0x000027D8 4A 02 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R2, 7670DDEBC755A4C9(single-frame)
            loc_3 - CODE: 0x000027E0 0C 03 01 00 DC::kLoadU16Immediate: R3, 1 | (0 << 0x8)
            loc_4 - CODE: 0x000027E8 0C 04 02 00 DC::kLoadU16Immediate: R4, 2 | (0 << 0x8)
            loc_5 - CODE: 0x000027F0 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_6 - CODE: 0x000027F8 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_7 - CODE: 0x00002800 43 32 03 00 DC::kMoveInteger/kMovePointer/kMove: R50, R3
            loc_8 - CODE: 0x00002808 43 33 04 00 DC::kMoveInteger/kMovePointer/kMove: R51, R4
            loc_9 - CODE: 0x00002810 43 34 05 00 DC::kMoveInteger/kMovePointer/kMove: R52, R5
            loc_10 - CODE: 0x00002818 1C 01 01 04 DC::kCallFf: ( %alloc-array 'single-frame '#0000000000000001 '#0000000000000002 '#0000000000000000 )
            loc_11 - CODE: 0x00002820 43 02 01 00 DC::kMoveInteger/kMovePointer/kMove: R2, R1
            loc_12 - CODE: 0x00002828 0F 02 02 00 DC::kLoadPointer/kLoadI64/kLoadU64: R2, R2
            loc_13 - CODE: 0x00002830 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_14 - CODE: 0x00002838 3D 03 03 08 DC::kImultiplyImm: R3, R3 * 8
            loc_15 - CODE: 0x00002840 01 02 02 03 DC::kScriptCodeIAdd: R2, R2, R3
            loc_16 - CODE: 0x00002848 15 03 03 00 DC::kLookupInteger/kLookupFloat: R3 R3 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_17 - CODE: 0x00002850 0C 04 07 00 DC::kLoadU16Immediate: R4, 7 | (0 << 0x8)
            loc_18 - CODE: 0x00002858 4A 05 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, D281AF5C599EA6E4(#D281AF5C599EA6E4)
            loc_19 - CODE: 0x00002860 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_20 - CODE: 0x00002868 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_21 - CODE: 0x00002870 1C 03 03 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#D281AF5C599EA6E4 )
            loc_22 - CODE: 0x00002878 12 02 02 03 DC::kStorePointer: R3!, {R2, R2}
            loc_23 - CODE: 0x00002880 43 02 01 00 DC::kMoveInteger/kMovePointer/kMove: R2, R1
            loc_24 - CODE: 0x00002888 0F 02 02 00 DC::kLoadPointer/kLoadI64/kLoadU64: R2, R2
            loc_25 - CODE: 0x00002890 0C 03 01 00 DC::kLoadU16Immediate: R3, 1 | (0 << 0x8)
            loc_26 - CODE: 0x00002898 3D 03 03 08 DC::kImultiplyImm: R3, R3 * 8
            loc_27 - CODE: 0x000028A0 01 02 02 03 DC::kScriptCodeIAdd: R2, R2, R3
            loc_28 - CODE: 0x000028A8 15 03 03 00 DC::kLookupInteger/kLookupFloat: R3 R3 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_29 - CODE: 0x000028B0 0C 04 02 00 DC::kLoadU16Immediate: R4, 2 | (0 << 0x8)
            loc_30 - CODE: 0x000028B8 15 05 05 00 DC::kLookupInteger/kLookupFloat: R5 R5 -> hashid: 0x88547F48DA223122(get-int32)
            loc_31 - CODE: 0x000028C0 4A 06 06 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R6, 3646E757838616B9(#3646E757838616B9)
            loc_32 - CODE: 0x000028C8 4A 07 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R7, 2D19E518D40792B7(self)
            loc_33 - CODE: 0x000028D0 43 31 06 00 DC::kMoveInteger/kMovePointer/kMove: R49, R6
            loc_34 - CODE: 0x000028D8 43 32 07 00 DC::kMoveInteger/kMovePointer/kMove: R50, R7
            loc_35 - CODE: 0x000028E0 1C 05 05 02 DC::kCallFf: ( get-int32 '#3646E757838616B9 'self )
            loc_36 - CODE: 0x000028E8 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_37 - CODE: 0x000028F0 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_38 - CODE: 0x000028F8 1C 03 03 02 DC::kCallFf: ( new-boxed-value '#0000000000000002 'get-int32 )
            loc_39 - CODE: 0x00002900 12 02 02 03 DC::kStorePointer: R3!, {R2, R2}
            loc_40 - CODE: 0x00002908 15 02 03 00 DC::kLookupInteger/kLookupFloat: R2 R3 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_41 - CODE: 0x00002910 0C 03 15 00 DC::kLoadU16Immediate: R3, 21 | (0 << 0x8)
            loc_42 - CODE: 0x00002918 43 04 01 00 DC::kMoveInteger/kMovePointer/kMove: R4, R1
            loc_43 - CODE: 0x00002920 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_44 - CODE: 0x00002928 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_45 - CODE: 0x00002930 1C 02 02 02 DC::kCallFf: ( new-boxed-value '#0000000000000015 '%alloc-array )
            loc_46 - CODE: 0x00002938 43 01 02 00 DC::kMoveInteger/kMovePointer/kMove: R1, R2
            loc_47 - CODE: 0x00002940 0C 02 01 00 DC::kLoadU16Immediate: R2, 1 | (0 << 0x8)
            loc_48 - CODE: 0x00002948 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_49 - CODE: 0x00002950 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_50 - CODE: 0x00002958 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_51 - CODE: 0x00002960 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_52 - CODE: 0x00002968 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_53 - CODE: 0x00002970 43 34 04 00 DC::kMoveInteger/kMovePointer/kMove: R52, R4
            loc_54 - CODE: 0x00002978 1B 00 00 04 DC::kCall: ( speak-text-to-speech-formatted 'new-boxed-value '#0000000000000001 '#0000000000000000 '#0000000000000001 )
            loc_55 - CODE: 0x00002980 00 00 00 00 DC::kScriptCodeReturn: 0xE04D6B2695705B11
        )
)

Unhandled case @ 0x0000000000000148
    'd-array '#49356079838C08B0 = ???

(defun '#4E9EE9FE0350C56F
        (
            loc_0 - CODE: 0x00002A20 0C 00 00 00 DC::kLoadU16Immediate: R0, 0 | (0 << 0x8)
            loc_1 - CODE: 0x00002A28 15 01 00 00 DC::kLookupInteger/kLookupFloat: R1 R0 -> hashid: 0x37B1139C687F2546(darray-count)
            loc_2 - CODE: 0x00002A30 15 02 01 00 DC::kLookupInteger/kLookupFloat: R2 R1 -> hashid: 0x064B2CA28F02B29E(get-spawners-by-tag)
            loc_3 - CODE: 0x00002A38 4A 03 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 81E5F1ED578882E9(#81E5F1ED578882E9)
            loc_4 - CODE: 0x00002A40 0C 04 00 00 DC::kLoadU16Immediate: R4, 0 | (0 << 0x8)
            loc_5 - CODE: 0x00002A48 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_6 - CODE: 0x00002A50 0C 06 00 00 DC::kLoadU16Immediate: R6, 0 | (0 << 0x8)
            loc_7 - CODE: 0x00002A58 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_8 - CODE: 0x00002A60 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_9 - CODE: 0x00002A68 43 33 05 00 DC::kMoveInteger/kMovePointer/kMove: R51, R5
            loc_10 - CODE: 0x00002A70 43 34 06 00 DC::kMoveInteger/kMovePointer/kMove: R52, R6
            loc_11 - CODE: 0x00002A78 1C 02 02 04 DC::kCallFf: ( get-spawners-by-tag '#81E5F1ED578882E9 '#0000000000000000 '#0000000000000000 '#0000000000000000 )
            loc_12 - CODE: 0x00002A80 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_13 - CODE: 0x00002A88 1C 01 01 01 DC::kCallFf: ( darray-count 'get-spawners-by-tag )
            loc_14 - CODE: 0x00002A90 15 02 03 00 DC::kLookupInteger/kLookupFloat: R2 R3 -> hashid: 0x2F82623ED7481B3D(begin-foreach)
            loc_15 - CODE: 0x00002A98 1C 02 02 00 DC::kCallFf: ( begin-foreach )
            loc_16 - CODE: 0x00002AA0 43 02 00 00 DC::kMoveInteger/kMovePointer/kMove: R2, R0
            loc_17 - CODE: 0x00002AA8 43 03 01 00 DC::kMoveInteger/kMovePointer/kMove: R3, R1
            loc_18 - CODE: 0x00002AB0 20 02 02 03 DC::kIlt: R2 < R3
            loc_19 - CODE: 0x00002AB8 2F 5E 02 00 DC::kBranchIfNot: B loc_94
            loc_20 - CODE: 0x00002AC0 15 02 04 00 DC::kLookupInteger/kLookupFloat: R2 R4 -> hashid: 0xDB044C8529474AEA(darray-at)
            loc_21 - CODE: 0x00002AC8 15 03 01 00 DC::kLookupInteger/kLookupFloat: R3 R1 -> hashid: 0x064B2CA28F02B29E(get-spawners-by-tag)
            loc_22 - CODE: 0x00002AD0 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 81E5F1ED578882E9(#81E5F1ED578882E9)
            loc_23 - CODE: 0x00002AD8 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_24 - CODE: 0x00002AE0 0C 06 00 00 DC::kLoadU16Immediate: R6, 0 | (0 << 0x8)
            loc_25 - CODE: 0x00002AE8 0C 07 00 00 DC::kLoadU16Immediate: R7, 0 | (0 << 0x8)
            loc_26 - CODE: 0x00002AF0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_27 - CODE: 0x00002AF8 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_28 - CODE: 0x00002B00 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_29 - CODE: 0x00002B08 43 34 07 00 DC::kMoveInteger/kMovePointer/kMove: R52, R7
            loc_30 - CODE: 0x00002B10 1C 03 03 04 DC::kCallFf: ( get-spawners-by-tag '#81E5F1ED578882E9 '#0000000000000000 '#0000000000000000 '#0000000000000000 )
            loc_31 - CODE: 0x00002B18 43 04 00 00 DC::kMoveInteger/kMovePointer/kMove: R4, R0
            loc_32 - CODE: 0x00002B20 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_33 - CODE: 0x00002B28 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_34 - CODE: 0x00002B30 1C 02 02 02 DC::kCallFf: ( darray-at 'get-spawners-by-tag '#0000000000000000 )
            loc_35 - CODE: 0x00002B38 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_36 - CODE: 0x00002B40 2F 2B 03 00 DC::kBranchIfNot: B loc_43
            loc_37 - CODE: 0x00002B48 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_38 - CODE: 0x00002B50 5D 03 00 00 DC::kAssertPointer:
            loc_39 - CODE: 0x00002B58 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_40 - CODE: 0x00002B60 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_41 - CODE: 0x00002B68 0C 04 07 00 DC::kLoadU16Immediate: R4, 7 | (0 << 0x8)
            loc_42 - CODE: 0x00002B70 1D 03 03 04 DC::kIeq: R3 == R4
            loc_43 - CODE: 0x00002B78 2F 30 03 00 DC::kBranchIfNot: B loc_44
            loc_44 - CODE: 0x00002B80 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_45 - CODE: 0x00002B88 5D 03 00 00 DC::kAssertPointer:
            loc_46 - CODE: 0x00002B90 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_47 - CODE: 0x00002B98 2D 4B 00 00 DC::kBranch: B loc_75
            loc_48 - CODE: 0x00002BA0 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_49 - CODE: 0x00002BA8 2F 38 03 00 DC::kBranchIfNot: B loc_56
            loc_50 - CODE: 0x00002BB0 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_51 - CODE: 0x00002BB8 5D 03 00 00 DC::kAssertPointer:
            loc_52 - CODE: 0x00002BC0 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_53 - CODE: 0x00002BC8 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_54 - CODE: 0x00002BD0 0C 04 05 00 DC::kLoadU16Immediate: R4, 5 | (0 << 0x8)
            loc_55 - CODE: 0x00002BD8 1D 03 03 04 DC::kIeq: R3 == R4
            loc_56 - CODE: 0x00002BE0 2F 3D 03 00 DC::kBranchIfNot: B loc_57
            loc_57 - CODE: 0x00002BE8 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_58 - CODE: 0x00002BF0 5D 03 00 00 DC::kAssertPointer:
            loc_59 - CODE: 0x00002BF8 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_60 - CODE: 0x00002C00 2D 4B 00 00 DC::kBranch: B loc_75
            loc_61 - CODE: 0x00002C08 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_62 - CODE: 0x00002C10 2F 45 03 00 DC::kBranchIfNot: B loc_69
            loc_63 - CODE: 0x00002C18 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_64 - CODE: 0x00002C20 5D 03 00 00 DC::kAssertPointer:
            loc_65 - CODE: 0x00002C28 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_66 - CODE: 0x00002C30 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_67 - CODE: 0x00002C38 0C 04 04 00 DC::kLoadU16Immediate: R4, 4 | (0 << 0x8)
            loc_68 - CODE: 0x00002C40 1D 03 03 04 DC::kIeq: R3 == R4
            loc_69 - CODE: 0x00002C48 2F 4A 03 00 DC::kBranchIfNot: B loc_70
            loc_70 - CODE: 0x00002C50 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_71 - CODE: 0x00002C58 5D 03 00 00 DC::kAssertPointer:
            loc_72 - CODE: 0x00002C60 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_73 - CODE: 0x00002C68 2D 4B 00 00 DC::kBranch: B loc_75
            loc_74 - CODE: 0x00002C70 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_75 - CODE: 0x00002C78 43 02 03 00 DC::kMoveInteger/kMovePointer/kMove: R2, R3
            loc_76 - CODE: 0x00002C80 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x123B57C00EF4B676(entity-exists?)
            loc_77 - CODE: 0x00002C88 43 04 02 00 DC::kMoveInteger/kMovePointer/kMove: R4, R2
            loc_78 - CODE: 0x00002C90 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_79 - CODE: 0x00002C98 1C 03 03 01 DC::kCallFf: ( entity-exists? '#0000000000000000 )
            loc_80 - CODE: 0x00002CA0 2F 56 03 00 DC::kBranchIfNot: B loc_86
            loc_81 - CODE: 0x00002CA8 15 03 06 00 DC::kLookupInteger/kLookupFloat: R3 R6 -> hashid: 0x37A9AA26C0743DD1(interactable-enable)
            loc_82 - CODE: 0x00002CB0 43 04 02 00 DC::kMoveInteger/kMovePointer/kMove: R4, R2
            loc_83 - CODE: 0x00002CB8 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_84 - CODE: 0x00002CC0 1C 03 03 01 DC::kCallFf: ( interactable-enable '#0000000000000000 )
            loc_85 - CODE: 0x00002CC8 2D 57 00 00 DC::kBranch: B loc_87
            loc_86 - CODE: 0x00002CD0 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_87 - CODE: 0x00002CD8 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_88 - CODE: 0x00002CE0 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_89 - CODE: 0x00002CE8 01 03 03 04 DC::kScriptCodeIAdd: R3, R3, R4
            loc_90 - CODE: 0x00002CF0 43 00 03 00 DC::kMoveInteger/kMovePointer/kMove: R0, R3
            loc_91 - CODE: 0x00002CF8 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_92 - CODE: 0x00002D00 43 02 03 00 DC::kMoveInteger/kMovePointer/kMove: R2, R3
            loc_93 - CODE: 0x00002D08 2D 10 00 00 DC::kBranch: B loc_16
            loc_94 - CODE: 0x00002D10 15 02 07 00 DC::kLookupInteger/kLookupFloat: R2 R7 -> hashid: 0xB144A57CFDBD80D9(end-foreach)
            loc_95 - CODE: 0x00002D18 1C 02 02 00 DC::kCallFf: ( end-foreach )
            loc_96 - CODE: 0x00002D20 43 00 02 00 DC::kMoveInteger/kMovePointer/kMove: R0, R2
            loc_97 - CODE: 0x00002D28 00 00 00 00 DC::kScriptCodeReturn: 0xB144A57CFDBD80D9
        )
)

(defun '#5AA836A47F4DFE28
        (
            loc_0 - CODE: 0x00007360 43 00 31 00 DC::kMoveInteger/kMovePointer/kMove: R0, R49
            loc_1 - CODE: 0x00007368 0C 01 00 00 DC::kLoadU16Immediate: R1, 0 | (0 << 0x8)
            loc_2 - CODE: 0x00007370 15 02 00 00 DC::kLookupInteger/kLookupFloat: R2 R0 -> hashid: 0x37B1139C687F2546(darray-count)
            loc_3 - CODE: 0x00007378 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_4 - CODE: 0x00007380 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_5 - CODE: 0x00007388 1C 02 02 01 DC::kCallFf: ( darray-count '#0000000000000000 )
            loc_6 - CODE: 0x00007390 15 03 01 00 DC::kLookupInteger/kLookupFloat: R3 R1 -> hashid: 0x2F82623ED7481B3D(begin-foreach)
            loc_7 - CODE: 0x00007398 1C 03 03 00 DC::kCallFf: ( begin-foreach )
            loc_8 - CODE: 0x000073A0 43 03 01 00 DC::kMoveInteger/kMovePointer/kMove: R3, R1
            loc_9 - CODE: 0x000073A8 43 04 02 00 DC::kMoveInteger/kMovePointer/kMove: R4, R2
            loc_10 - CODE: 0x000073B0 20 03 03 04 DC::kIlt: R3 < R4
            loc_11 - CODE: 0x000073B8 2F 4A 03 00 DC::kBranchIfNot: B loc_74
            loc_12 - CODE: 0x000073C0 15 03 02 00 DC::kLookupInteger/kLookupFloat: R3 R2 -> hashid: 0xDB044C8529474AEA(darray-at)
            loc_13 - CODE: 0x000073C8 43 04 00 00 DC::kMoveInteger/kMovePointer/kMove: R4, R0
            loc_14 - CODE: 0x000073D0 43 05 01 00 DC::kMoveInteger/kMovePointer/kMove: R5, R1
            loc_15 - CODE: 0x000073D8 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_16 - CODE: 0x000073E0 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_17 - CODE: 0x000073E8 1C 03 03 02 DC::kCallFf: ( darray-at '#0000000000000000 '#0000000000000000 )
            loc_18 - CODE: 0x000073F0 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_19 - CODE: 0x000073F8 2F 1A 04 00 DC::kBranchIfNot: B loc_26
            loc_20 - CODE: 0x00007400 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_21 - CODE: 0x00007408 5D 04 00 00 DC::kAssertPointer:
            loc_22 - CODE: 0x00007410 3B 04 04 0C DC::kIaddImm: R4, R4, 12
            loc_23 - CODE: 0x00007418 4E 04 04 00 DC::kLoadU16: R4, B144A57CFDBD80D9
            loc_24 - CODE: 0x00007420 0C 05 07 00 DC::kLoadU16Immediate: R5, 7 | (0 << 0x8)
            loc_25 - CODE: 0x00007428 1D 04 04 05 DC::kIeq: R4 == R5
            loc_26 - CODE: 0x00007430 2F 1F 04 00 DC::kBranchIfNot: B loc_27
            loc_27 - CODE: 0x00007438 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_28 - CODE: 0x00007440 5D 04 00 00 DC::kAssertPointer:
            loc_29 - CODE: 0x00007448 51 04 04 00 DC::kLoadPointer/kLoadI64/kLoadU64: R4, R4
            loc_30 - CODE: 0x00007450 2D 3A 00 00 DC::kBranch: B loc_58
            loc_31 - CODE: 0x00007458 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_32 - CODE: 0x00007460 2F 27 04 00 DC::kBranchIfNot: B loc_39
            loc_33 - CODE: 0x00007468 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_34 - CODE: 0x00007470 5D 04 00 00 DC::kAssertPointer:
            loc_35 - CODE: 0x00007478 3B 04 04 0C DC::kIaddImm: R4, R4, 12
            loc_36 - CODE: 0x00007480 4E 04 04 00 DC::kLoadU16: R4, B144A57CFDBD80D9
            loc_37 - CODE: 0x00007488 0C 05 05 00 DC::kLoadU16Immediate: R5, 5 | (0 << 0x8)
            loc_38 - CODE: 0x00007490 1D 04 04 05 DC::kIeq: R4 == R5
            loc_39 - CODE: 0x00007498 2F 2C 04 00 DC::kBranchIfNot: B loc_40
            loc_40 - CODE: 0x000074A0 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_41 - CODE: 0x000074A8 5D 04 00 00 DC::kAssertPointer:
            loc_42 - CODE: 0x000074B0 51 04 04 00 DC::kLoadPointer/kLoadI64/kLoadU64: R4, R4
            loc_43 - CODE: 0x000074B8 2D 3A 00 00 DC::kBranch: B loc_58
            loc_44 - CODE: 0x000074C0 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_45 - CODE: 0x000074C8 2F 34 04 00 DC::kBranchIfNot: B loc_52
            loc_46 - CODE: 0x000074D0 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_47 - CODE: 0x000074D8 5D 04 00 00 DC::kAssertPointer:
            loc_48 - CODE: 0x000074E0 3B 04 04 0C DC::kIaddImm: R4, R4, 12
            loc_49 - CODE: 0x000074E8 4E 04 04 00 DC::kLoadU16: R4, B144A57CFDBD80D9
            loc_50 - CODE: 0x000074F0 0C 05 04 00 DC::kLoadU16Immediate: R5, 4 | (0 << 0x8)
            loc_51 - CODE: 0x000074F8 1D 04 04 05 DC::kIeq: R4 == R5
            loc_52 - CODE: 0x00007500 2F 39 04 00 DC::kBranchIfNot: B loc_53
            loc_53 - CODE: 0x00007508 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_54 - CODE: 0x00007510 5D 04 00 00 DC::kAssertPointer:
            loc_55 - CODE: 0x00007518 51 04 04 00 DC::kLoadPointer/kLoadI64/kLoadU64: R4, R4
            loc_56 - CODE: 0x00007520 2D 3A 00 00 DC::kBranch: B loc_58
            loc_57 - CODE: 0x00007528 0C 04 00 00 DC::kLoadU16Immediate: R4, 0 | (0 << 0x8)
            loc_58 - CODE: 0x00007530 43 03 04 00 DC::kMoveInteger/kMovePointer/kMove: R3, R4
            loc_59 - CODE: 0x00007538 15 04 03 00 DC::kLookupInteger/kLookupFloat: R4 R3 -> hashid: 0x01B0043CB1358D18(spawn-entity)
            loc_60 - CODE: 0x00007540 43 05 03 00 DC::kMoveInteger/kMovePointer/kMove: R5, R3
            loc_61 - CODE: 0x00007548 0C 06 00 00 DC::kLoadU16Immediate: R6, 0 | (0 << 0x8)
            loc_62 - CODE: 0x00007550 0C 07 00 00 DC::kLoadU16Immediate: R7, 0 | (0 << 0x8)
            loc_63 - CODE: 0x00007558 43 31 05 00 DC::kMoveInteger/kMovePointer/kMove: R49, R5
            loc_64 - CODE: 0x00007560 43 32 06 00 DC::kMoveInteger/kMovePointer/kMove: R50, R6
            loc_65 - CODE: 0x00007568 43 33 07 00 DC::kMoveInteger/kMovePointer/kMove: R51, R7
            loc_66 - CODE: 0x00007570 1C 04 04 03 DC::kCallFf: ( spawn-entity '#0000000000000000 '#0000000000000000 '#0000000000000000 )
            loc_67 - CODE: 0x00007578 43 04 01 00 DC::kMoveInteger/kMovePointer/kMove: R4, R1
            loc_68 - CODE: 0x00007580 0C 05 01 00 DC::kLoadU16Immediate: R5, 1 | (0 << 0x8)
            loc_69 - CODE: 0x00007588 01 04 04 05 DC::kScriptCodeIAdd: R4, R4, R5
            loc_70 - CODE: 0x00007590 43 01 04 00 DC::kMoveInteger/kMovePointer/kMove: R1, R4
            loc_71 - CODE: 0x00007598 43 04 01 00 DC::kMoveInteger/kMovePointer/kMove: R4, R1
            loc_72 - CODE: 0x000075A0 43 03 04 00 DC::kMoveInteger/kMovePointer/kMove: R3, R4
            loc_73 - CODE: 0x000075A8 2D 08 00 00 DC::kBranch: B loc_8
            loc_74 - CODE: 0x000075B0 15 03 04 00 DC::kLookupInteger/kLookupFloat: R3 R4 -> hashid: 0xB144A57CFDBD80D9(end-foreach)
            loc_75 - CODE: 0x000075B8 1C 03 03 00 DC::kCallFf: ( end-foreach )
            loc_76 - CODE: 0x000075C0 43 01 03 00 DC::kMoveInteger/kMovePointer/kMove: R1, R3
            loc_77 - CODE: 0x000075C8 00 01 01 00 DC::kScriptCodeReturn: 0xB144A57CFDBD80D9
        )
)

Unhandled case @ 0x0000000000000190
    'd-array '#5DB77A87064A4880 = ???

Unhandled case @ 0x00000000000001A8
    'd-array '#7036B77B06566546 = ???

(defun '#7E2A50D76DCCE80D
        (
            loc_0 - CODE: 0x00002DE0 0C 00 00 00 DC::kLoadU16Immediate: R0, 0 | (0 << 0x8)
            loc_1 - CODE: 0x00002DE8 15 01 00 00 DC::kLookupInteger/kLookupFloat: R1 R0 -> hashid: 0x37B1139C687F2546(darray-count)
            loc_2 - CODE: 0x00002DF0 15 02 01 00 DC::kLookupInteger/kLookupFloat: R2 R1 -> hashid: 0x064B2CA28F02B29E(get-spawners-by-tag)
            loc_3 - CODE: 0x00002DF8 4A 03 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 81E5F1ED578882E9(#81E5F1ED578882E9)
            loc_4 - CODE: 0x00002E00 0C 04 00 00 DC::kLoadU16Immediate: R4, 0 | (0 << 0x8)
            loc_5 - CODE: 0x00002E08 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_6 - CODE: 0x00002E10 0C 06 00 00 DC::kLoadU16Immediate: R6, 0 | (0 << 0x8)
            loc_7 - CODE: 0x00002E18 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_8 - CODE: 0x00002E20 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_9 - CODE: 0x00002E28 43 33 05 00 DC::kMoveInteger/kMovePointer/kMove: R51, R5
            loc_10 - CODE: 0x00002E30 43 34 06 00 DC::kMoveInteger/kMovePointer/kMove: R52, R6
            loc_11 - CODE: 0x00002E38 1C 02 02 04 DC::kCallFf: ( get-spawners-by-tag '#81E5F1ED578882E9 '#0000000000000000 '#0000000000000000 '#0000000000000000 )
            loc_12 - CODE: 0x00002E40 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_13 - CODE: 0x00002E48 1C 01 01 01 DC::kCallFf: ( darray-count 'get-spawners-by-tag )
            loc_14 - CODE: 0x00002E50 15 02 03 00 DC::kLookupInteger/kLookupFloat: R2 R3 -> hashid: 0x2F82623ED7481B3D(begin-foreach)
            loc_15 - CODE: 0x00002E58 1C 02 02 00 DC::kCallFf: ( begin-foreach )
            loc_16 - CODE: 0x00002E60 43 02 00 00 DC::kMoveInteger/kMovePointer/kMove: R2, R0
            loc_17 - CODE: 0x00002E68 43 03 01 00 DC::kMoveInteger/kMovePointer/kMove: R3, R1
            loc_18 - CODE: 0x00002E70 20 02 02 03 DC::kIlt: R2 < R3
            loc_19 - CODE: 0x00002E78 2F 60 02 00 DC::kBranchIfNot: B loc_96
            loc_20 - CODE: 0x00002E80 15 02 04 00 DC::kLookupInteger/kLookupFloat: R2 R4 -> hashid: 0xDB044C8529474AEA(darray-at)
            loc_21 - CODE: 0x00002E88 15 03 01 00 DC::kLookupInteger/kLookupFloat: R3 R1 -> hashid: 0x064B2CA28F02B29E(get-spawners-by-tag)
            loc_22 - CODE: 0x00002E90 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 81E5F1ED578882E9(#81E5F1ED578882E9)
            loc_23 - CODE: 0x00002E98 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_24 - CODE: 0x00002EA0 0C 06 00 00 DC::kLoadU16Immediate: R6, 0 | (0 << 0x8)
            loc_25 - CODE: 0x00002EA8 0C 07 00 00 DC::kLoadU16Immediate: R7, 0 | (0 << 0x8)
            loc_26 - CODE: 0x00002EB0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_27 - CODE: 0x00002EB8 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_28 - CODE: 0x00002EC0 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_29 - CODE: 0x00002EC8 43 34 07 00 DC::kMoveInteger/kMovePointer/kMove: R52, R7
            loc_30 - CODE: 0x00002ED0 1C 03 03 04 DC::kCallFf: ( get-spawners-by-tag '#81E5F1ED578882E9 '#0000000000000000 '#0000000000000000 '#0000000000000000 )
            loc_31 - CODE: 0x00002ED8 43 04 00 00 DC::kMoveInteger/kMovePointer/kMove: R4, R0
            loc_32 - CODE: 0x00002EE0 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_33 - CODE: 0x00002EE8 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_34 - CODE: 0x00002EF0 1C 02 02 02 DC::kCallFf: ( darray-at 'get-spawners-by-tag '#0000000000000000 )
            loc_35 - CODE: 0x00002EF8 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_36 - CODE: 0x00002F00 2F 2B 03 00 DC::kBranchIfNot: B loc_43
            loc_37 - CODE: 0x00002F08 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_38 - CODE: 0x00002F10 5D 03 00 00 DC::kAssertPointer:
            loc_39 - CODE: 0x00002F18 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_40 - CODE: 0x00002F20 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_41 - CODE: 0x00002F28 0C 04 07 00 DC::kLoadU16Immediate: R4, 7 | (0 << 0x8)
            loc_42 - CODE: 0x00002F30 1D 03 03 04 DC::kIeq: R3 == R4
            loc_43 - CODE: 0x00002F38 2F 30 03 00 DC::kBranchIfNot: B loc_44
            loc_44 - CODE: 0x00002F40 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_45 - CODE: 0x00002F48 5D 03 00 00 DC::kAssertPointer:
            loc_46 - CODE: 0x00002F50 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_47 - CODE: 0x00002F58 2D 4B 00 00 DC::kBranch: B loc_75
            loc_48 - CODE: 0x00002F60 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_49 - CODE: 0x00002F68 2F 38 03 00 DC::kBranchIfNot: B loc_56
            loc_50 - CODE: 0x00002F70 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_51 - CODE: 0x00002F78 5D 03 00 00 DC::kAssertPointer:
            loc_52 - CODE: 0x00002F80 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_53 - CODE: 0x00002F88 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_54 - CODE: 0x00002F90 0C 04 05 00 DC::kLoadU16Immediate: R4, 5 | (0 << 0x8)
            loc_55 - CODE: 0x00002F98 1D 03 03 04 DC::kIeq: R3 == R4
            loc_56 - CODE: 0x00002FA0 2F 3D 03 00 DC::kBranchIfNot: B loc_57
            loc_57 - CODE: 0x00002FA8 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_58 - CODE: 0x00002FB0 5D 03 00 00 DC::kAssertPointer:
            loc_59 - CODE: 0x00002FB8 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_60 - CODE: 0x00002FC0 2D 4B 00 00 DC::kBranch: B loc_75
            loc_61 - CODE: 0x00002FC8 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_62 - CODE: 0x00002FD0 2F 45 03 00 DC::kBranchIfNot: B loc_69
            loc_63 - CODE: 0x00002FD8 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_64 - CODE: 0x00002FE0 5D 03 00 00 DC::kAssertPointer:
            loc_65 - CODE: 0x00002FE8 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_66 - CODE: 0x00002FF0 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_67 - CODE: 0x00002FF8 0C 04 04 00 DC::kLoadU16Immediate: R4, 4 | (0 << 0x8)
            loc_68 - CODE: 0x00003000 1D 03 03 04 DC::kIeq: R3 == R4
            loc_69 - CODE: 0x00003008 2F 4A 03 00 DC::kBranchIfNot: B loc_70
            loc_70 - CODE: 0x00003010 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_71 - CODE: 0x00003018 5D 03 00 00 DC::kAssertPointer:
            loc_72 - CODE: 0x00003020 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_73 - CODE: 0x00003028 2D 4B 00 00 DC::kBranch: B loc_75
            loc_74 - CODE: 0x00003030 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_75 - CODE: 0x00003038 43 02 03 00 DC::kMoveInteger/kMovePointer/kMove: R2, R3
            loc_76 - CODE: 0x00003040 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x2E1754E916BAC4F7(darray-append)
            loc_77 - CODE: 0x00003048 4A 04 06 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 5DB77A87064A4880(#5DB77A87064A4880)
            loc_78 - CODE: 0x00003050 15 05 07 00 DC::kLookupInteger/kLookupFloat: R5 R7 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_79 - CODE: 0x00003058 0C 06 07 00 DC::kLoadU16Immediate: R6, 7 | (0 << 0x8)
            loc_80 - CODE: 0x00003060 43 07 02 00 DC::kMoveInteger/kMovePointer/kMove: R7, R2
            loc_81 - CODE: 0x00003068 43 31 06 00 DC::kMoveInteger/kMovePointer/kMove: R49, R6
            loc_82 - CODE: 0x00003070 43 32 07 00 DC::kMoveInteger/kMovePointer/kMove: R50, R7
            loc_83 - CODE: 0x00003078 1C 05 05 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#0000000000000000 )
            loc_84 - CODE: 0x00003080 0C 06 01 00 DC::kLoadU16Immediate: R6, 1 | (0 << 0x8)
            loc_85 - CODE: 0x00003088 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_86 - CODE: 0x00003090 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_87 - CODE: 0x00003098 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_88 - CODE: 0x000030A0 1C 03 03 03 DC::kCallFf: ( darray-append '#5DB77A87064A4880 'new-boxed-value '#0000000000000001 )
            loc_89 - CODE: 0x000030A8 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_90 - CODE: 0x000030B0 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_91 - CODE: 0x000030B8 01 03 03 04 DC::kScriptCodeIAdd: R3, R3, R4
            loc_92 - CODE: 0x000030C0 43 00 03 00 DC::kMoveInteger/kMovePointer/kMove: R0, R3
            loc_93 - CODE: 0x000030C8 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_94 - CODE: 0x000030D0 43 02 03 00 DC::kMoveInteger/kMovePointer/kMove: R2, R3
            loc_95 - CODE: 0x000030D8 2D 10 00 00 DC::kBranch: B loc_16
            loc_96 - CODE: 0x000030E0 15 02 08 00 DC::kLookupInteger/kLookupFloat: R2 R8 -> hashid: 0xB144A57CFDBD80D9(end-foreach)
            loc_97 - CODE: 0x000030E8 1C 02 02 00 DC::kCallFf: ( end-foreach )
            loc_98 - CODE: 0x000030F0 43 00 02 00 DC::kMoveInteger/kMovePointer/kMove: R0, R2
            loc_99 - CODE: 0x000030F8 00 00 00 00 DC::kScriptCodeReturn: 0xB144A57CFDBD80D9
        )
)

Unhandled case @ 0x00000000000001D8
    'd-array '#7FD6E8B3F61AF350 = ???

Unhandled case @ 0x00000000000001F0
    'd-array '#7FD6EAB3F61AF6B6 = ???

Unhandled case @ 0x0000000000000208
    'd-array '#7FD6EBB3F61AF869 = ???

Unhandled case @ 0x0000000000000220
    'd-array '#7FD6ECB3F61AFA1C = ???

Unhandled case @ 0x0000000000000238
    'd-array '#7FD6EDB3F61AFBCF = ???

Unhandled case @ 0x0000000000000250
    'd-array '#7FD6EFB3F61AFF35 = ???

(defun '#86AE4612191DF9B6
        (
            loc_0 - CODE: 0x000031A0 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0x0C82AA83D69D3302(timer-done?)
            loc_1 - CODE: 0x000031A8 4A 01 01 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, D0A57176777FC715(#D0A57176777FC715)
            loc_2 - CODE: 0x000031B0 4A 02 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R2, 2D19E518D40792B7(self)
            loc_3 - CODE: 0x000031B8 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_4 - CODE: 0x000031C0 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_5 - CODE: 0x000031C8 1B 00 00 02 DC::kCall: ( timer-done? '#D0A57176777FC715 'self )
            loc_6 - CODE: 0x000031D0 2F 21 00 00 DC::kBranchIfNot: B loc_33
            loc_7 - CODE: 0x000031D8 15 00 03 00 DC::kLookupInteger/kLookupFloat: R0 R3 -> hashid: 0xE04D6B2695705B11(speak-text-to-speech-formatted)
            loc_8 - CODE: 0x000031E0 15 01 04 00 DC::kLookupInteger/kLookupFloat: R1 R4 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_9 - CODE: 0x000031E8 0C 02 07 00 DC::kLoadU16Immediate: R2, 7 | (0 << 0x8)
            loc_10 - CODE: 0x000031F0 4A 03 05 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, D522498321B0A4FF(#D522498321B0A4FF)
            loc_11 - CODE: 0x000031F8 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_12 - CODE: 0x00003200 43 32 03 00 DC::kMoveInteger/kMovePointer/kMove: R50, R3
            loc_13 - CODE: 0x00003208 1C 01 01 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#D522498321B0A4FF )
            loc_14 - CODE: 0x00003210 0C 02 01 00 DC::kLoadU16Immediate: R2, 1 | (0 << 0x8)
            loc_15 - CODE: 0x00003218 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_16 - CODE: 0x00003220 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_17 - CODE: 0x00003228 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_18 - CODE: 0x00003230 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_19 - CODE: 0x00003238 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_20 - CODE: 0x00003240 43 34 04 00 DC::kMoveInteger/kMovePointer/kMove: R52, R4
            loc_21 - CODE: 0x00003248 1B 00 00 04 DC::kCall: ( speak-text-to-speech-formatted 'new-boxed-value '#0000000000000001 '#0000000000000000 '#0000000000000001 )
            loc_22 - CODE: 0x00003250 15 00 06 00 DC::kLookupInteger/kLookupFloat: R0 R6 -> hashid: 0xDE501F9391C784C7(start-timer)
            loc_23 - CODE: 0x00003258 4A 01 01 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, D0A57176777FC715(#D0A57176777FC715)
            loc_24 - CODE: 0x00003260 40 02 07 00 DC::kLoadStaticFloatImm: S2, 10.000000
            loc_25 - CODE: 0x00003268 4A 03 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_26 - CODE: 0x00003270 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_27 - CODE: 0x00003278 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_28 - CODE: 0x00003280 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_29 - CODE: 0x00003288 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_30 - CODE: 0x00003290 43 34 04 00 DC::kMoveInteger/kMovePointer/kMove: R52, R4
            loc_31 - CODE: 0x00003298 1B 00 00 04 DC::kCall: ( start-timer '#D0A57176777FC715 '#0000000041200000 'self '#0000000000000001 )
            loc_32 - CODE: 0x000032A0 2D 22 00 00 DC::kBranch: B loc_34
            loc_33 - CODE: 0x000032A8 0C 00 00 00 DC::kLoadU16Immediate: R0, 0 | (0 << 0x8)
            loc_34 - CODE: 0x000032B0 00 00 00 00 DC::kScriptCodeReturn: 0x0000000000000000
        )
)

Unhandled case @ 0x0000000000000280
    'd-array '#8FCBD53F165D0D5E = ???

Unhandled case @ 0x0000000000000298
    'd-array '#90BC88C2C244C5D8 = ???

Unhandled case @ 0x00000000000002B0
    'd-array '#90BC89C2C244C78B = ???

Unhandled case @ 0x00000000000002C8
    'd-array '#90BC8AC2C244C93E = ???

Unhandled case @ 0x00000000000002E0
    'd-array '#90BC8DC2C244CE57 = ???

Unhandled case @ 0x00000000000002F8
    'd-array '#90BC8EC2C244D00A = ???

Unhandled case @ 0x0000000000000310
    'd-array '#90BC8FC2C244D1BD = ???

(defun '#960A82703981306B
        (
            loc_0 - CODE: 0x00003350 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_1 - CODE: 0x00003358 4A 31 01 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R49, 3646E757838616B9(#3646E757838616B9)
            loc_2 - CODE: 0x00003360 0C 32 00 00 DC::kLoadU16Immediate: R50, 0 | (0 << 0x8)
            loc_3 - CODE: 0x00003368 4A 33 03 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R51, 2D19E518D40792B7(self)
            loc_4 - CODE: 0x00003370 1C 00 00 03 DC::kCallFf: ( set-int32 '#3646E757838616B9 '#0000000000000000 'self )
            loc_5 - CODE: 0x00003378 15 00 06 00 DC::kLookupInteger/kLookupFloat: R0 R6 -> hashid: 0x88547F48DA223122(get-int32)
            loc_6 - CODE: 0x00003380 4A 31 0B 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R49, A9839F519D50031B(#A9839F519D50031B)
            loc_7 - CODE: 0x00003388 4A 32 03 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R50, 2D19E518D40792B7(self)
            loc_8 - CODE: 0x00003390 1C 00 00 02 DC::kCallFf: ( get-int32 '#A9839F519D50031B 'self )
            loc_9 - CODE: 0x00003398 0C 01 14 00 DC::kLoadU16Immediate: R1, 20 | (0 << 0x8)
            loc_10 - CODE: 0x000033A0 20 00 00 01 DC::kIlt: R0 < R1
            loc_11 - CODE: 0x000033A8 2F 10 00 00 DC::kBranchIfNot: B loc_16
            loc_12 - CODE: 0x000033B0 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_13 - CODE: 0x000033B8 4A 31 0B 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R49, A9839F519D50031B(#A9839F519D50031B)
            loc_14 - CODE: 0x000033C0 0C 32 02 00 DC::kLoadU16Immediate: R50, 2 | (0 << 0x8)
            loc_15 - CODE: 0x000033C8 1C 00 00 03 DC::kCallFf: ( set-int32 '#A9839F519D50031B '#0000000000000002 'self )
            loc_16 - CODE: 0x000033D0 00 00 00 00 DC::kScriptCodeReturn: 0xCF56CE6213BB9C96
        )
)

(defun '#96795B3BD7D5CA9F
        (
            loc_0 - CODE: 0x00003448 43 00 31 00 DC::kMoveInteger/kMovePointer/kMove: R0, R49
            loc_1 - CODE: 0x00003450 0C 01 00 00 DC::kLoadU16Immediate: R1, 0 | (0 << 0x8)
            loc_2 - CODE: 0x00003458 15 02 00 00 DC::kLookupInteger/kLookupFloat: R2 R0 -> hashid: 0x37B1139C687F2546(darray-count)
            loc_3 - CODE: 0x00003460 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_4 - CODE: 0x00003468 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_5 - CODE: 0x00003470 1C 02 02 01 DC::kCallFf: ( darray-count '#0000000000000000 )
            loc_6 - CODE: 0x00003478 15 03 01 00 DC::kLookupInteger/kLookupFloat: R3 R1 -> hashid: 0x2F82623ED7481B3D(begin-foreach)
            loc_7 - CODE: 0x00003480 1C 03 03 00 DC::kCallFf: ( begin-foreach )
            loc_8 - CODE: 0x00003488 43 03 01 00 DC::kMoveInteger/kMovePointer/kMove: R3, R1
            loc_9 - CODE: 0x00003490 43 04 02 00 DC::kMoveInteger/kMovePointer/kMove: R4, R2
            loc_10 - CODE: 0x00003498 20 03 03 04 DC::kIlt: R3 < R4
            loc_11 - CODE: 0x000034A0 2F 4A 03 00 DC::kBranchIfNot: B loc_74
            loc_12 - CODE: 0x000034A8 15 03 02 00 DC::kLookupInteger/kLookupFloat: R3 R2 -> hashid: 0xDB044C8529474AEA(darray-at)
            loc_13 - CODE: 0x000034B0 43 04 00 00 DC::kMoveInteger/kMovePointer/kMove: R4, R0
            loc_14 - CODE: 0x000034B8 43 05 01 00 DC::kMoveInteger/kMovePointer/kMove: R5, R1
            loc_15 - CODE: 0x000034C0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_16 - CODE: 0x000034C8 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_17 - CODE: 0x000034D0 1C 03 03 02 DC::kCallFf: ( darray-at '#0000000000000000 '#0000000000000000 )
            loc_18 - CODE: 0x000034D8 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_19 - CODE: 0x000034E0 2F 1A 04 00 DC::kBranchIfNot: B loc_26
            loc_20 - CODE: 0x000034E8 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_21 - CODE: 0x000034F0 5D 04 00 00 DC::kAssertPointer:
            loc_22 - CODE: 0x000034F8 3B 04 04 0C DC::kIaddImm: R4, R4, 12
            loc_23 - CODE: 0x00003500 4E 04 04 00 DC::kLoadU16: R4, B144A57CFDBD80D9
            loc_24 - CODE: 0x00003508 0C 05 07 00 DC::kLoadU16Immediate: R5, 7 | (0 << 0x8)
            loc_25 - CODE: 0x00003510 1D 04 04 05 DC::kIeq: R4 == R5
            loc_26 - CODE: 0x00003518 2F 1F 04 00 DC::kBranchIfNot: B loc_27
            loc_27 - CODE: 0x00003520 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_28 - CODE: 0x00003528 5D 04 00 00 DC::kAssertPointer:
            loc_29 - CODE: 0x00003530 51 04 04 00 DC::kLoadPointer/kLoadI64/kLoadU64: R4, R4
            loc_30 - CODE: 0x00003538 2D 3A 00 00 DC::kBranch: B loc_58
            loc_31 - CODE: 0x00003540 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_32 - CODE: 0x00003548 2F 27 04 00 DC::kBranchIfNot: B loc_39
            loc_33 - CODE: 0x00003550 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_34 - CODE: 0x00003558 5D 04 00 00 DC::kAssertPointer:
            loc_35 - CODE: 0x00003560 3B 04 04 0C DC::kIaddImm: R4, R4, 12
            loc_36 - CODE: 0x00003568 4E 04 04 00 DC::kLoadU16: R4, B144A57CFDBD80D9
            loc_37 - CODE: 0x00003570 0C 05 05 00 DC::kLoadU16Immediate: R5, 5 | (0 << 0x8)
            loc_38 - CODE: 0x00003578 1D 04 04 05 DC::kIeq: R4 == R5
            loc_39 - CODE: 0x00003580 2F 2C 04 00 DC::kBranchIfNot: B loc_40
            loc_40 - CODE: 0x00003588 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_41 - CODE: 0x00003590 5D 04 00 00 DC::kAssertPointer:
            loc_42 - CODE: 0x00003598 51 04 04 00 DC::kLoadPointer/kLoadI64/kLoadU64: R4, R4
            loc_43 - CODE: 0x000035A0 2D 3A 00 00 DC::kBranch: B loc_58
            loc_44 - CODE: 0x000035A8 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_45 - CODE: 0x000035B0 2F 34 04 00 DC::kBranchIfNot: B loc_52
            loc_46 - CODE: 0x000035B8 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_47 - CODE: 0x000035C0 5D 04 00 00 DC::kAssertPointer:
            loc_48 - CODE: 0x000035C8 3B 04 04 0C DC::kIaddImm: R4, R4, 12
            loc_49 - CODE: 0x000035D0 4E 04 04 00 DC::kLoadU16: R4, B144A57CFDBD80D9
            loc_50 - CODE: 0x000035D8 0C 05 04 00 DC::kLoadU16Immediate: R5, 4 | (0 << 0x8)
            loc_51 - CODE: 0x000035E0 1D 04 04 05 DC::kIeq: R4 == R5
            loc_52 - CODE: 0x000035E8 2F 39 04 00 DC::kBranchIfNot: B loc_53
            loc_53 - CODE: 0x000035F0 43 04 03 00 DC::kMoveInteger/kMovePointer/kMove: R4, R3
            loc_54 - CODE: 0x000035F8 5D 04 00 00 DC::kAssertPointer:
            loc_55 - CODE: 0x00003600 51 04 04 00 DC::kLoadPointer/kLoadI64/kLoadU64: R4, R4
            loc_56 - CODE: 0x00003608 2D 3A 00 00 DC::kBranch: B loc_58
            loc_57 - CODE: 0x00003610 0C 04 00 00 DC::kLoadU16Immediate: R4, 0 | (0 << 0x8)
            loc_58 - CODE: 0x00003618 43 03 04 00 DC::kMoveInteger/kMovePointer/kMove: R3, R4
            loc_59 - CODE: 0x00003620 15 04 03 00 DC::kLookupInteger/kLookupFloat: R4 R3 -> hashid: 0x01B0043CB1358D18(spawn-entity)
            loc_60 - CODE: 0x00003628 43 05 03 00 DC::kMoveInteger/kMovePointer/kMove: R5, R3
            loc_61 - CODE: 0x00003630 0C 06 00 00 DC::kLoadU16Immediate: R6, 0 | (0 << 0x8)
            loc_62 - CODE: 0x00003638 0C 07 00 00 DC::kLoadU16Immediate: R7, 0 | (0 << 0x8)
            loc_63 - CODE: 0x00003640 43 31 05 00 DC::kMoveInteger/kMovePointer/kMove: R49, R5
            loc_64 - CODE: 0x00003648 43 32 06 00 DC::kMoveInteger/kMovePointer/kMove: R50, R6
            loc_65 - CODE: 0x00003650 43 33 07 00 DC::kMoveInteger/kMovePointer/kMove: R51, R7
            loc_66 - CODE: 0x00003658 1C 04 04 03 DC::kCallFf: ( spawn-entity '#0000000000000000 '#0000000000000000 '#0000000000000000 )
            loc_67 - CODE: 0x00003660 43 04 01 00 DC::kMoveInteger/kMovePointer/kMove: R4, R1
            loc_68 - CODE: 0x00003668 0C 05 01 00 DC::kLoadU16Immediate: R5, 1 | (0 << 0x8)
            loc_69 - CODE: 0x00003670 01 04 04 05 DC::kScriptCodeIAdd: R4, R4, R5
            loc_70 - CODE: 0x00003678 43 01 04 00 DC::kMoveInteger/kMovePointer/kMove: R1, R4
            loc_71 - CODE: 0x00003680 43 04 01 00 DC::kMoveInteger/kMovePointer/kMove: R4, R1
            loc_72 - CODE: 0x00003688 43 03 04 00 DC::kMoveInteger/kMovePointer/kMove: R3, R4
            loc_73 - CODE: 0x00003690 2D 08 00 00 DC::kBranch: B loc_8
            loc_74 - CODE: 0x00003698 15 03 04 00 DC::kLookupInteger/kLookupFloat: R3 R4 -> hashid: 0xB144A57CFDBD80D9(end-foreach)
            loc_75 - CODE: 0x000036A0 1C 03 03 00 DC::kCallFf: ( end-foreach )
            loc_76 - CODE: 0x000036A8 43 01 03 00 DC::kMoveInteger/kMovePointer/kMove: R1, R3
            loc_77 - CODE: 0x000036B0 15 01 05 00 DC::kLookupInteger/kLookupFloat: R1 R5 -> hashid: 0x1E2286D8AA77FAEC(#1E2286D8AA77FAEC)
            loc_78 - CODE: 0x000036B8 1B 01 01 00 DC::kCall: ( #1E2286D8AA77FAEC )
            loc_79 - CODE: 0x000036C0 00 01 01 00 DC::kScriptCodeReturn: 0x1E2286D8AA77FAEC
        )
)

(defun '#9C4AEABD1EFF8F0F
        (
            loc_0 - CODE: 0x00003750 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_1 - CODE: 0x00003758 4A 01 01 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 8CA05A8CD6625E33(#8CA05A8CD6625E33)
            loc_2 - CODE: 0x00003760 0C 02 03 00 DC::kLoadU16Immediate: R2, 3 | (0 << 0x8)
            loc_3 - CODE: 0x00003768 4A 03 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_4 - CODE: 0x00003770 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_5 - CODE: 0x00003778 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_6 - CODE: 0x00003780 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_7 - CODE: 0x00003788 1C 00 00 03 DC::kCallFf: ( set-int32 '#8CA05A8CD6625E33 '#0000000000000003 'self )
            loc_8 - CODE: 0x00003790 0C 00 00 00 DC::kLoadU16Immediate: R0, 0 | (0 << 0x8)
            loc_9 - CODE: 0x00003798 43 01 00 00 DC::kMoveInteger/kMovePointer/kMove: R1, R0
            loc_10 - CODE: 0x000037A0 15 02 03 00 DC::kLookupInteger/kLookupFloat: R2 R3 -> hashid: 0x88547F48DA223122(get-int32)
            loc_11 - CODE: 0x000037A8 4A 03 01 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 8CA05A8CD6625E33(#8CA05A8CD6625E33)
            loc_12 - CODE: 0x000037B0 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 2D19E518D40792B7(self)
            loc_13 - CODE: 0x000037B8 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_14 - CODE: 0x000037C0 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_15 - CODE: 0x000037C8 1C 02 02 02 DC::kCallFf: ( get-int32 '#8CA05A8CD6625E33 'self )
            loc_16 - CODE: 0x000037D0 20 01 01 02 DC::kIlt: R1 < R2
            loc_17 - CODE: 0x000037D8 2F 29 01 00 DC::kBranchIfNot: B loc_18
            loc_18 - CODE: 0x000037E0 15 01 04 00 DC::kLookupInteger/kLookupFloat: R1 R4 -> hashid: 0xD38017D9196659C4(group-shuffle)
            loc_19 - CODE: 0x000037E8 4A 02 05 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R2, 7036B77B06566546(#7036B77B06566546)
            loc_20 - CODE: 0x000037F0 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_21 - CODE: 0x000037F8 1B 01 01 01 DC::kCall: ( group-shuffle '#7036B77B06566546 )
            loc_22 - CODE: 0x00003800 15 01 06 00 DC::kLookupInteger/kLookupFloat: R1 R6 -> hashid: 0x5AA836A47F4DFE28(#5AA836A47F4DFE28)
            loc_23 - CODE: 0x00003808 15 02 07 00 DC::kLookupInteger/kLookupFloat: R2 R7 -> hashid: 0xA863D3A641A90D67(group-get-first-member)
            loc_24 - CODE: 0x00003810 4A 03 05 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 7036B77B06566546(#7036B77B06566546)
            loc_25 - CODE: 0x00003818 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_26 - CODE: 0x00003820 1B 02 02 01 DC::kCall: ( group-get-first-member '#7036B77B06566546 )
            loc_27 - CODE: 0x00003828 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_28 - CODE: 0x00003830 1B 01 01 01 DC::kCall: ( #5AA836A47F4DFE28 'group-get-first-member )
            loc_29 - CODE: 0x00003838 15 01 08 00 DC::kLookupInteger/kLookupFloat: R1 R8 -> hashid: 0x7BDC7740B2C7C543(darray-remove)
            loc_30 - CODE: 0x00003840 4A 02 05 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R2, 7036B77B06566546(#7036B77B06566546)
            loc_31 - CODE: 0x00003848 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_32 - CODE: 0x00003850 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_33 - CODE: 0x00003858 43 32 03 00 DC::kMoveInteger/kMovePointer/kMove: R50, R3
            loc_34 - CODE: 0x00003860 1C 01 01 02 DC::kCallFf: ( darray-remove '#7036B77B06566546 '#0000000000000000 )
            loc_35 - CODE: 0x00003868 43 01 00 00 DC::kMoveInteger/kMovePointer/kMove: R1, R0
            loc_36 - CODE: 0x00003870 0C 02 01 00 DC::kLoadU16Immediate: R2, 1 | (0 << 0x8)
            loc_37 - CODE: 0x00003878 01 01 01 02 DC::kScriptCodeIAdd: R1, R1, R2
            loc_38 - CODE: 0x00003880 43 00 01 00 DC::kMoveInteger/kMovePointer/kMove: R0, R1
            loc_39 - CODE: 0x00003888 43 01 00 00 DC::kMoveInteger/kMovePointer/kMove: R1, R0
            loc_40 - CODE: 0x00003890 2D 09 00 00 DC::kBranch: B loc_9
            loc_41 - CODE: 0x00003898 43 00 01 00 DC::kMoveInteger/kMovePointer/kMove: R0, R1
            loc_42 - CODE: 0x000038A0 00 00 00 00 DC::kScriptCodeReturn: 0x0000000000000001
        )
)

(defun '#9DBE153CB9088E9B
        (
            loc_0 - CODE: 0x00003948 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0x0E83FDAADA3ACD23(#0E83FDAADA3ACD23)
            loc_1 - CODE: 0x00003950 4A 01 01 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 0FCC25C0CB675047(#0FCC25C0CB675047)
            loc_2 - CODE: 0x00003958 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_3 - CODE: 0x00003960 1B 00 00 01 DC::kCall: ( #0E83FDAADA3ACD23 '#0FCC25C0CB675047 )
            loc_4 - CODE: 0x00003968 0C 01 01 00 DC::kLoadU16Immediate: R1, 1 | (0 << 0x8)
            loc_5 - CODE: 0x00003970 1D 00 00 01 DC::kIeq: R0 == R1
            loc_6 - CODE: 0x00003978 2F 10 00 00 DC::kBranchIfNot: B loc_7
            loc_7 - CODE: 0x00003980 15 00 02 00 DC::kLookupInteger/kLookupFloat: R0 R2 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_8 - CODE: 0x00003988 4A 01 03 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, C75D966632533F17(#C75D966632533F17)
            loc_9 - CODE: 0x00003990 0C 02 0F 00 DC::kLoadU16Immediate: R2, 15 | (0 << 0x8)
            loc_10 - CODE: 0x00003998 4A 03 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_11 - CODE: 0x000039A0 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_12 - CODE: 0x000039A8 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_13 - CODE: 0x000039B0 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_14 - CODE: 0x000039B8 1C 00 00 03 DC::kCallFf: ( set-int32 '#C75D966632533F17 '#000000000000000F 'self )
            loc_15 - CODE: 0x000039C0 2D 61 00 00 DC::kBranch: B loc_97
            loc_16 - CODE: 0x000039C8 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0x0E83FDAADA3ACD23(#0E83FDAADA3ACD23)
            loc_17 - CODE: 0x000039D0 4A 01 01 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 0FCC25C0CB675047(#0FCC25C0CB675047)
            loc_18 - CODE: 0x000039D8 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_19 - CODE: 0x000039E0 1B 00 00 01 DC::kCall: ( #0E83FDAADA3ACD23 '#0FCC25C0CB675047 )
            loc_20 - CODE: 0x000039E8 0C 01 02 00 DC::kLoadU16Immediate: R1, 2 | (0 << 0x8)
            loc_21 - CODE: 0x000039F0 1D 00 00 01 DC::kIeq: R0 == R1
            loc_22 - CODE: 0x000039F8 2F 20 00 00 DC::kBranchIfNot: B loc_23
            loc_23 - CODE: 0x00003A00 15 00 02 00 DC::kLookupInteger/kLookupFloat: R0 R2 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_24 - CODE: 0x00003A08 4A 01 03 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, C75D966632533F17(#C75D966632533F17)
            loc_25 - CODE: 0x00003A10 0C 02 14 00 DC::kLoadU16Immediate: R2, 20 | (0 << 0x8)
            loc_26 - CODE: 0x00003A18 4A 03 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_27 - CODE: 0x00003A20 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_28 - CODE: 0x00003A28 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_29 - CODE: 0x00003A30 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_30 - CODE: 0x00003A38 1C 00 00 03 DC::kCallFf: ( set-int32 '#C75D966632533F17 '#0000000000000014 'self )
            loc_31 - CODE: 0x00003A40 2D 61 00 00 DC::kBranch: B loc_97
            loc_32 - CODE: 0x00003A48 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0x0E83FDAADA3ACD23(#0E83FDAADA3ACD23)
            loc_33 - CODE: 0x00003A50 4A 01 01 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 0FCC25C0CB675047(#0FCC25C0CB675047)
            loc_34 - CODE: 0x00003A58 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_35 - CODE: 0x00003A60 1B 00 00 01 DC::kCall: ( #0E83FDAADA3ACD23 '#0FCC25C0CB675047 )
            loc_36 - CODE: 0x00003A68 0C 01 03 00 DC::kLoadU16Immediate: R1, 3 | (0 << 0x8)
            loc_37 - CODE: 0x00003A70 1D 00 00 01 DC::kIeq: R0 == R1
            loc_38 - CODE: 0x00003A78 2F 30 00 00 DC::kBranchIfNot: B loc_39
            loc_39 - CODE: 0x00003A80 15 00 02 00 DC::kLookupInteger/kLookupFloat: R0 R2 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_40 - CODE: 0x00003A88 4A 01 03 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, C75D966632533F17(#C75D966632533F17)
            loc_41 - CODE: 0x00003A90 0C 02 19 00 DC::kLoadU16Immediate: R2, 25 | (0 << 0x8)
            loc_42 - CODE: 0x00003A98 4A 03 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_43 - CODE: 0x00003AA0 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_44 - CODE: 0x00003AA8 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_45 - CODE: 0x00003AB0 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_46 - CODE: 0x00003AB8 1C 00 00 03 DC::kCallFf: ( set-int32 '#C75D966632533F17 '#0000000000000019 'self )
            loc_47 - CODE: 0x00003AC0 2D 61 00 00 DC::kBranch: B loc_97
            loc_48 - CODE: 0x00003AC8 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0x0E83FDAADA3ACD23(#0E83FDAADA3ACD23)
            loc_49 - CODE: 0x00003AD0 4A 01 01 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 0FCC25C0CB675047(#0FCC25C0CB675047)
            loc_50 - CODE: 0x00003AD8 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_51 - CODE: 0x00003AE0 1B 00 00 01 DC::kCall: ( #0E83FDAADA3ACD23 '#0FCC25C0CB675047 )
            loc_52 - CODE: 0x00003AE8 0C 01 04 00 DC::kLoadU16Immediate: R1, 4 | (0 << 0x8)
            loc_53 - CODE: 0x00003AF0 1D 00 00 01 DC::kIeq: R0 == R1
            loc_54 - CODE: 0x00003AF8 2F 40 00 00 DC::kBranchIfNot: B loc_55
            loc_55 - CODE: 0x00003B00 15 00 02 00 DC::kLookupInteger/kLookupFloat: R0 R2 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_56 - CODE: 0x00003B08 4A 01 03 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, C75D966632533F17(#C75D966632533F17)
            loc_57 - CODE: 0x00003B10 0C 02 1E 00 DC::kLoadU16Immediate: R2, 30 | (0 << 0x8)
            loc_58 - CODE: 0x00003B18 4A 03 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_59 - CODE: 0x00003B20 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_60 - CODE: 0x00003B28 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_61 - CODE: 0x00003B30 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_62 - CODE: 0x00003B38 1C 00 00 03 DC::kCallFf: ( set-int32 '#C75D966632533F17 '#000000000000001E 'self )
            loc_63 - CODE: 0x00003B40 2D 61 00 00 DC::kBranch: B loc_97
            loc_64 - CODE: 0x00003B48 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0x0E83FDAADA3ACD23(#0E83FDAADA3ACD23)
            loc_65 - CODE: 0x00003B50 4A 01 01 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 0FCC25C0CB675047(#0FCC25C0CB675047)
            loc_66 - CODE: 0x00003B58 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_67 - CODE: 0x00003B60 1B 00 00 01 DC::kCall: ( #0E83FDAADA3ACD23 '#0FCC25C0CB675047 )
            loc_68 - CODE: 0x00003B68 0C 01 05 00 DC::kLoadU16Immediate: R1, 5 | (0 << 0x8)
            loc_69 - CODE: 0x00003B70 1D 00 00 01 DC::kIeq: R0 == R1
            loc_70 - CODE: 0x00003B78 2F 50 00 00 DC::kBranchIfNot: B loc_71
            loc_71 - CODE: 0x00003B80 15 00 02 00 DC::kLookupInteger/kLookupFloat: R0 R2 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_72 - CODE: 0x00003B88 4A 01 03 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, C75D966632533F17(#C75D966632533F17)
            loc_73 - CODE: 0x00003B90 0C 02 23 00 DC::kLoadU16Immediate: R2, 35 | (0 << 0x8)
            loc_74 - CODE: 0x00003B98 4A 03 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_75 - CODE: 0x00003BA0 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_76 - CODE: 0x00003BA8 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_77 - CODE: 0x00003BB0 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_78 - CODE: 0x00003BB8 1C 00 00 03 DC::kCallFf: ( set-int32 '#C75D966632533F17 '#0000000000000023 'self )
            loc_79 - CODE: 0x00003BC0 2D 61 00 00 DC::kBranch: B loc_97
            loc_80 - CODE: 0x00003BC8 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0x0E83FDAADA3ACD23(#0E83FDAADA3ACD23)
            loc_81 - CODE: 0x00003BD0 4A 01 01 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 0FCC25C0CB675047(#0FCC25C0CB675047)
            loc_82 - CODE: 0x00003BD8 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_83 - CODE: 0x00003BE0 1B 00 00 01 DC::kCall: ( #0E83FDAADA3ACD23 '#0FCC25C0CB675047 )
            loc_84 - CODE: 0x00003BE8 0C 01 06 00 DC::kLoadU16Immediate: R1, 6 | (0 << 0x8)
            loc_85 - CODE: 0x00003BF0 1D 00 00 01 DC::kIeq: R0 == R1
            loc_86 - CODE: 0x00003BF8 2F 60 00 00 DC::kBranchIfNot: B loc_87
            loc_87 - CODE: 0x00003C00 15 00 02 00 DC::kLookupInteger/kLookupFloat: R0 R2 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_88 - CODE: 0x00003C08 4A 01 03 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, C75D966632533F17(#C75D966632533F17)
            loc_89 - CODE: 0x00003C10 0C 02 28 00 DC::kLoadU16Immediate: R2, 40 | (0 << 0x8)
            loc_90 - CODE: 0x00003C18 4A 03 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_91 - CODE: 0x00003C20 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_92 - CODE: 0x00003C28 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_93 - CODE: 0x00003C30 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_94 - CODE: 0x00003C38 1C 00 00 03 DC::kCallFf: ( set-int32 '#C75D966632533F17 '#0000000000000028 'self )
            loc_95 - CODE: 0x00003C40 2D 61 00 00 DC::kBranch: B loc_97
            loc_96 - CODE: 0x00003C48 0C 00 00 00 DC::kLoadU16Immediate: R0, 0 | (0 << 0x8)
            loc_97 - CODE: 0x00003C50 00 00 00 00 DC::kScriptCodeReturn: 0x0000000000000000
        )
)

(defun '#9EA9967E8B1C5EA9
        (
            loc_0 - CODE: 0x00003CD8 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0xEBDCBA372AFA03A3(get-difficulty-setting-allies)
            loc_1 - CODE: 0x00003CE0 1C 00 00 00 DC::kCallFf: ( get-difficulty-setting-allies )
            loc_2 - CODE: 0x00003CE8 0C 01 00 00 DC::kLoadU16Immediate: R1, 0 | (0 << 0x8)
            loc_3 - CODE: 0x00003CF0 1D 00 00 01 DC::kIeq: R0 == R1
            loc_4 - CODE: 0x00003CF8 2F 0E 00 00 DC::kBranchIfNot: B loc_5
            loc_5 - CODE: 0x00003D00 15 00 01 00 DC::kLookupInteger/kLookupFloat: R0 R1 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_6 - CODE: 0x00003D08 4A 01 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, E08F5176DD52B65B(#E08F5176DD52B65B)
            loc_7 - CODE: 0x00003D10 0C 02 06 00 DC::kLoadU16Immediate: R2, 6 | (0 << 0x8)
            loc_8 - CODE: 0x00003D18 4A 03 03 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_9 - CODE: 0x00003D20 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_10 - CODE: 0x00003D28 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_11 - CODE: 0x00003D30 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_12 - CODE: 0x00003D38 1C 00 00 03 DC::kCallFf: ( set-int32 '#E08F5176DD52B65B '#0000000000000006 'self )
            loc_13 - CODE: 0x00003D40 2D 55 00 00 DC::kBranch: B loc_85
            loc_14 - CODE: 0x00003D48 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0xEBDCBA372AFA03A3(get-difficulty-setting-allies)
            loc_15 - CODE: 0x00003D50 1C 00 00 00 DC::kCallFf: ( get-difficulty-setting-allies )
            loc_16 - CODE: 0x00003D58 0C 01 01 00 DC::kLoadU16Immediate: R1, 1 | (0 << 0x8)
            loc_17 - CODE: 0x00003D60 1D 00 00 01 DC::kIeq: R0 == R1
            loc_18 - CODE: 0x00003D68 2F 1C 00 00 DC::kBranchIfNot: B loc_19
            loc_19 - CODE: 0x00003D70 15 00 01 00 DC::kLookupInteger/kLookupFloat: R0 R1 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_20 - CODE: 0x00003D78 4A 01 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, E08F5176DD52B65B(#E08F5176DD52B65B)
            loc_21 - CODE: 0x00003D80 0C 02 07 00 DC::kLoadU16Immediate: R2, 7 | (0 << 0x8)
            loc_22 - CODE: 0x00003D88 4A 03 03 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_23 - CODE: 0x00003D90 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_24 - CODE: 0x00003D98 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_25 - CODE: 0x00003DA0 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_26 - CODE: 0x00003DA8 1C 00 00 03 DC::kCallFf: ( set-int32 '#E08F5176DD52B65B '#0000000000000007 'self )
            loc_27 - CODE: 0x00003DB0 2D 55 00 00 DC::kBranch: B loc_85
            loc_28 - CODE: 0x00003DB8 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0xEBDCBA372AFA03A3(get-difficulty-setting-allies)
            loc_29 - CODE: 0x00003DC0 1C 00 00 00 DC::kCallFf: ( get-difficulty-setting-allies )
            loc_30 - CODE: 0x00003DC8 0C 01 02 00 DC::kLoadU16Immediate: R1, 2 | (0 << 0x8)
            loc_31 - CODE: 0x00003DD0 1D 00 00 01 DC::kIeq: R0 == R1
            loc_32 - CODE: 0x00003DD8 2F 2A 00 00 DC::kBranchIfNot: B loc_33
            loc_33 - CODE: 0x00003DE0 15 00 01 00 DC::kLookupInteger/kLookupFloat: R0 R1 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_34 - CODE: 0x00003DE8 4A 01 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, E08F5176DD52B65B(#E08F5176DD52B65B)
            loc_35 - CODE: 0x00003DF0 0C 02 08 00 DC::kLoadU16Immediate: R2, 8 | (0 << 0x8)
            loc_36 - CODE: 0x00003DF8 4A 03 03 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_37 - CODE: 0x00003E00 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_38 - CODE: 0x00003E08 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_39 - CODE: 0x00003E10 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_40 - CODE: 0x00003E18 1C 00 00 03 DC::kCallFf: ( set-int32 '#E08F5176DD52B65B '#0000000000000008 'self )
            loc_41 - CODE: 0x00003E20 2D 55 00 00 DC::kBranch: B loc_85
            loc_42 - CODE: 0x00003E28 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0xEBDCBA372AFA03A3(get-difficulty-setting-allies)
            loc_43 - CODE: 0x00003E30 1C 00 00 00 DC::kCallFf: ( get-difficulty-setting-allies )
            loc_44 - CODE: 0x00003E38 0C 01 03 00 DC::kLoadU16Immediate: R1, 3 | (0 << 0x8)
            loc_45 - CODE: 0x00003E40 1D 00 00 01 DC::kIeq: R0 == R1
            loc_46 - CODE: 0x00003E48 2F 38 00 00 DC::kBranchIfNot: B loc_47
            loc_47 - CODE: 0x00003E50 15 00 01 00 DC::kLookupInteger/kLookupFloat: R0 R1 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_48 - CODE: 0x00003E58 4A 01 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, E08F5176DD52B65B(#E08F5176DD52B65B)
            loc_49 - CODE: 0x00003E60 0C 02 09 00 DC::kLoadU16Immediate: R2, 9 | (0 << 0x8)
            loc_50 - CODE: 0x00003E68 4A 03 03 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_51 - CODE: 0x00003E70 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_52 - CODE: 0x00003E78 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_53 - CODE: 0x00003E80 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_54 - CODE: 0x00003E88 1C 00 00 03 DC::kCallFf: ( set-int32 '#E08F5176DD52B65B '#0000000000000009 'self )
            loc_55 - CODE: 0x00003E90 2D 55 00 00 DC::kBranch: B loc_85
            loc_56 - CODE: 0x00003E98 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0xEBDCBA372AFA03A3(get-difficulty-setting-allies)
            loc_57 - CODE: 0x00003EA0 1C 00 00 00 DC::kCallFf: ( get-difficulty-setting-allies )
            loc_58 - CODE: 0x00003EA8 0C 01 04 00 DC::kLoadU16Immediate: R1, 4 | (0 << 0x8)
            loc_59 - CODE: 0x00003EB0 1D 00 00 01 DC::kIeq: R0 == R1
            loc_60 - CODE: 0x00003EB8 2F 46 00 00 DC::kBranchIfNot: B loc_61
            loc_61 - CODE: 0x00003EC0 15 00 01 00 DC::kLookupInteger/kLookupFloat: R0 R1 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_62 - CODE: 0x00003EC8 4A 01 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, E08F5176DD52B65B(#E08F5176DD52B65B)
            loc_63 - CODE: 0x00003ED0 0C 02 0A 00 DC::kLoadU16Immediate: R2, 10 | (0 << 0x8)
            loc_64 - CODE: 0x00003ED8 4A 03 03 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_65 - CODE: 0x00003EE0 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_66 - CODE: 0x00003EE8 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_67 - CODE: 0x00003EF0 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_68 - CODE: 0x00003EF8 1C 00 00 03 DC::kCallFf: ( set-int32 '#E08F5176DD52B65B '#000000000000000A 'self )
            loc_69 - CODE: 0x00003F00 2D 55 00 00 DC::kBranch: B loc_85
            loc_70 - CODE: 0x00003F08 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0xEBDCBA372AFA03A3(get-difficulty-setting-allies)
            loc_71 - CODE: 0x00003F10 1C 00 00 00 DC::kCallFf: ( get-difficulty-setting-allies )
            loc_72 - CODE: 0x00003F18 0C 01 05 00 DC::kLoadU16Immediate: R1, 5 | (0 << 0x8)
            loc_73 - CODE: 0x00003F20 1D 00 00 01 DC::kIeq: R0 == R1
            loc_74 - CODE: 0x00003F28 2F 54 00 00 DC::kBranchIfNot: B loc_75
            loc_75 - CODE: 0x00003F30 15 00 01 00 DC::kLookupInteger/kLookupFloat: R0 R1 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_76 - CODE: 0x00003F38 4A 01 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, E08F5176DD52B65B(#E08F5176DD52B65B)
            loc_77 - CODE: 0x00003F40 0C 02 0D 00 DC::kLoadU16Immediate: R2, 13 | (0 << 0x8)
            loc_78 - CODE: 0x00003F48 4A 03 03 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_79 - CODE: 0x00003F50 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_80 - CODE: 0x00003F58 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_81 - CODE: 0x00003F60 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_82 - CODE: 0x00003F68 1C 00 00 03 DC::kCallFf: ( set-int32 '#E08F5176DD52B65B '#000000000000000D 'self )
            loc_83 - CODE: 0x00003F70 2D 55 00 00 DC::kBranch: B loc_85
            loc_84 - CODE: 0x00003F78 0C 00 00 00 DC::kLoadU16Immediate: R0, 0 | (0 << 0x8)
            loc_85 - CODE: 0x00003F80 00 00 00 00 DC::kScriptCodeReturn: 0x0000000000000000
        )
)

(defun '#A17CDF2A5F1A9D6A
        (
            loc_0 - CODE: 0x00004000 0C 00 00 00 DC::kLoadU16Immediate: R0, 0 | (0 << 0x8)
            loc_1 - CODE: 0x00004008 15 01 00 00 DC::kLookupInteger/kLookupFloat: R1 R0 -> hashid: 0x37B1139C687F2546(darray-count)
            loc_2 - CODE: 0x00004010 15 02 01 00 DC::kLookupInteger/kLookupFloat: R2 R1 -> hashid: 0x064B2CA28F02B29E(get-spawners-by-tag)
            loc_3 - CODE: 0x00004018 4A 03 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 0E345854212F664F(#0E345854212F664F)
            loc_4 - CODE: 0x00004020 0C 04 00 00 DC::kLoadU16Immediate: R4, 0 | (0 << 0x8)
            loc_5 - CODE: 0x00004028 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_6 - CODE: 0x00004030 0C 06 00 00 DC::kLoadU16Immediate: R6, 0 | (0 << 0x8)
            loc_7 - CODE: 0x00004038 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_8 - CODE: 0x00004040 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_9 - CODE: 0x00004048 43 33 05 00 DC::kMoveInteger/kMovePointer/kMove: R51, R5
            loc_10 - CODE: 0x00004050 43 34 06 00 DC::kMoveInteger/kMovePointer/kMove: R52, R6
            loc_11 - CODE: 0x00004058 1C 02 02 04 DC::kCallFf: ( get-spawners-by-tag '#0E345854212F664F '#0000000000000000 '#0000000000000000 '#0000000000000000 )
            loc_12 - CODE: 0x00004060 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_13 - CODE: 0x00004068 1C 01 01 01 DC::kCallFf: ( darray-count 'get-spawners-by-tag )
            loc_14 - CODE: 0x00004070 15 02 03 00 DC::kLookupInteger/kLookupFloat: R2 R3 -> hashid: 0x2F82623ED7481B3D(begin-foreach)
            loc_15 - CODE: 0x00004078 1C 02 02 00 DC::kCallFf: ( begin-foreach )
            loc_16 - CODE: 0x00004080 43 02 00 00 DC::kMoveInteger/kMovePointer/kMove: R2, R0
            loc_17 - CODE: 0x00004088 43 03 01 00 DC::kMoveInteger/kMovePointer/kMove: R3, R1
            loc_18 - CODE: 0x00004090 20 02 02 03 DC::kIlt: R2 < R3
            loc_19 - CODE: 0x00004098 2F EC 02 00 DC::kBranchIfNot: B loc_236
            loc_20 - CODE: 0x000040A0 15 02 04 00 DC::kLookupInteger/kLookupFloat: R2 R4 -> hashid: 0xDB044C8529474AEA(darray-at)
            loc_21 - CODE: 0x000040A8 15 03 01 00 DC::kLookupInteger/kLookupFloat: R3 R1 -> hashid: 0x064B2CA28F02B29E(get-spawners-by-tag)
            loc_22 - CODE: 0x000040B0 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 0E345854212F664F(#0E345854212F664F)
            loc_23 - CODE: 0x000040B8 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_24 - CODE: 0x000040C0 0C 06 00 00 DC::kLoadU16Immediate: R6, 0 | (0 << 0x8)
            loc_25 - CODE: 0x000040C8 0C 07 00 00 DC::kLoadU16Immediate: R7, 0 | (0 << 0x8)
            loc_26 - CODE: 0x000040D0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_27 - CODE: 0x000040D8 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_28 - CODE: 0x000040E0 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_29 - CODE: 0x000040E8 43 34 07 00 DC::kMoveInteger/kMovePointer/kMove: R52, R7
            loc_30 - CODE: 0x000040F0 1C 03 03 04 DC::kCallFf: ( get-spawners-by-tag '#0E345854212F664F '#0000000000000000 '#0000000000000000 '#0000000000000000 )
            loc_31 - CODE: 0x000040F8 43 04 00 00 DC::kMoveInteger/kMovePointer/kMove: R4, R0
            loc_32 - CODE: 0x00004100 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_33 - CODE: 0x00004108 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_34 - CODE: 0x00004110 1C 02 02 02 DC::kCallFf: ( darray-at 'get-spawners-by-tag '#0000000000000000 )
            loc_35 - CODE: 0x00004118 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_36 - CODE: 0x00004120 2F 2B 03 00 DC::kBranchIfNot: B loc_43
            loc_37 - CODE: 0x00004128 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_38 - CODE: 0x00004130 5D 03 00 00 DC::kAssertPointer:
            loc_39 - CODE: 0x00004138 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_40 - CODE: 0x00004140 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_41 - CODE: 0x00004148 0C 04 07 00 DC::kLoadU16Immediate: R4, 7 | (0 << 0x8)
            loc_42 - CODE: 0x00004150 1D 03 03 04 DC::kIeq: R3 == R4
            loc_43 - CODE: 0x00004158 2F 30 03 00 DC::kBranchIfNot: B loc_44
            loc_44 - CODE: 0x00004160 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_45 - CODE: 0x00004168 5D 03 00 00 DC::kAssertPointer:
            loc_46 - CODE: 0x00004170 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_47 - CODE: 0x00004178 2D 4B 00 00 DC::kBranch: B loc_75
            loc_48 - CODE: 0x00004180 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_49 - CODE: 0x00004188 2F 38 03 00 DC::kBranchIfNot: B loc_56
            loc_50 - CODE: 0x00004190 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_51 - CODE: 0x00004198 5D 03 00 00 DC::kAssertPointer:
            loc_52 - CODE: 0x000041A0 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_53 - CODE: 0x000041A8 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_54 - CODE: 0x000041B0 0C 04 05 00 DC::kLoadU16Immediate: R4, 5 | (0 << 0x8)
            loc_55 - CODE: 0x000041B8 1D 03 03 04 DC::kIeq: R3 == R4
            loc_56 - CODE: 0x000041C0 2F 3D 03 00 DC::kBranchIfNot: B loc_57
            loc_57 - CODE: 0x000041C8 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_58 - CODE: 0x000041D0 5D 03 00 00 DC::kAssertPointer:
            loc_59 - CODE: 0x000041D8 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_60 - CODE: 0x000041E0 2D 4B 00 00 DC::kBranch: B loc_75
            loc_61 - CODE: 0x000041E8 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_62 - CODE: 0x000041F0 2F 45 03 00 DC::kBranchIfNot: B loc_69
            loc_63 - CODE: 0x000041F8 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_64 - CODE: 0x00004200 5D 03 00 00 DC::kAssertPointer:
            loc_65 - CODE: 0x00004208 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_66 - CODE: 0x00004210 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_67 - CODE: 0x00004218 0C 04 04 00 DC::kLoadU16Immediate: R4, 4 | (0 << 0x8)
            loc_68 - CODE: 0x00004220 1D 03 03 04 DC::kIeq: R3 == R4
            loc_69 - CODE: 0x00004228 2F 4A 03 00 DC::kBranchIfNot: B loc_70
            loc_70 - CODE: 0x00004230 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_71 - CODE: 0x00004238 5D 03 00 00 DC::kAssertPointer:
            loc_72 - CODE: 0x00004240 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_73 - CODE: 0x00004248 2D 4B 00 00 DC::kBranch: B loc_75
            loc_74 - CODE: 0x00004250 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_75 - CODE: 0x00004258 43 02 03 00 DC::kMoveInteger/kMovePointer/kMove: R2, R3
            loc_76 - CODE: 0x00004260 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x573E5609158C8746(tag-int32)
            loc_77 - CODE: 0x00004268 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 0E345854212F664F(#0E345854212F664F)
            loc_78 - CODE: 0x00004270 43 05 02 00 DC::kMoveInteger/kMovePointer/kMove: R5, R2
            loc_79 - CODE: 0x00004278 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_80 - CODE: 0x00004280 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_81 - CODE: 0x00004288 1C 03 03 02 DC::kCallFf: ( tag-int32 '#0E345854212F664F '#0000000000000000 )
            loc_82 - CODE: 0x00004290 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_83 - CODE: 0x00004298 1D 03 03 04 DC::kIeq: R3 == R4
            loc_84 - CODE: 0x000042A0 2F 63 03 00 DC::kBranchIfNot: B loc_85
            loc_85 - CODE: 0x000042A8 15 03 06 00 DC::kLookupInteger/kLookupFloat: R3 R6 -> hashid: 0x2E1754E916BAC4F7(darray-append)
            loc_86 - CODE: 0x000042B0 4A 04 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 90BC8DC2C244CE57(#90BC8DC2C244CE57)
            loc_87 - CODE: 0x000042B8 15 05 08 00 DC::kLookupInteger/kLookupFloat: R5 R8 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_88 - CODE: 0x000042C0 0C 06 07 00 DC::kLoadU16Immediate: R6, 7 | (0 << 0x8)
            loc_89 - CODE: 0x000042C8 43 07 02 00 DC::kMoveInteger/kMovePointer/kMove: R7, R2
            loc_90 - CODE: 0x000042D0 43 31 06 00 DC::kMoveInteger/kMovePointer/kMove: R49, R6
            loc_91 - CODE: 0x000042D8 43 32 07 00 DC::kMoveInteger/kMovePointer/kMove: R50, R7
            loc_92 - CODE: 0x000042E0 1C 05 05 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#0000000000000000 )
            loc_93 - CODE: 0x000042E8 0C 06 01 00 DC::kLoadU16Immediate: R6, 1 | (0 << 0x8)
            loc_94 - CODE: 0x000042F0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_95 - CODE: 0x000042F8 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_96 - CODE: 0x00004300 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_97 - CODE: 0x00004308 1C 03 03 03 DC::kCallFf: ( darray-append '#90BC8DC2C244CE57 'new-boxed-value '#0000000000000001 )
            loc_98 - CODE: 0x00004310 2D E5 00 00 DC::kBranch: B loc_229
            loc_99 - CODE: 0x00004318 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x573E5609158C8746(tag-int32)
            loc_100 - CODE: 0x00004320 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 0E345854212F664F(#0E345854212F664F)
            loc_101 - CODE: 0x00004328 43 05 02 00 DC::kMoveInteger/kMovePointer/kMove: R5, R2
            loc_102 - CODE: 0x00004330 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_103 - CODE: 0x00004338 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_104 - CODE: 0x00004340 1C 03 03 02 DC::kCallFf: ( tag-int32 '#0E345854212F664F '#0000000000000000 )
            loc_105 - CODE: 0x00004348 0C 04 02 00 DC::kLoadU16Immediate: R4, 2 | (0 << 0x8)
            loc_106 - CODE: 0x00004350 1D 03 03 04 DC::kIeq: R3 == R4
            loc_107 - CODE: 0x00004358 2F 7A 03 00 DC::kBranchIfNot: B loc_108
            loc_108 - CODE: 0x00004360 15 03 06 00 DC::kLookupInteger/kLookupFloat: R3 R6 -> hashid: 0x2E1754E916BAC4F7(darray-append)
            loc_109 - CODE: 0x00004368 4A 04 09 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 90BC8EC2C244D00A(#90BC8EC2C244D00A)
            loc_110 - CODE: 0x00004370 15 05 08 00 DC::kLookupInteger/kLookupFloat: R5 R8 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_111 - CODE: 0x00004378 0C 06 07 00 DC::kLoadU16Immediate: R6, 7 | (0 << 0x8)
            loc_112 - CODE: 0x00004380 43 07 02 00 DC::kMoveInteger/kMovePointer/kMove: R7, R2
            loc_113 - CODE: 0x00004388 43 31 06 00 DC::kMoveInteger/kMovePointer/kMove: R49, R6
            loc_114 - CODE: 0x00004390 43 32 07 00 DC::kMoveInteger/kMovePointer/kMove: R50, R7
            loc_115 - CODE: 0x00004398 1C 05 05 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#0000000000000000 )
            loc_116 - CODE: 0x000043A0 0C 06 01 00 DC::kLoadU16Immediate: R6, 1 | (0 << 0x8)
            loc_117 - CODE: 0x000043A8 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_118 - CODE: 0x000043B0 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_119 - CODE: 0x000043B8 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_120 - CODE: 0x000043C0 1C 03 03 03 DC::kCallFf: ( darray-append '#90BC8EC2C244D00A 'new-boxed-value '#0000000000000001 )
            loc_121 - CODE: 0x000043C8 2D E5 00 00 DC::kBranch: B loc_229
            loc_122 - CODE: 0x000043D0 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x573E5609158C8746(tag-int32)
            loc_123 - CODE: 0x000043D8 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 0E345854212F664F(#0E345854212F664F)
            loc_124 - CODE: 0x000043E0 43 05 02 00 DC::kMoveInteger/kMovePointer/kMove: R5, R2
            loc_125 - CODE: 0x000043E8 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_126 - CODE: 0x000043F0 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_127 - CODE: 0x000043F8 1C 03 03 02 DC::kCallFf: ( tag-int32 '#0E345854212F664F '#0000000000000000 )
            loc_128 - CODE: 0x00004400 0C 04 03 00 DC::kLoadU16Immediate: R4, 3 | (0 << 0x8)
            loc_129 - CODE: 0x00004408 1D 03 03 04 DC::kIeq: R3 == R4
            loc_130 - CODE: 0x00004410 2F 91 03 00 DC::kBranchIfNot: B loc_131
            loc_131 - CODE: 0x00004418 15 03 06 00 DC::kLookupInteger/kLookupFloat: R3 R6 -> hashid: 0x2E1754E916BAC4F7(darray-append)
            loc_132 - CODE: 0x00004420 4A 04 0A 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 90BC8FC2C244D1BD(#90BC8FC2C244D1BD)
            loc_133 - CODE: 0x00004428 15 05 08 00 DC::kLookupInteger/kLookupFloat: R5 R8 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_134 - CODE: 0x00004430 0C 06 07 00 DC::kLoadU16Immediate: R6, 7 | (0 << 0x8)
            loc_135 - CODE: 0x00004438 43 07 02 00 DC::kMoveInteger/kMovePointer/kMove: R7, R2
            loc_136 - CODE: 0x00004440 43 31 06 00 DC::kMoveInteger/kMovePointer/kMove: R49, R6
            loc_137 - CODE: 0x00004448 43 32 07 00 DC::kMoveInteger/kMovePointer/kMove: R50, R7
            loc_138 - CODE: 0x00004450 1C 05 05 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#0000000000000000 )
            loc_139 - CODE: 0x00004458 0C 06 01 00 DC::kLoadU16Immediate: R6, 1 | (0 << 0x8)
            loc_140 - CODE: 0x00004460 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_141 - CODE: 0x00004468 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_142 - CODE: 0x00004470 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_143 - CODE: 0x00004478 1C 03 03 03 DC::kCallFf: ( darray-append '#90BC8FC2C244D1BD 'new-boxed-value '#0000000000000001 )
            loc_144 - CODE: 0x00004480 2D E5 00 00 DC::kBranch: B loc_229
            loc_145 - CODE: 0x00004488 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x573E5609158C8746(tag-int32)
            loc_146 - CODE: 0x00004490 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 0E345854212F664F(#0E345854212F664F)
            loc_147 - CODE: 0x00004498 43 05 02 00 DC::kMoveInteger/kMovePointer/kMove: R5, R2
            loc_148 - CODE: 0x000044A0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_149 - CODE: 0x000044A8 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_150 - CODE: 0x000044B0 1C 03 03 02 DC::kCallFf: ( tag-int32 '#0E345854212F664F '#0000000000000000 )
            loc_151 - CODE: 0x000044B8 0C 04 04 00 DC::kLoadU16Immediate: R4, 4 | (0 << 0x8)
            loc_152 - CODE: 0x000044C0 1D 03 03 04 DC::kIeq: R3 == R4
            loc_153 - CODE: 0x000044C8 2F A8 03 00 DC::kBranchIfNot: B loc_154
            loc_154 - CODE: 0x000044D0 15 03 06 00 DC::kLookupInteger/kLookupFloat: R3 R6 -> hashid: 0x2E1754E916BAC4F7(darray-append)
            loc_155 - CODE: 0x000044D8 4A 04 0B 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 90BC88C2C244C5D8(#90BC88C2C244C5D8)
            loc_156 - CODE: 0x000044E0 15 05 08 00 DC::kLookupInteger/kLookupFloat: R5 R8 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_157 - CODE: 0x000044E8 0C 06 07 00 DC::kLoadU16Immediate: R6, 7 | (0 << 0x8)
            loc_158 - CODE: 0x000044F0 43 07 02 00 DC::kMoveInteger/kMovePointer/kMove: R7, R2
            loc_159 - CODE: 0x000044F8 43 31 06 00 DC::kMoveInteger/kMovePointer/kMove: R49, R6
            loc_160 - CODE: 0x00004500 43 32 07 00 DC::kMoveInteger/kMovePointer/kMove: R50, R7
            loc_161 - CODE: 0x00004508 1C 05 05 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#0000000000000000 )
            loc_162 - CODE: 0x00004510 0C 06 01 00 DC::kLoadU16Immediate: R6, 1 | (0 << 0x8)
            loc_163 - CODE: 0x00004518 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_164 - CODE: 0x00004520 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_165 - CODE: 0x00004528 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_166 - CODE: 0x00004530 1C 03 03 03 DC::kCallFf: ( darray-append '#90BC88C2C244C5D8 'new-boxed-value '#0000000000000001 )
            loc_167 - CODE: 0x00004538 2D E5 00 00 DC::kBranch: B loc_229
            loc_168 - CODE: 0x00004540 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x573E5609158C8746(tag-int32)
            loc_169 - CODE: 0x00004548 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 0E345854212F664F(#0E345854212F664F)
            loc_170 - CODE: 0x00004550 43 05 02 00 DC::kMoveInteger/kMovePointer/kMove: R5, R2
            loc_171 - CODE: 0x00004558 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_172 - CODE: 0x00004560 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_173 - CODE: 0x00004568 1C 03 03 02 DC::kCallFf: ( tag-int32 '#0E345854212F664F '#0000000000000000 )
            loc_174 - CODE: 0x00004570 0C 04 05 00 DC::kLoadU16Immediate: R4, 5 | (0 << 0x8)
            loc_175 - CODE: 0x00004578 1D 03 03 04 DC::kIeq: R3 == R4
            loc_176 - CODE: 0x00004580 2F BF 03 00 DC::kBranchIfNot: B loc_177
            loc_177 - CODE: 0x00004588 15 03 06 00 DC::kLookupInteger/kLookupFloat: R3 R6 -> hashid: 0x2E1754E916BAC4F7(darray-append)
            loc_178 - CODE: 0x00004590 4A 04 0C 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 90BC89C2C244C78B(#90BC89C2C244C78B)
            loc_179 - CODE: 0x00004598 15 05 08 00 DC::kLookupInteger/kLookupFloat: R5 R8 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_180 - CODE: 0x000045A0 0C 06 07 00 DC::kLoadU16Immediate: R6, 7 | (0 << 0x8)
            loc_181 - CODE: 0x000045A8 43 07 02 00 DC::kMoveInteger/kMovePointer/kMove: R7, R2
            loc_182 - CODE: 0x000045B0 43 31 06 00 DC::kMoveInteger/kMovePointer/kMove: R49, R6
            loc_183 - CODE: 0x000045B8 43 32 07 00 DC::kMoveInteger/kMovePointer/kMove: R50, R7
            loc_184 - CODE: 0x000045C0 1C 05 05 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#0000000000000000 )
            loc_185 - CODE: 0x000045C8 0C 06 01 00 DC::kLoadU16Immediate: R6, 1 | (0 << 0x8)
            loc_186 - CODE: 0x000045D0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_187 - CODE: 0x000045D8 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_188 - CODE: 0x000045E0 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_189 - CODE: 0x000045E8 1C 03 03 03 DC::kCallFf: ( darray-append '#90BC89C2C244C78B 'new-boxed-value '#0000000000000001 )
            loc_190 - CODE: 0x000045F0 2D E5 00 00 DC::kBranch: B loc_229
            loc_191 - CODE: 0x000045F8 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x573E5609158C8746(tag-int32)
            loc_192 - CODE: 0x00004600 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 0E345854212F664F(#0E345854212F664F)
            loc_193 - CODE: 0x00004608 43 05 02 00 DC::kMoveInteger/kMovePointer/kMove: R5, R2
            loc_194 - CODE: 0x00004610 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_195 - CODE: 0x00004618 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_196 - CODE: 0x00004620 1C 03 03 02 DC::kCallFf: ( tag-int32 '#0E345854212F664F '#0000000000000000 )
            loc_197 - CODE: 0x00004628 0C 04 06 00 DC::kLoadU16Immediate: R4, 6 | (0 << 0x8)
            loc_198 - CODE: 0x00004630 1D 03 03 04 DC::kIeq: R3 == R4
            loc_199 - CODE: 0x00004638 2F D6 03 00 DC::kBranchIfNot: B loc_200
            loc_200 - CODE: 0x00004640 15 03 06 00 DC::kLookupInteger/kLookupFloat: R3 R6 -> hashid: 0x2E1754E916BAC4F7(darray-append)
            loc_201 - CODE: 0x00004648 4A 04 0D 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 90BC8AC2C244C93E(#90BC8AC2C244C93E)
            loc_202 - CODE: 0x00004650 15 05 08 00 DC::kLookupInteger/kLookupFloat: R5 R8 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_203 - CODE: 0x00004658 0C 06 07 00 DC::kLoadU16Immediate: R6, 7 | (0 << 0x8)
            loc_204 - CODE: 0x00004660 43 07 02 00 DC::kMoveInteger/kMovePointer/kMove: R7, R2
            loc_205 - CODE: 0x00004668 43 31 06 00 DC::kMoveInteger/kMovePointer/kMove: R49, R6
            loc_206 - CODE: 0x00004670 43 32 07 00 DC::kMoveInteger/kMovePointer/kMove: R50, R7
            loc_207 - CODE: 0x00004678 1C 05 05 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#0000000000000000 )
            loc_208 - CODE: 0x00004680 0C 06 01 00 DC::kLoadU16Immediate: R6, 1 | (0 << 0x8)
            loc_209 - CODE: 0x00004688 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_210 - CODE: 0x00004690 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_211 - CODE: 0x00004698 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_212 - CODE: 0x000046A0 1C 03 03 03 DC::kCallFf: ( darray-append '#90BC8AC2C244C93E 'new-boxed-value '#0000000000000001 )
            loc_213 - CODE: 0x000046A8 2D E5 00 00 DC::kBranch: B loc_229
            loc_214 - CODE: 0x000046B0 15 03 0E 00 DC::kLookupInteger/kLookupFloat: R3 R14 -> hashid: 0x917303216620ACB6(is-final-build?)
            loc_215 - CODE: 0x000046B8 1C 03 03 00 DC::kCallFf: ( is-final-build? )
            loc_216 - CODE: 0x000046C0 30 03 03 00 DC::kNot: R3 R3
            loc_217 - CODE: 0x000046C8 2F E4 03 00 DC::kBranchIfNot: B loc_218
            loc_218 - CODE: 0x000046D0 15 03 0F 00 DC::kLookupInteger/kLookupFloat: R3 R15 -> hashid: 0xE64D0EF45AB45695(display)
            loc_219 - CODE: 0x000046D8 15 04 10 00 DC::kLookupInteger/kLookupFloat: R4 R16 -> hashid: 0x5445173390656D6D(#5445173390656D6D)
            loc_220 - CODE: 0x000046E0 41 05 11 00 DC::kLoadStaticPointerImm: R5, 000001C7FAEC9F7C // offset 1684C
            loc_221 - CODE: 0x000046E8 43 31 05 00 DC::kMoveInteger/kMovePointer/kMove: R49, R5
            loc_222 - CODE: 0x000046F0 1C 04 04 01 DC::kCallFf: ( #5445173390656D6D '#000000000001684C )
            loc_223 - CODE: 0x000046F8 0C 05 13 00 DC::kLoadU16Immediate: R5, 19 | (0 << 0x8)
            loc_224 - CODE: 0x00004700 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_225 - CODE: 0x00004708 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_226 - CODE: 0x00004710 1C 03 03 02 DC::kCallFf: ( display '#5445173390656D6D '#0000000000000013 )
            loc_227 - CODE: 0x00004718 2D E5 00 00 DC::kBranch: B loc_229
            loc_228 - CODE: 0x00004720 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_229 - CODE: 0x00004728 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_230 - CODE: 0x00004730 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_231 - CODE: 0x00004738 01 03 03 04 DC::kScriptCodeIAdd: R3, R3, R4
            loc_232 - CODE: 0x00004740 43 00 03 00 DC::kMoveInteger/kMovePointer/kMove: R0, R3
            loc_233 - CODE: 0x00004748 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_234 - CODE: 0x00004750 43 02 03 00 DC::kMoveInteger/kMovePointer/kMove: R2, R3
            loc_235 - CODE: 0x00004758 2D 10 00 00 DC::kBranch: B loc_16
            loc_236 - CODE: 0x00004760 15 02 12 00 DC::kLookupInteger/kLookupFloat: R2 R18 -> hashid: 0xB144A57CFDBD80D9(end-foreach)
            loc_237 - CODE: 0x00004768 1C 02 02 00 DC::kCallFf: ( end-foreach )
            loc_238 - CODE: 0x00004770 43 00 02 00 DC::kMoveInteger/kMovePointer/kMove: R0, R2
            loc_239 - CODE: 0x00004778 00 00 00 00 DC::kScriptCodeReturn: 0xB144A57CFDBD80D9
        )
)

(defun '#C31C224D28FBEE8F
        (
            loc_0 - CODE: 0x00004870 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0xE04D6B2695705B11(speak-text-to-speech-formatted)
            loc_1 - CODE: 0x00004878 15 01 01 00 DC::kLookupInteger/kLookupFloat: R1 R1 -> hashid: 0x9481E6778A8D0E9A(%alloc-array)
            loc_2 - CODE: 0x00004880 4A 02 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R2, 7670DDEBC755A4C9(single-frame)
            loc_3 - CODE: 0x00004888 0C 03 01 00 DC::kLoadU16Immediate: R3, 1 | (0 << 0x8)
            loc_4 - CODE: 0x00004890 0C 04 02 00 DC::kLoadU16Immediate: R4, 2 | (0 << 0x8)
            loc_5 - CODE: 0x00004898 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_6 - CODE: 0x000048A0 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_7 - CODE: 0x000048A8 43 32 03 00 DC::kMoveInteger/kMovePointer/kMove: R50, R3
            loc_8 - CODE: 0x000048B0 43 33 04 00 DC::kMoveInteger/kMovePointer/kMove: R51, R4
            loc_9 - CODE: 0x000048B8 43 34 05 00 DC::kMoveInteger/kMovePointer/kMove: R52, R5
            loc_10 - CODE: 0x000048C0 1C 01 01 04 DC::kCallFf: ( %alloc-array 'single-frame '#0000000000000001 '#0000000000000002 '#0000000000000000 )
            loc_11 - CODE: 0x000048C8 43 02 01 00 DC::kMoveInteger/kMovePointer/kMove: R2, R1
            loc_12 - CODE: 0x000048D0 0F 02 02 00 DC::kLoadPointer/kLoadI64/kLoadU64: R2, R2
            loc_13 - CODE: 0x000048D8 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_14 - CODE: 0x000048E0 3D 03 03 08 DC::kImultiplyImm: R3, R3 * 8
            loc_15 - CODE: 0x000048E8 01 02 02 03 DC::kScriptCodeIAdd: R2, R2, R3
            loc_16 - CODE: 0x000048F0 15 03 03 00 DC::kLookupInteger/kLookupFloat: R3 R3 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_17 - CODE: 0x000048F8 0C 04 07 00 DC::kLoadU16Immediate: R4, 7 | (0 << 0x8)
            loc_18 - CODE: 0x00004900 4A 05 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, B149AB0C9E0A8388(#B149AB0C9E0A8388)
            loc_19 - CODE: 0x00004908 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_20 - CODE: 0x00004910 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_21 - CODE: 0x00004918 1C 03 03 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#B149AB0C9E0A8388 )
            loc_22 - CODE: 0x00004920 12 02 02 03 DC::kStorePointer: R3!, {R2, R2}
            loc_23 - CODE: 0x00004928 43 02 01 00 DC::kMoveInteger/kMovePointer/kMove: R2, R1
            loc_24 - CODE: 0x00004930 0F 02 02 00 DC::kLoadPointer/kLoadI64/kLoadU64: R2, R2
            loc_25 - CODE: 0x00004938 0C 03 01 00 DC::kLoadU16Immediate: R3, 1 | (0 << 0x8)
            loc_26 - CODE: 0x00004940 3D 03 03 08 DC::kImultiplyImm: R3, R3 * 8
            loc_27 - CODE: 0x00004948 01 02 02 03 DC::kScriptCodeIAdd: R2, R2, R3
            loc_28 - CODE: 0x00004950 15 03 03 00 DC::kLookupInteger/kLookupFloat: R3 R3 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_29 - CODE: 0x00004958 0C 04 02 00 DC::kLoadU16Immediate: R4, 2 | (0 << 0x8)
            loc_30 - CODE: 0x00004960 15 05 05 00 DC::kLookupInteger/kLookupFloat: R5 R5 -> hashid: 0x88547F48DA223122(get-int32)
            loc_31 - CODE: 0x00004968 4A 06 06 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R6, A9839F519D50031B(#A9839F519D50031B)
            loc_32 - CODE: 0x00004970 4A 07 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R7, 2D19E518D40792B7(self)
            loc_33 - CODE: 0x00004978 43 31 06 00 DC::kMoveInteger/kMovePointer/kMove: R49, R6
            loc_34 - CODE: 0x00004980 43 32 07 00 DC::kMoveInteger/kMovePointer/kMove: R50, R7
            loc_35 - CODE: 0x00004988 1C 05 05 02 DC::kCallFf: ( get-int32 '#A9839F519D50031B 'self )
            loc_36 - CODE: 0x00004990 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_37 - CODE: 0x00004998 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_38 - CODE: 0x000049A0 1C 03 03 02 DC::kCallFf: ( new-boxed-value '#0000000000000002 'get-int32 )
            loc_39 - CODE: 0x000049A8 12 02 02 03 DC::kStorePointer: R3!, {R2, R2}
            loc_40 - CODE: 0x000049B0 15 02 03 00 DC::kLookupInteger/kLookupFloat: R2 R3 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_41 - CODE: 0x000049B8 0C 03 15 00 DC::kLoadU16Immediate: R3, 21 | (0 << 0x8)
            loc_42 - CODE: 0x000049C0 43 04 01 00 DC::kMoveInteger/kMovePointer/kMove: R4, R1
            loc_43 - CODE: 0x000049C8 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_44 - CODE: 0x000049D0 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_45 - CODE: 0x000049D8 1C 02 02 02 DC::kCallFf: ( new-boxed-value '#0000000000000015 '%alloc-array )
            loc_46 - CODE: 0x000049E0 43 01 02 00 DC::kMoveInteger/kMovePointer/kMove: R1, R2
            loc_47 - CODE: 0x000049E8 0C 02 01 00 DC::kLoadU16Immediate: R2, 1 | (0 << 0x8)
            loc_48 - CODE: 0x000049F0 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_49 - CODE: 0x000049F8 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_50 - CODE: 0x00004A00 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_51 - CODE: 0x00004A08 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_52 - CODE: 0x00004A10 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_53 - CODE: 0x00004A18 43 34 04 00 DC::kMoveInteger/kMovePointer/kMove: R52, R4
            loc_54 - CODE: 0x00004A20 1B 00 00 04 DC::kCall: ( speak-text-to-speech-formatted 'new-boxed-value '#0000000000000001 '#0000000000000000 '#0000000000000001 )
            loc_55 - CODE: 0x00004A28 00 00 00 00 DC::kScriptCodeReturn: 0xE04D6B2695705B11
        )
)

(defun '#CF10438229B2EBB5
        (
            loc_0 - CODE: 0x00004AC8 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_1 - CODE: 0x00004AD0 4A 01 01 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, E6CB2E0411D2E20D(#E6CB2E0411D2E20D)
            loc_2 - CODE: 0x00004AD8 0C 02 03 00 DC::kLoadU16Immediate: R2, 3 | (0 << 0x8)
            loc_3 - CODE: 0x00004AE0 4A 03 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_4 - CODE: 0x00004AE8 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_5 - CODE: 0x00004AF0 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_6 - CODE: 0x00004AF8 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_7 - CODE: 0x00004B00 1C 00 00 03 DC::kCallFf: ( set-int32 '#E6CB2E0411D2E20D '#0000000000000003 'self )
            loc_8 - CODE: 0x00004B08 0C 00 00 00 DC::kLoadU16Immediate: R0, 0 | (0 << 0x8)
            loc_9 - CODE: 0x00004B10 43 01 00 00 DC::kMoveInteger/kMovePointer/kMove: R1, R0
            loc_10 - CODE: 0x00004B18 15 02 03 00 DC::kLookupInteger/kLookupFloat: R2 R3 -> hashid: 0x88547F48DA223122(get-int32)
            loc_11 - CODE: 0x00004B20 4A 03 01 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, E6CB2E0411D2E20D(#E6CB2E0411D2E20D)
            loc_12 - CODE: 0x00004B28 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 2D19E518D40792B7(self)
            loc_13 - CODE: 0x00004B30 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_14 - CODE: 0x00004B38 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_15 - CODE: 0x00004B40 1C 02 02 02 DC::kCallFf: ( get-int32 '#E6CB2E0411D2E20D 'self )
            loc_16 - CODE: 0x00004B48 20 01 01 02 DC::kIlt: R1 < R2
            loc_17 - CODE: 0x00004B50 2F 29 01 00 DC::kBranchIfNot: B loc_18
            loc_18 - CODE: 0x00004B58 15 01 04 00 DC::kLookupInteger/kLookupFloat: R1 R4 -> hashid: 0xD38017D9196659C4(group-shuffle)
            loc_19 - CODE: 0x00004B60 4A 02 05 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R2, 38F2619C35F58134(#38F2619C35F58134)
            loc_20 - CODE: 0x00004B68 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_21 - CODE: 0x00004B70 1B 01 01 01 DC::kCall: ( group-shuffle '#38F2619C35F58134 )
            loc_22 - CODE: 0x00004B78 15 01 06 00 DC::kLookupInteger/kLookupFloat: R1 R6 -> hashid: 0x26FF1ED42567F2B2(#26FF1ED42567F2B2)
            loc_23 - CODE: 0x00004B80 15 02 07 00 DC::kLookupInteger/kLookupFloat: R2 R7 -> hashid: 0xA863D3A641A90D67(group-get-first-member)
            loc_24 - CODE: 0x00004B88 4A 03 05 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 38F2619C35F58134(#38F2619C35F58134)
            loc_25 - CODE: 0x00004B90 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_26 - CODE: 0x00004B98 1B 02 02 01 DC::kCall: ( group-get-first-member '#38F2619C35F58134 )
            loc_27 - CODE: 0x00004BA0 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_28 - CODE: 0x00004BA8 1B 01 01 01 DC::kCall: ( #26FF1ED42567F2B2 'group-get-first-member )
            loc_29 - CODE: 0x00004BB0 15 01 08 00 DC::kLookupInteger/kLookupFloat: R1 R8 -> hashid: 0x7BDC7740B2C7C543(darray-remove)
            loc_30 - CODE: 0x00004BB8 4A 02 05 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R2, 38F2619C35F58134(#38F2619C35F58134)
            loc_31 - CODE: 0x00004BC0 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_32 - CODE: 0x00004BC8 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_33 - CODE: 0x00004BD0 43 32 03 00 DC::kMoveInteger/kMovePointer/kMove: R50, R3
            loc_34 - CODE: 0x00004BD8 1C 01 01 02 DC::kCallFf: ( darray-remove '#38F2619C35F58134 '#0000000000000000 )
            loc_35 - CODE: 0x00004BE0 43 01 00 00 DC::kMoveInteger/kMovePointer/kMove: R1, R0
            loc_36 - CODE: 0x00004BE8 0C 02 01 00 DC::kLoadU16Immediate: R2, 1 | (0 << 0x8)
            loc_37 - CODE: 0x00004BF0 01 01 01 02 DC::kScriptCodeIAdd: R1, R1, R2
            loc_38 - CODE: 0x00004BF8 43 00 01 00 DC::kMoveInteger/kMovePointer/kMove: R0, R1
            loc_39 - CODE: 0x00004C00 43 01 00 00 DC::kMoveInteger/kMovePointer/kMove: R1, R0
            loc_40 - CODE: 0x00004C08 2D 09 00 00 DC::kBranch: B loc_9
            loc_41 - CODE: 0x00004C10 43 00 01 00 DC::kMoveInteger/kMovePointer/kMove: R0, R1
            loc_42 - CODE: 0x00004C18 00 00 00 00 DC::kScriptCodeReturn: 0x0000000000000001
        )
)

(defun '#D9042AE4D31C97B8
        (
            loc_0 - CODE: 0x00004CC0 0C 00 00 00 DC::kLoadU16Immediate: R0, 0 | (0 << 0x8)
            loc_1 - CODE: 0x00004CC8 15 01 00 00 DC::kLookupInteger/kLookupFloat: R1 R0 -> hashid: 0x37B1139C687F2546(darray-count)
            loc_2 - CODE: 0x00004CD0 15 02 01 00 DC::kLookupInteger/kLookupFloat: R2 R1 -> hashid: 0x5690F8DE53AD4943(#5690F8DE53AD4943)
            loc_3 - CODE: 0x00004CD8 4A 03 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 0FCC25C0CB675047(#0FCC25C0CB675047)
            loc_4 - CODE: 0x00004CE0 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_5 - CODE: 0x00004CE8 1B 02 02 01 DC::kCall: ( #5690F8DE53AD4943 '#0FCC25C0CB675047 )
            loc_6 - CODE: 0x00004CF0 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_7 - CODE: 0x00004CF8 1C 01 01 01 DC::kCallFf: ( darray-count '#5690F8DE53AD4943 )
            loc_8 - CODE: 0x00004D00 15 02 03 00 DC::kLookupInteger/kLookupFloat: R2 R3 -> hashid: 0x2F82623ED7481B3D(begin-foreach)
            loc_9 - CODE: 0x00004D08 1C 02 02 00 DC::kCallFf: ( begin-foreach )
            loc_10 - CODE: 0x00004D10 43 02 00 00 DC::kMoveInteger/kMovePointer/kMove: R2, R0
            loc_11 - CODE: 0x00004D18 43 03 01 00 DC::kMoveInteger/kMovePointer/kMove: R3, R1
            loc_12 - CODE: 0x00004D20 20 02 02 03 DC::kIlt: R2 < R3
            loc_13 - CODE: 0x00004D28 2F 7C 02 00 DC::kBranchIfNot: B loc_124
            loc_14 - CODE: 0x00004D30 15 02 04 00 DC::kLookupInteger/kLookupFloat: R2 R4 -> hashid: 0xDB044C8529474AEA(darray-at)
            loc_15 - CODE: 0x00004D38 15 03 01 00 DC::kLookupInteger/kLookupFloat: R3 R1 -> hashid: 0x5690F8DE53AD4943(#5690F8DE53AD4943)
            loc_16 - CODE: 0x00004D40 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 0FCC25C0CB675047(#0FCC25C0CB675047)
            loc_17 - CODE: 0x00004D48 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_18 - CODE: 0x00004D50 1B 03 03 01 DC::kCall: ( #5690F8DE53AD4943 '#0FCC25C0CB675047 )
            loc_19 - CODE: 0x00004D58 43 04 00 00 DC::kMoveInteger/kMovePointer/kMove: R4, R0
            loc_20 - CODE: 0x00004D60 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_21 - CODE: 0x00004D68 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_22 - CODE: 0x00004D70 1C 02 02 02 DC::kCallFf: ( darray-at '#5690F8DE53AD4943 '#0000000000000000 )
            loc_23 - CODE: 0x00004D78 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_24 - CODE: 0x00004D80 2F 1F 03 00 DC::kBranchIfNot: B loc_31
            loc_25 - CODE: 0x00004D88 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_26 - CODE: 0x00004D90 5D 03 00 00 DC::kAssertPointer:
            loc_27 - CODE: 0x00004D98 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_28 - CODE: 0x00004DA0 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_29 - CODE: 0x00004DA8 0C 04 07 00 DC::kLoadU16Immediate: R4, 7 | (0 << 0x8)
            loc_30 - CODE: 0x00004DB0 1D 03 03 04 DC::kIeq: R3 == R4
            loc_31 - CODE: 0x00004DB8 2F 24 03 00 DC::kBranchIfNot: B loc_32
            loc_32 - CODE: 0x00004DC0 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_33 - CODE: 0x00004DC8 5D 03 00 00 DC::kAssertPointer:
            loc_34 - CODE: 0x00004DD0 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_35 - CODE: 0x00004DD8 2D 3F 00 00 DC::kBranch: B loc_63
            loc_36 - CODE: 0x00004DE0 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_37 - CODE: 0x00004DE8 2F 2C 03 00 DC::kBranchIfNot: B loc_44
            loc_38 - CODE: 0x00004DF0 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_39 - CODE: 0x00004DF8 5D 03 00 00 DC::kAssertPointer:
            loc_40 - CODE: 0x00004E00 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_41 - CODE: 0x00004E08 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_42 - CODE: 0x00004E10 0C 04 05 00 DC::kLoadU16Immediate: R4, 5 | (0 << 0x8)
            loc_43 - CODE: 0x00004E18 1D 03 03 04 DC::kIeq: R3 == R4
            loc_44 - CODE: 0x00004E20 2F 31 03 00 DC::kBranchIfNot: B loc_45
            loc_45 - CODE: 0x00004E28 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_46 - CODE: 0x00004E30 5D 03 00 00 DC::kAssertPointer:
            loc_47 - CODE: 0x00004E38 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_48 - CODE: 0x00004E40 2D 3F 00 00 DC::kBranch: B loc_63
            loc_49 - CODE: 0x00004E48 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_50 - CODE: 0x00004E50 2F 39 03 00 DC::kBranchIfNot: B loc_57
            loc_51 - CODE: 0x00004E58 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_52 - CODE: 0x00004E60 5D 03 00 00 DC::kAssertPointer:
            loc_53 - CODE: 0x00004E68 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_54 - CODE: 0x00004E70 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_55 - CODE: 0x00004E78 0C 04 04 00 DC::kLoadU16Immediate: R4, 4 | (0 << 0x8)
            loc_56 - CODE: 0x00004E80 1D 03 03 04 DC::kIeq: R3 == R4
            loc_57 - CODE: 0x00004E88 2F 3E 03 00 DC::kBranchIfNot: B loc_58
            loc_58 - CODE: 0x00004E90 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_59 - CODE: 0x00004E98 5D 03 00 00 DC::kAssertPointer:
            loc_60 - CODE: 0x00004EA0 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_61 - CODE: 0x00004EA8 2D 3F 00 00 DC::kBranch: B loc_63
            loc_62 - CODE: 0x00004EB0 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_63 - CODE: 0x00004EB8 43 02 03 00 DC::kMoveInteger/kMovePointer/kMove: R2, R3
            loc_64 - CODE: 0x00004EC0 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x00C080FBFC4C4D86(get-boolean)
            loc_65 - CODE: 0x00004EC8 4A 04 06 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, BB2330E582B47BBD(#BB2330E582B47BBD)
            loc_66 - CODE: 0x00004ED0 4A 05 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, 2D19E518D40792B7(self)
            loc_67 - CODE: 0x00004ED8 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_68 - CODE: 0x00004EE0 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_69 - CODE: 0x00004EE8 1C 03 03 02 DC::kCallFf: ( get-boolean '#BB2330E582B47BBD 'self )
            loc_70 - CODE: 0x00004EF0 30 03 03 00 DC::kNot: R3 R3
            loc_71 - CODE: 0x00004EF8 2F 53 03 00 DC::kBranchIfNot: B loc_72
            loc_72 - CODE: 0x00004F00 15 03 08 00 DC::kLookupInteger/kLookupFloat: R3 R8 -> hashid: 0x395C30ADA4413111(#395C30ADA4413111)
            loc_73 - CODE: 0x00004F08 4A 04 09 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 289E392F06ED8265(#289E392F06ED8265)
            loc_74 - CODE: 0x00004F10 0C 05 01 00 DC::kLoadU16Immediate: R5, 1 | (0 << 0x8)
            loc_75 - CODE: 0x00004F18 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_76 - CODE: 0x00004F20 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_77 - CODE: 0x00004F28 1B 03 03 02 DC::kCall: ( #395C30ADA4413111 '#289E392F06ED8265 '#0000000000000001 )
            loc_78 - CODE: 0x00004F30 15 03 0A 00 DC::kLookupInteger/kLookupFloat: R3 R10 -> hashid: 0x63EA3189A921370C(#63EA3189A921370C)
            loc_79 - CODE: 0x00004F38 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_80 - CODE: 0x00004F40 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_81 - CODE: 0x00004F48 1B 03 03 01 DC::kCall: ( #63EA3189A921370C '#0000000000000001 )
            loc_82 - CODE: 0x00004F50 2D 54 00 00 DC::kBranch: B loc_84
            loc_83 - CODE: 0x00004F58 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_84 - CODE: 0x00004F60 15 03 0B 00 DC::kLookupInteger/kLookupFloat: R3 R11 -> hashid: 0xB01A3D0B241EF695(npc-set-combat-params)
            loc_85 - CODE: 0x00004F68 15 04 0C 00 DC::kLookupInteger/kLookupFloat: R4 R12 -> hashid: 0xF03BEED169C9A5C6(get-symbol)
            loc_86 - CODE: 0x00004F70 4A 05 0D 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, 43FEF6458EB0E749(#43FEF6458EB0E749)
            loc_87 - CODE: 0x00004F78 4A 06 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R6, 2D19E518D40792B7(self)
            loc_88 - CODE: 0x00004F80 43 31 05 00 DC::kMoveInteger/kMovePointer/kMove: R49, R5
            loc_89 - CODE: 0x00004F88 43 32 06 00 DC::kMoveInteger/kMovePointer/kMove: R50, R6
            loc_90 - CODE: 0x00004F90 1C 04 04 02 DC::kCallFf: ( get-symbol '#43FEF6458EB0E749 'self )
            loc_91 - CODE: 0x00004F98 4A 05 0E 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, 5296AE9C8EB63B3D(*ski-escape-gallows-buddy-combat-params*)
            loc_92 - CODE: 0x00004FA0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_93 - CODE: 0x00004FA8 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_94 - CODE: 0x00004FB0 1C 03 03 02 DC::kCallFf: ( npc-set-combat-params 'get-symbol '*ski-escape-gallows-buddy-combat-params* )
            loc_95 - CODE: 0x00004FB8 15 03 0F 00 DC::kLookupInteger/kLookupFloat: R3 R15 -> hashid: 0xCA4C74CF0DC3D3D9(npc-bloater?)
            loc_96 - CODE: 0x00004FC0 43 04 02 00 DC::kMoveInteger/kMovePointer/kMove: R4, R2
            loc_97 - CODE: 0x00004FC8 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_98 - CODE: 0x00004FD0 1B 03 03 01 DC::kCall: ( npc-bloater? '#0000000000000000 )
            loc_99 - CODE: 0x00004FD8 30 03 03 00 DC::kNot: R3 R3
            loc_100 - CODE: 0x00004FE0 2F 6C 03 00 DC::kBranchIfNot: B loc_101
            loc_101 - CODE: 0x00004FE8 15 03 10 00 DC::kLookupInteger/kLookupFloat: R3 R16 -> hashid: 0x9F91780CB512C9A4(npc-set-targeting-params)
            loc_102 - CODE: 0x00004FF0 43 04 02 00 DC::kMoveInteger/kMovePointer/kMove: R4, R2
            loc_103 - CODE: 0x00004FF8 4A 05 11 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, 7DEA7D9656B0DE3F(always-target-buddies)
            loc_104 - CODE: 0x00005000 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_105 - CODE: 0x00005008 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_106 - CODE: 0x00005010 1C 03 03 02 DC::kCallFf: ( npc-set-targeting-params '#0000000000000000 'always-target-buddies )
            loc_107 - CODE: 0x00005018 2D 6D 00 00 DC::kBranch: B loc_109
            loc_108 - CODE: 0x00005020 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_109 - CODE: 0x00005028 15 03 12 00 DC::kLookupInteger/kLookupFloat: R3 R18 -> hashid: 0xFF17C0DCE7D03192(set-boolean)
            loc_110 - CODE: 0x00005030 4A 04 06 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, BB2330E582B47BBD(#BB2330E582B47BBD)
            loc_111 - CODE: 0x00005038 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_112 - CODE: 0x00005040 4A 06 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R6, 2D19E518D40792B7(self)
            loc_113 - CODE: 0x00005048 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_114 - CODE: 0x00005050 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_115 - CODE: 0x00005058 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_116 - CODE: 0x00005060 1C 03 03 03 DC::kCallFf: ( set-boolean '#BB2330E582B47BBD '#0000000000000000 'self )
            loc_117 - CODE: 0x00005068 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_118 - CODE: 0x00005070 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_119 - CODE: 0x00005078 01 03 03 04 DC::kScriptCodeIAdd: R3, R3, R4
            loc_120 - CODE: 0x00005080 43 00 03 00 DC::kMoveInteger/kMovePointer/kMove: R0, R3
            loc_121 - CODE: 0x00005088 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_122 - CODE: 0x00005090 43 02 03 00 DC::kMoveInteger/kMovePointer/kMove: R2, R3
            loc_123 - CODE: 0x00005098 2D 0A 00 00 DC::kBranch: B loc_10
            loc_124 - CODE: 0x000050A0 15 02 13 00 DC::kLookupInteger/kLookupFloat: R2 R19 -> hashid: 0xB144A57CFDBD80D9(end-foreach)
            loc_125 - CODE: 0x000050A8 1C 02 02 00 DC::kCallFf: ( end-foreach )
            loc_126 - CODE: 0x000050B0 43 00 02 00 DC::kMoveInteger/kMovePointer/kMove: R0, R2
            loc_127 - CODE: 0x000050B8 15 00 14 00 DC::kLookupInteger/kLookupFloat: R0 R20 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_128 - CODE: 0x000050C0 4A 01 15 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 666A36D5D105DD03(#666A36D5D105DD03)
            loc_129 - CODE: 0x000050C8 15 02 16 00 DC::kLookupInteger/kLookupFloat: R2 R22 -> hashid: 0x88547F48DA223122(get-int32)
            loc_130 - CODE: 0x000050D0 4A 03 17 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 4734285FD89016B2(#4734285FD89016B2)
            loc_131 - CODE: 0x000050D8 4A 04 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 2D19E518D40792B7(self)
            loc_132 - CODE: 0x000050E0 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_133 - CODE: 0x000050E8 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_134 - CODE: 0x000050F0 1C 02 02 02 DC::kCallFf: ( get-int32 '#4734285FD89016B2 'self )
            loc_135 - CODE: 0x000050F8 4A 03 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_136 - CODE: 0x00005100 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_137 - CODE: 0x00005108 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_138 - CODE: 0x00005110 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_139 - CODE: 0x00005118 1C 00 00 03 DC::kCallFf: ( set-int32 '#666A36D5D105DD03 'get-int32 'self )
            loc_140 - CODE: 0x00005120 15 00 12 00 DC::kLookupInteger/kLookupFloat: R0 R18 -> hashid: 0xFF17C0DCE7D03192(set-boolean)
            loc_141 - CODE: 0x00005128 4A 01 18 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, A5649F440B443FFF(#A5649F440B443FFF)
            loc_142 - CODE: 0x00005130 0C 02 01 00 DC::kLoadU16Immediate: R2, 1 | (0 << 0x8)
            loc_143 - CODE: 0x00005138 4A 03 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_144 - CODE: 0x00005140 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_145 - CODE: 0x00005148 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_146 - CODE: 0x00005150 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_147 - CODE: 0x00005158 1C 00 00 03 DC::kCallFf: ( set-boolean '#A5649F440B443FFF '#0000000000000001 'self )
            loc_148 - CODE: 0x00005160 00 00 00 00 DC::kScriptCodeReturn: 0xFF17C0DCE7D03192
        )
)

(defun '#E11699D35E7392C6
        (
            loc_0 - CODE: 0x00005288 0C 00 00 00 DC::kLoadU16Immediate: R0, 0 | (0 << 0x8)
            loc_1 - CODE: 0x00005290 15 01 00 00 DC::kLookupInteger/kLookupFloat: R1 R0 -> hashid: 0x37B1139C687F2546(darray-count)
            loc_2 - CODE: 0x00005298 15 02 01 00 DC::kLookupInteger/kLookupFloat: R2 R1 -> hashid: 0x5690F8DE53AD4943(#5690F8DE53AD4943)
            loc_3 - CODE: 0x000052A0 4A 03 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 0FCC25C0CB675047(#0FCC25C0CB675047)
            loc_4 - CODE: 0x000052A8 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_5 - CODE: 0x000052B0 1B 02 02 01 DC::kCall: ( #5690F8DE53AD4943 '#0FCC25C0CB675047 )
            loc_6 - CODE: 0x000052B8 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_7 - CODE: 0x000052C0 1C 01 01 01 DC::kCallFf: ( darray-count '#5690F8DE53AD4943 )
            loc_8 - CODE: 0x000052C8 15 02 03 00 DC::kLookupInteger/kLookupFloat: R2 R3 -> hashid: 0x2F82623ED7481B3D(begin-foreach)
            loc_9 - CODE: 0x000052D0 1C 02 02 00 DC::kCallFf: ( begin-foreach )
            loc_10 - CODE: 0x000052D8 43 02 00 00 DC::kMoveInteger/kMovePointer/kMove: R2, R0
            loc_11 - CODE: 0x000052E0 43 03 01 00 DC::kMoveInteger/kMovePointer/kMove: R3, R1
            loc_12 - CODE: 0x000052E8 20 02 02 03 DC::kIlt: R2 < R3
            loc_13 - CODE: 0x000052F0 2F 4D 02 00 DC::kBranchIfNot: B loc_77
            loc_14 - CODE: 0x000052F8 15 02 04 00 DC::kLookupInteger/kLookupFloat: R2 R4 -> hashid: 0xDB044C8529474AEA(darray-at)
            loc_15 - CODE: 0x00005300 15 03 01 00 DC::kLookupInteger/kLookupFloat: R3 R1 -> hashid: 0x5690F8DE53AD4943(#5690F8DE53AD4943)
            loc_16 - CODE: 0x00005308 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 0FCC25C0CB675047(#0FCC25C0CB675047)
            loc_17 - CODE: 0x00005310 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_18 - CODE: 0x00005318 1B 03 03 01 DC::kCall: ( #5690F8DE53AD4943 '#0FCC25C0CB675047 )
            loc_19 - CODE: 0x00005320 43 04 00 00 DC::kMoveInteger/kMovePointer/kMove: R4, R0
            loc_20 - CODE: 0x00005328 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_21 - CODE: 0x00005330 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_22 - CODE: 0x00005338 1C 02 02 02 DC::kCallFf: ( darray-at '#5690F8DE53AD4943 '#0000000000000000 )
            loc_23 - CODE: 0x00005340 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_24 - CODE: 0x00005348 2F 1F 03 00 DC::kBranchIfNot: B loc_31
            loc_25 - CODE: 0x00005350 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_26 - CODE: 0x00005358 5D 03 00 00 DC::kAssertPointer:
            loc_27 - CODE: 0x00005360 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_28 - CODE: 0x00005368 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_29 - CODE: 0x00005370 0C 04 07 00 DC::kLoadU16Immediate: R4, 7 | (0 << 0x8)
            loc_30 - CODE: 0x00005378 1D 03 03 04 DC::kIeq: R3 == R4
            loc_31 - CODE: 0x00005380 2F 24 03 00 DC::kBranchIfNot: B loc_32
            loc_32 - CODE: 0x00005388 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_33 - CODE: 0x00005390 5D 03 00 00 DC::kAssertPointer:
            loc_34 - CODE: 0x00005398 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_35 - CODE: 0x000053A0 2D 3F 00 00 DC::kBranch: B loc_63
            loc_36 - CODE: 0x000053A8 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_37 - CODE: 0x000053B0 2F 2C 03 00 DC::kBranchIfNot: B loc_44
            loc_38 - CODE: 0x000053B8 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_39 - CODE: 0x000053C0 5D 03 00 00 DC::kAssertPointer:
            loc_40 - CODE: 0x000053C8 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_41 - CODE: 0x000053D0 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_42 - CODE: 0x000053D8 0C 04 05 00 DC::kLoadU16Immediate: R4, 5 | (0 << 0x8)
            loc_43 - CODE: 0x000053E0 1D 03 03 04 DC::kIeq: R3 == R4
            loc_44 - CODE: 0x000053E8 2F 31 03 00 DC::kBranchIfNot: B loc_45
            loc_45 - CODE: 0x000053F0 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_46 - CODE: 0x000053F8 5D 03 00 00 DC::kAssertPointer:
            loc_47 - CODE: 0x00005400 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_48 - CODE: 0x00005408 2D 3F 00 00 DC::kBranch: B loc_63
            loc_49 - CODE: 0x00005410 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_50 - CODE: 0x00005418 2F 39 03 00 DC::kBranchIfNot: B loc_57
            loc_51 - CODE: 0x00005420 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_52 - CODE: 0x00005428 5D 03 00 00 DC::kAssertPointer:
            loc_53 - CODE: 0x00005430 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_54 - CODE: 0x00005438 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_55 - CODE: 0x00005440 0C 04 04 00 DC::kLoadU16Immediate: R4, 4 | (0 << 0x8)
            loc_56 - CODE: 0x00005448 1D 03 03 04 DC::kIeq: R3 == R4
            loc_57 - CODE: 0x00005450 2F 3E 03 00 DC::kBranchIfNot: B loc_58
            loc_58 - CODE: 0x00005458 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_59 - CODE: 0x00005460 5D 03 00 00 DC::kAssertPointer:
            loc_60 - CODE: 0x00005468 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_61 - CODE: 0x00005470 2D 3F 00 00 DC::kBranch: B loc_63
            loc_62 - CODE: 0x00005478 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_63 - CODE: 0x00005480 43 02 03 00 DC::kMoveInteger/kMovePointer/kMove: R2, R3
            loc_64 - CODE: 0x00005488 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x9F91780CB512C9A4(npc-set-targeting-params)
            loc_65 - CODE: 0x00005490 43 04 02 00 DC::kMoveInteger/kMovePointer/kMove: R4, R2
            loc_66 - CODE: 0x00005498 4A 05 06 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, 9479C6688EA518D0(never-target-player-or-buddy)
            loc_67 - CODE: 0x000054A0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_68 - CODE: 0x000054A8 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_69 - CODE: 0x000054B0 1C 03 03 02 DC::kCallFf: ( npc-set-targeting-params '#0000000000000000 'never-target-player-or-buddy )
            loc_70 - CODE: 0x000054B8 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_71 - CODE: 0x000054C0 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_72 - CODE: 0x000054C8 01 03 03 04 DC::kScriptCodeIAdd: R3, R3, R4
            loc_73 - CODE: 0x000054D0 43 00 03 00 DC::kMoveInteger/kMovePointer/kMove: R0, R3
            loc_74 - CODE: 0x000054D8 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_75 - CODE: 0x000054E0 43 02 03 00 DC::kMoveInteger/kMovePointer/kMove: R2, R3
            loc_76 - CODE: 0x000054E8 2D 0A 00 00 DC::kBranch: B loc_10
            loc_77 - CODE: 0x000054F0 15 02 07 00 DC::kLookupInteger/kLookupFloat: R2 R7 -> hashid: 0xB144A57CFDBD80D9(end-foreach)
            loc_78 - CODE: 0x000054F8 1C 02 02 00 DC::kCallFf: ( end-foreach )
            loc_79 - CODE: 0x00005500 43 00 02 00 DC::kMoveInteger/kMovePointer/kMove: R0, R2
            loc_80 - CODE: 0x00005508 00 00 00 00 DC::kScriptCodeReturn: 0xB144A57CFDBD80D9
        )
)

(defun '#E44F671B5B907BF0
        (
            loc_0 - CODE: 0x000055A8 0C 00 00 00 DC::kLoadU16Immediate: R0, 0 | (0 << 0x8)
            loc_1 - CODE: 0x000055B0 15 01 00 00 DC::kLookupInteger/kLookupFloat: R1 R0 -> hashid: 0x37B1139C687F2546(darray-count)
            loc_2 - CODE: 0x000055B8 15 02 01 00 DC::kLookupInteger/kLookupFloat: R2 R1 -> hashid: 0x5690F8DE53AD4943(#5690F8DE53AD4943)
            loc_3 - CODE: 0x000055C0 4A 03 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 0FCC25C0CB675047(#0FCC25C0CB675047)
            loc_4 - CODE: 0x000055C8 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_5 - CODE: 0x000055D0 1B 02 02 01 DC::kCall: ( #5690F8DE53AD4943 '#0FCC25C0CB675047 )
            loc_6 - CODE: 0x000055D8 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_7 - CODE: 0x000055E0 1C 01 01 01 DC::kCallFf: ( darray-count '#5690F8DE53AD4943 )
            loc_8 - CODE: 0x000055E8 15 02 03 00 DC::kLookupInteger/kLookupFloat: R2 R3 -> hashid: 0x2F82623ED7481B3D(begin-foreach)
            loc_9 - CODE: 0x000055F0 1C 02 02 00 DC::kCallFf: ( begin-foreach )
            loc_10 - CODE: 0x000055F8 43 02 00 00 DC::kMoveInteger/kMovePointer/kMove: R2, R0
            loc_11 - CODE: 0x00005600 43 03 01 00 DC::kMoveInteger/kMovePointer/kMove: R3, R1
            loc_12 - CODE: 0x00005608 20 02 02 03 DC::kIlt: R2 < R3
            loc_13 - CODE: 0x00005610 2F A1 02 00 DC::kBranchIfNot: B loc_161
            loc_14 - CODE: 0x00005618 15 02 04 00 DC::kLookupInteger/kLookupFloat: R2 R4 -> hashid: 0xDB044C8529474AEA(darray-at)
            loc_15 - CODE: 0x00005620 15 03 01 00 DC::kLookupInteger/kLookupFloat: R3 R1 -> hashid: 0x5690F8DE53AD4943(#5690F8DE53AD4943)
            loc_16 - CODE: 0x00005628 4A 04 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 0FCC25C0CB675047(#0FCC25C0CB675047)
            loc_17 - CODE: 0x00005630 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_18 - CODE: 0x00005638 1B 03 03 01 DC::kCall: ( #5690F8DE53AD4943 '#0FCC25C0CB675047 )
            loc_19 - CODE: 0x00005640 43 04 00 00 DC::kMoveInteger/kMovePointer/kMove: R4, R0
            loc_20 - CODE: 0x00005648 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_21 - CODE: 0x00005650 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_22 - CODE: 0x00005658 1C 02 02 02 DC::kCallFf: ( darray-at '#5690F8DE53AD4943 '#0000000000000000 )
            loc_23 - CODE: 0x00005660 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_24 - CODE: 0x00005668 2F 1F 03 00 DC::kBranchIfNot: B loc_31
            loc_25 - CODE: 0x00005670 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_26 - CODE: 0x00005678 5D 03 00 00 DC::kAssertPointer:
            loc_27 - CODE: 0x00005680 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_28 - CODE: 0x00005688 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_29 - CODE: 0x00005690 0C 04 07 00 DC::kLoadU16Immediate: R4, 7 | (0 << 0x8)
            loc_30 - CODE: 0x00005698 1D 03 03 04 DC::kIeq: R3 == R4
            loc_31 - CODE: 0x000056A0 2F 24 03 00 DC::kBranchIfNot: B loc_32
            loc_32 - CODE: 0x000056A8 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_33 - CODE: 0x000056B0 5D 03 00 00 DC::kAssertPointer:
            loc_34 - CODE: 0x000056B8 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_35 - CODE: 0x000056C0 2D 3F 00 00 DC::kBranch: B loc_63
            loc_36 - CODE: 0x000056C8 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_37 - CODE: 0x000056D0 2F 2C 03 00 DC::kBranchIfNot: B loc_44
            loc_38 - CODE: 0x000056D8 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_39 - CODE: 0x000056E0 5D 03 00 00 DC::kAssertPointer:
            loc_40 - CODE: 0x000056E8 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_41 - CODE: 0x000056F0 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_42 - CODE: 0x000056F8 0C 04 05 00 DC::kLoadU16Immediate: R4, 5 | (0 << 0x8)
            loc_43 - CODE: 0x00005700 1D 03 03 04 DC::kIeq: R3 == R4
            loc_44 - CODE: 0x00005708 2F 31 03 00 DC::kBranchIfNot: B loc_45
            loc_45 - CODE: 0x00005710 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_46 - CODE: 0x00005718 5D 03 00 00 DC::kAssertPointer:
            loc_47 - CODE: 0x00005720 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_48 - CODE: 0x00005728 2D 3F 00 00 DC::kBranch: B loc_63
            loc_49 - CODE: 0x00005730 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_50 - CODE: 0x00005738 2F 39 03 00 DC::kBranchIfNot: B loc_57
            loc_51 - CODE: 0x00005740 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_52 - CODE: 0x00005748 5D 03 00 00 DC::kAssertPointer:
            loc_53 - CODE: 0x00005750 3B 03 03 0C DC::kIaddImm: R3, R3, 12
            loc_54 - CODE: 0x00005758 4E 03 03 00 DC::kLoadU16: R3, 2F82623ED7481B3D
            loc_55 - CODE: 0x00005760 0C 04 04 00 DC::kLoadU16Immediate: R4, 4 | (0 << 0x8)
            loc_56 - CODE: 0x00005768 1D 03 03 04 DC::kIeq: R3 == R4
            loc_57 - CODE: 0x00005770 2F 3E 03 00 DC::kBranchIfNot: B loc_58
            loc_58 - CODE: 0x00005778 43 03 02 00 DC::kMoveInteger/kMovePointer/kMove: R3, R2
            loc_59 - CODE: 0x00005780 5D 03 00 00 DC::kAssertPointer:
            loc_60 - CODE: 0x00005788 51 03 03 00 DC::kLoadPointer/kLoadI64/kLoadU64: R3, R3
            loc_61 - CODE: 0x00005790 2D 3F 00 00 DC::kBranch: B loc_63
            loc_62 - CODE: 0x00005798 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_63 - CODE: 0x000057A0 43 02 03 00 DC::kMoveInteger/kMovePointer/kMove: R2, R3
            loc_64 - CODE: 0x000057A8 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x00C080FBFC4C4D86(get-boolean)
            loc_65 - CODE: 0x000057B0 4A 04 06 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, BB2330E582B47BBD(#BB2330E582B47BBD)
            loc_66 - CODE: 0x000057B8 4A 05 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, 2D19E518D40792B7(self)
            loc_67 - CODE: 0x000057C0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_68 - CODE: 0x000057C8 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_69 - CODE: 0x000057D0 1C 03 03 02 DC::kCallFf: ( get-boolean '#BB2330E582B47BBD 'self )
            loc_70 - CODE: 0x000057D8 2F 52 03 00 DC::kBranchIfNot: B loc_82
            loc_71 - CODE: 0x000057E0 15 03 08 00 DC::kLookupInteger/kLookupFloat: R3 R8 -> hashid: 0x395C30ADA4413111(#395C30ADA4413111)
            loc_72 - CODE: 0x000057E8 4A 04 09 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 289E392F06ED8265(#289E392F06ED8265)
            loc_73 - CODE: 0x000057F0 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_74 - CODE: 0x000057F8 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_75 - CODE: 0x00005800 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_76 - CODE: 0x00005808 1B 03 03 02 DC::kCall: ( #395C30ADA4413111 '#289E392F06ED8265 '#0000000000000000 )
            loc_77 - CODE: 0x00005810 15 03 0A 00 DC::kLookupInteger/kLookupFloat: R3 R10 -> hashid: 0x63EA3189A921370C(#63EA3189A921370C)
            loc_78 - CODE: 0x00005818 0C 04 00 00 DC::kLoadU16Immediate: R4, 0 | (0 << 0x8)
            loc_79 - CODE: 0x00005820 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_80 - CODE: 0x00005828 1B 03 03 01 DC::kCall: ( #63EA3189A921370C '#0000000000000000 )
            loc_81 - CODE: 0x00005830 2D 53 00 00 DC::kBranch: B loc_83
            loc_82 - CODE: 0x00005838 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_83 - CODE: 0x00005840 15 03 0B 00 DC::kLookupInteger/kLookupFloat: R3 R11 -> hashid: 0x8E18610CD9BFDE5E(npc-clear-request-movement)
            loc_84 - CODE: 0x00005848 43 04 02 00 DC::kMoveInteger/kMovePointer/kMove: R4, R2
            loc_85 - CODE: 0x00005850 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_86 - CODE: 0x00005858 1C 03 03 01 DC::kCallFf: ( npc-clear-request-movement '#0000000000000000 )
            loc_87 - CODE: 0x00005860 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x00C080FBFC4C4D86(get-boolean)
            loc_88 - CODE: 0x00005868 4A 04 06 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, BB2330E582B47BBD(#BB2330E582B47BBD)
            loc_89 - CODE: 0x00005870 4A 05 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, 2D19E518D40792B7(self)
            loc_90 - CODE: 0x00005878 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_91 - CODE: 0x00005880 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_92 - CODE: 0x00005888 1C 03 03 02 DC::kCallFf: ( get-boolean '#BB2330E582B47BBD 'self )
            loc_93 - CODE: 0x00005890 2F 65 03 00 DC::kBranchIfNot: B loc_101
            loc_94 - CODE: 0x00005898 15 03 08 00 DC::kLookupInteger/kLookupFloat: R3 R8 -> hashid: 0x395C30ADA4413111(#395C30ADA4413111)
            loc_95 - CODE: 0x000058A0 4A 04 09 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 289E392F06ED8265(#289E392F06ED8265)
            loc_96 - CODE: 0x000058A8 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_97 - CODE: 0x000058B0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_98 - CODE: 0x000058B8 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_99 - CODE: 0x000058C0 1B 03 03 02 DC::kCall: ( #395C30ADA4413111 '#289E392F06ED8265 '#0000000000000000 )
            loc_100 - CODE: 0x000058C8 2D 66 00 00 DC::kBranch: B loc_102
            loc_101 - CODE: 0x000058D0 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_102 - CODE: 0x000058D8 15 03 0C 00 DC::kLookupInteger/kLookupFloat: R3 R12 -> hashid: 0xB01A3D0B241EF695(npc-set-combat-params)
            loc_103 - CODE: 0x000058E0 15 04 0D 00 DC::kLookupInteger/kLookupFloat: R4 R13 -> hashid: 0xF03BEED169C9A5C6(get-symbol)
            loc_104 - CODE: 0x000058E8 4A 05 0E 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, 43FEF6458EB0E749(#43FEF6458EB0E749)
            loc_105 - CODE: 0x000058F0 4A 06 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R6, 2D19E518D40792B7(self)
            loc_106 - CODE: 0x000058F8 43 31 05 00 DC::kMoveInteger/kMovePointer/kMove: R49, R5
            loc_107 - CODE: 0x00005900 43 32 06 00 DC::kMoveInteger/kMovePointer/kMove: R50, R6
            loc_108 - CODE: 0x00005908 1C 04 04 02 DC::kCallFf: ( get-symbol '#43FEF6458EB0E749 'self )
            loc_109 - CODE: 0x00005910 4A 05 0F 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, 9AD08FF96ABF77AF(*buddy-combat-params*)
            loc_110 - CODE: 0x00005918 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_111 - CODE: 0x00005920 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_112 - CODE: 0x00005928 1C 03 03 02 DC::kCallFf: ( npc-set-combat-params 'get-symbol '*buddy-combat-params* )
            loc_113 - CODE: 0x00005930 15 03 10 00 DC::kLookupInteger/kLookupFloat: R3 R16 -> hashid: 0xCA4C74CF0DC3D3D9(npc-bloater?)
            loc_114 - CODE: 0x00005938 43 04 02 00 DC::kMoveInteger/kMovePointer/kMove: R4, R2
            loc_115 - CODE: 0x00005940 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_116 - CODE: 0x00005948 1B 03 03 01 DC::kCall: ( npc-bloater? '#0000000000000000 )
            loc_117 - CODE: 0x00005950 30 03 03 00 DC::kNot: R3 R3
            loc_118 - CODE: 0x00005958 2F 89 03 00 DC::kBranchIfNot: B loc_119
            loc_119 - CODE: 0x00005960 15 03 11 00 DC::kLookupInteger/kLookupFloat: R3 R17 -> hashid: 0xCB01AEDE5B51C621(npc-prefer-target)
            loc_120 - CODE: 0x00005968 43 04 02 00 DC::kMoveInteger/kMovePointer/kMove: R4, R2
            loc_121 - CODE: 0x00005970 15 05 0D 00 DC::kLookupInteger/kLookupFloat: R5 R13 -> hashid: 0xF03BEED169C9A5C6(get-symbol)
            loc_122 - CODE: 0x00005978 4A 06 0E 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R6, 43FEF6458EB0E749(#43FEF6458EB0E749)
            loc_123 - CODE: 0x00005980 4A 07 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R7, 2D19E518D40792B7(self)
            loc_124 - CODE: 0x00005988 43 31 06 00 DC::kMoveInteger/kMovePointer/kMove: R49, R6
            loc_125 - CODE: 0x00005990 43 32 07 00 DC::kMoveInteger/kMovePointer/kMove: R50, R7
            loc_126 - CODE: 0x00005998 1C 05 05 02 DC::kCallFf: ( get-symbol '#43FEF6458EB0E749 'self )
            loc_127 - CODE: 0x000059A0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_128 - CODE: 0x000059A8 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_129 - CODE: 0x000059B0 1C 03 03 02 DC::kCallFf: ( npc-prefer-target '#0000000000000000 'get-symbol )
            loc_130 - CODE: 0x000059B8 15 03 12 00 DC::kLookupInteger/kLookupFloat: R3 R18 -> hashid: 0x9F91780CB512C9A4(npc-set-targeting-params)
            loc_131 - CODE: 0x000059C0 43 04 02 00 DC::kMoveInteger/kMovePointer/kMove: R4, R2
            loc_132 - CODE: 0x000059C8 4A 05 13 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, BD1EE4DCADC93372(#BD1EE4DCADC93372)
            loc_133 - CODE: 0x000059D0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_134 - CODE: 0x000059D8 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_135 - CODE: 0x000059E0 1C 03 03 02 DC::kCallFf: ( npc-set-targeting-params '#0000000000000000 '#BD1EE4DCADC93372 )
            loc_136 - CODE: 0x000059E8 2D 8A 00 00 DC::kBranch: B loc_138
            loc_137 - CODE: 0x000059F0 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_138 - CODE: 0x000059F8 15 03 14 00 DC::kLookupInteger/kLookupFloat: R3 R20 -> hashid: 0xFF17C0DCE7D03192(set-boolean)
            loc_139 - CODE: 0x00005A00 4A 04 06 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, BB2330E582B47BBD(#BB2330E582B47BBD)
            loc_140 - CODE: 0x00005A08 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_141 - CODE: 0x00005A10 4A 06 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R6, 2D19E518D40792B7(self)
            loc_142 - CODE: 0x00005A18 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_143 - CODE: 0x00005A20 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_144 - CODE: 0x00005A28 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_145 - CODE: 0x00005A30 1C 03 03 03 DC::kCallFf: ( set-boolean '#BB2330E582B47BBD '#0000000000000000 'self )
            loc_146 - CODE: 0x00005A38 15 03 14 00 DC::kLookupInteger/kLookupFloat: R3 R20 -> hashid: 0xFF17C0DCE7D03192(set-boolean)
            loc_147 - CODE: 0x00005A40 4A 04 15 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 025D9B1E4CAE2884(#025D9B1E4CAE2884)
            loc_148 - CODE: 0x00005A48 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_149 - CODE: 0x00005A50 4A 06 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R6, 2D19E518D40792B7(self)
            loc_150 - CODE: 0x00005A58 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_151 - CODE: 0x00005A60 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_152 - CODE: 0x00005A68 43 33 06 00 DC::kMoveInteger/kMovePointer/kMove: R51, R6
            loc_153 - CODE: 0x00005A70 1C 03 03 03 DC::kCallFf: ( set-boolean '#025D9B1E4CAE2884 '#0000000000000000 'self )
            loc_154 - CODE: 0x00005A78 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_155 - CODE: 0x00005A80 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_156 - CODE: 0x00005A88 01 03 03 04 DC::kScriptCodeIAdd: R3, R3, R4
            loc_157 - CODE: 0x00005A90 43 00 03 00 DC::kMoveInteger/kMovePointer/kMove: R0, R3
            loc_158 - CODE: 0x00005A98 43 03 00 00 DC::kMoveInteger/kMovePointer/kMove: R3, R0
            loc_159 - CODE: 0x00005AA0 43 02 03 00 DC::kMoveInteger/kMovePointer/kMove: R2, R3
            loc_160 - CODE: 0x00005AA8 2D 0A 00 00 DC::kBranch: B loc_10
            loc_161 - CODE: 0x00005AB0 15 02 16 00 DC::kLookupInteger/kLookupFloat: R2 R22 -> hashid: 0xB144A57CFDBD80D9(end-foreach)
            loc_162 - CODE: 0x00005AB8 1C 02 02 00 DC::kCallFf: ( end-foreach )
            loc_163 - CODE: 0x00005AC0 43 00 02 00 DC::kMoveInteger/kMovePointer/kMove: R0, R2
            loc_164 - CODE: 0x00005AC8 15 00 17 00 DC::kLookupInteger/kLookupFloat: R0 R23 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_165 - CODE: 0x00005AD0 4A 01 18 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 666A36D5D105DD03(#666A36D5D105DD03)
            loc_166 - CODE: 0x00005AD8 15 02 19 00 DC::kLookupInteger/kLookupFloat: R2 R25 -> hashid: 0x88547F48DA223122(get-int32)
            loc_167 - CODE: 0x00005AE0 4A 03 1A 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 9659C5907BABFB47(#9659C5907BABFB47)
            loc_168 - CODE: 0x00005AE8 4A 04 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 2D19E518D40792B7(self)
            loc_169 - CODE: 0x00005AF0 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_170 - CODE: 0x00005AF8 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_171 - CODE: 0x00005B00 1C 02 02 02 DC::kCallFf: ( get-int32 '#9659C5907BABFB47 'self )
            loc_172 - CODE: 0x00005B08 4A 03 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_173 - CODE: 0x00005B10 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_174 - CODE: 0x00005B18 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_175 - CODE: 0x00005B20 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_176 - CODE: 0x00005B28 1C 00 00 03 DC::kCallFf: ( set-int32 '#666A36D5D105DD03 'get-int32 'self )
            loc_177 - CODE: 0x00005B30 15 00 14 00 DC::kLookupInteger/kLookupFloat: R0 R20 -> hashid: 0xFF17C0DCE7D03192(set-boolean)
            loc_178 - CODE: 0x00005B38 4A 01 1B 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, A5649F440B443FFF(#A5649F440B443FFF)
            loc_179 - CODE: 0x00005B40 0C 02 00 00 DC::kLoadU16Immediate: R2, 0 | (0 << 0x8)
            loc_180 - CODE: 0x00005B48 4A 03 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_181 - CODE: 0x00005B50 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_182 - CODE: 0x00005B58 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_183 - CODE: 0x00005B60 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_184 - CODE: 0x00005B68 1C 00 00 03 DC::kCallFf: ( set-boolean '#A5649F440B443FFF '#0000000000000000 'self )
            loc_185 - CODE: 0x00005B70 00 00 00 00 DC::kScriptCodeReturn: 0xFF17C0DCE7D03192
        )
)

(defun '#EFC1B797A499ABFE
        (
            loc_0 - CODE: 0x00005CB0 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0x8F0A73D29016DAA7(get-difficulty-setting-enemies)
            loc_1 - CODE: 0x00005CB8 1C 00 00 00 DC::kCallFf: ( get-difficulty-setting-enemies )
            loc_2 - CODE: 0x00005CC0 0C 01 00 00 DC::kLoadU16Immediate: R1, 0 | (0 << 0x8)
            loc_3 - CODE: 0x00005CC8 1D 00 00 01 DC::kIeq: R0 == R1
            loc_4 - CODE: 0x00005CD0 2F 33 00 00 DC::kBranchIfNot: B loc_5
            loc_5 - CODE: 0x00005CD8 15 00 01 00 DC::kLookupInteger/kLookupFloat: R0 R1 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_6 - CODE: 0x00005CE0 4A 01 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, C75D966632533F17(#C75D966632533F17)
            loc_7 - CODE: 0x00005CE8 15 02 03 00 DC::kLookupInteger/kLookupFloat: R2 R3 -> hashid: 0x88547F48DA223122(get-int32)
            loc_8 - CODE: 0x00005CF0 4A 03 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, C75D966632533F17(#C75D966632533F17)
            loc_9 - CODE: 0x00005CF8 4A 04 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 2D19E518D40792B7(self)
            loc_10 - CODE: 0x00005D00 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_11 - CODE: 0x00005D08 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_12 - CODE: 0x00005D10 1C 02 02 02 DC::kCallFf: ( get-int32 '#C75D966632533F17 'self )
            loc_13 - CODE: 0x00005D18 0C 03 03 00 DC::kLoadU16Immediate: R3, 3 | (0 << 0x8)
            loc_14 - CODE: 0x00005D20 02 02 02 03 DC::kScriptCodeISubtract: R2, R2, R3
            loc_15 - CODE: 0x00005D28 4A 03 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_16 - CODE: 0x00005D30 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_17 - CODE: 0x00005D38 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_18 - CODE: 0x00005D40 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_19 - CODE: 0x00005D48 1C 00 00 03 DC::kCallFf: ( set-int32 '#C75D966632533F17 '#88547F48DA22311F 'self )
            loc_20 - CODE: 0x00005D50 15 00 01 00 DC::kLookupInteger/kLookupFloat: R0 R1 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_21 - CODE: 0x00005D58 4A 01 05 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 9659C5907BABFB47(#9659C5907BABFB47)
            loc_22 - CODE: 0x00005D60 15 02 03 00 DC::kLookupInteger/kLookupFloat: R2 R3 -> hashid: 0x88547F48DA223122(get-int32)
            loc_23 - CODE: 0x00005D68 4A 03 05 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 9659C5907BABFB47(#9659C5907BABFB47)
            loc_24 - CODE: 0x00005D70 4A 04 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 2D19E518D40792B7(self)
            loc_25 - CODE: 0x00005D78 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_26 - CODE: 0x00005D80 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_27 - CODE: 0x00005D88 1C 02 02 02 DC::kCallFf: ( get-int32 '#9659C5907BABFB47 'self )
            loc_28 - CODE: 0x00005D90 0C 03 01 00 DC::kLoadU16Immediate: R3, 1 | (0 << 0x8)
            loc_29 - CODE: 0x00005D98 02 02 02 03 DC::kScriptCodeISubtract: R2, R2, R3
            loc_30 - CODE: 0x00005DA0 4A 03 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_31 - CODE: 0x00005DA8 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_32 - CODE: 0x00005DB0 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_33 - CODE: 0x00005DB8 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_34 - CODE: 0x00005DC0 1C 00 00 03 DC::kCallFf: ( set-int32 '#9659C5907BABFB47 '#88547F48DA223121 'self )
            loc_35 - CODE: 0x00005DC8 15 00 01 00 DC::kLookupInteger/kLookupFloat: R0 R1 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_36 - CODE: 0x00005DD0 4A 01 06 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 4734285FD89016B2(#4734285FD89016B2)
            loc_37 - CODE: 0x00005DD8 15 02 03 00 DC::kLookupInteger/kLookupFloat: R2 R3 -> hashid: 0x88547F48DA223122(get-int32)
            loc_38 - CODE: 0x00005DE0 4A 03 06 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 4734285FD89016B2(#4734285FD89016B2)
            loc_39 - CODE: 0x00005DE8 4A 04 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 2D19E518D40792B7(self)
            loc_40 - CODE: 0x00005DF0 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_41 - CODE: 0x00005DF8 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_42 - CODE: 0x00005E00 1C 02 02 02 DC::kCallFf: ( get-int32 '#4734285FD89016B2 'self )
            loc_43 - CODE: 0x00005E08 0C 03 02 00 DC::kLoadU16Immediate: R3, 2 | (0 << 0x8)
            loc_44 - CODE: 0x00005E10 02 02 02 03 DC::kScriptCodeISubtract: R2, R2, R3
            loc_45 - CODE: 0x00005E18 4A 03 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_46 - CODE: 0x00005E20 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_47 - CODE: 0x00005E28 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_48 - CODE: 0x00005E30 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_49 - CODE: 0x00005E38 1C 00 00 03 DC::kCallFf: ( set-int32 '#4734285FD89016B2 '#88547F48DA223120 'self )
            loc_50 - CODE: 0x00005E40 2D 67 00 00 DC::kBranch: B loc_103
            loc_51 - CODE: 0x00005E48 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0x8F0A73D29016DAA7(get-difficulty-setting-enemies)
            loc_52 - CODE: 0x00005E50 1C 00 00 00 DC::kCallFf: ( get-difficulty-setting-enemies )
            loc_53 - CODE: 0x00005E58 0C 01 01 00 DC::kLoadU16Immediate: R1, 1 | (0 << 0x8)
            loc_54 - CODE: 0x00005E60 1D 00 00 01 DC::kIeq: R0 == R1
            loc_55 - CODE: 0x00005E68 2F 66 00 00 DC::kBranchIfNot: B loc_56
            loc_56 - CODE: 0x00005E70 15 00 01 00 DC::kLookupInteger/kLookupFloat: R0 R1 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_57 - CODE: 0x00005E78 4A 01 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, C75D966632533F17(#C75D966632533F17)
            loc_58 - CODE: 0x00005E80 15 02 03 00 DC::kLookupInteger/kLookupFloat: R2 R3 -> hashid: 0x88547F48DA223122(get-int32)
            loc_59 - CODE: 0x00005E88 4A 03 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, C75D966632533F17(#C75D966632533F17)
            loc_60 - CODE: 0x00005E90 4A 04 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 2D19E518D40792B7(self)
            loc_61 - CODE: 0x00005E98 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_62 - CODE: 0x00005EA0 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_63 - CODE: 0x00005EA8 1C 02 02 02 DC::kCallFf: ( get-int32 '#C75D966632533F17 'self )
            loc_64 - CODE: 0x00005EB0 0C 03 02 00 DC::kLoadU16Immediate: R3, 2 | (0 << 0x8)
            loc_65 - CODE: 0x00005EB8 02 02 02 03 DC::kScriptCodeISubtract: R2, R2, R3
            loc_66 - CODE: 0x00005EC0 4A 03 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_67 - CODE: 0x00005EC8 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_68 - CODE: 0x00005ED0 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_69 - CODE: 0x00005ED8 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_70 - CODE: 0x00005EE0 1C 00 00 03 DC::kCallFf: ( set-int32 '#C75D966632533F17 '#88547F48DA223120 'self )
            loc_71 - CODE: 0x00005EE8 15 00 01 00 DC::kLookupInteger/kLookupFloat: R0 R1 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_72 - CODE: 0x00005EF0 4A 01 05 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 9659C5907BABFB47(#9659C5907BABFB47)
            loc_73 - CODE: 0x00005EF8 15 02 03 00 DC::kLookupInteger/kLookupFloat: R2 R3 -> hashid: 0x88547F48DA223122(get-int32)
            loc_74 - CODE: 0x00005F00 4A 03 05 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 9659C5907BABFB47(#9659C5907BABFB47)
            loc_75 - CODE: 0x00005F08 4A 04 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 2D19E518D40792B7(self)
            loc_76 - CODE: 0x00005F10 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_77 - CODE: 0x00005F18 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_78 - CODE: 0x00005F20 1C 02 02 02 DC::kCallFf: ( get-int32 '#9659C5907BABFB47 'self )
            loc_79 - CODE: 0x00005F28 0C 03 01 00 DC::kLoadU16Immediate: R3, 1 | (0 << 0x8)
            loc_80 - CODE: 0x00005F30 02 02 02 03 DC::kScriptCodeISubtract: R2, R2, R3
            loc_81 - CODE: 0x00005F38 4A 03 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_82 - CODE: 0x00005F40 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_83 - CODE: 0x00005F48 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_84 - CODE: 0x00005F50 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_85 - CODE: 0x00005F58 1C 00 00 03 DC::kCallFf: ( set-int32 '#9659C5907BABFB47 '#88547F48DA223121 'self )
            loc_86 - CODE: 0x00005F60 15 00 01 00 DC::kLookupInteger/kLookupFloat: R0 R1 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_87 - CODE: 0x00005F68 4A 01 06 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 4734285FD89016B2(#4734285FD89016B2)
            loc_88 - CODE: 0x00005F70 15 02 03 00 DC::kLookupInteger/kLookupFloat: R2 R3 -> hashid: 0x88547F48DA223122(get-int32)
            loc_89 - CODE: 0x00005F78 4A 03 06 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 4734285FD89016B2(#4734285FD89016B2)
            loc_90 - CODE: 0x00005F80 4A 04 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R4, 2D19E518D40792B7(self)
            loc_91 - CODE: 0x00005F88 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_92 - CODE: 0x00005F90 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_93 - CODE: 0x00005F98 1C 02 02 02 DC::kCallFf: ( get-int32 '#4734285FD89016B2 'self )
            loc_94 - CODE: 0x00005FA0 0C 03 02 00 DC::kLoadU16Immediate: R3, 2 | (0 << 0x8)
            loc_95 - CODE: 0x00005FA8 02 02 02 03 DC::kScriptCodeISubtract: R2, R2, R3
            loc_96 - CODE: 0x00005FB0 4A 03 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_97 - CODE: 0x00005FB8 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_98 - CODE: 0x00005FC0 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_99 - CODE: 0x00005FC8 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_100 - CODE: 0x00005FD0 1C 00 00 03 DC::kCallFf: ( set-int32 '#4734285FD89016B2 '#88547F48DA223120 'self )
            loc_101 - CODE: 0x00005FD8 2D 67 00 00 DC::kBranch: B loc_103
            loc_102 - CODE: 0x00005FE0 0C 00 00 00 DC::kLoadU16Immediate: R0, 0 | (0 << 0x8)
            loc_103 - CODE: 0x00005FE8 00 00 00 00 DC::kScriptCodeReturn: 0x0000000000000000
        )
)

(defun '#F1F656F13B228C58
        (
            loc_0 - CODE: 0x00006080 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0x1A51DEBC246B434E(get-svar-as-boolean)
            loc_1 - CODE: 0x00006088 4A 01 01 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, BAEEE24392C1FC1C(buddy-dina)
            loc_2 - CODE: 0x00006090 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_3 - CODE: 0x00006098 1B 00 00 01 DC::kCall: ( get-svar-as-boolean 'buddy-dina )
            loc_4 - CODE: 0x000060A0 2F 2C 00 00 DC::kBranchIfNot: B loc_44
            loc_5 - CODE: 0x000060A8 15 00 02 00 DC::kLookupInteger/kLookupFloat: R0 R2 -> hashid: 0xE04D6B2695705B11(speak-text-to-speech-formatted)
            loc_6 - CODE: 0x000060B0 15 01 03 00 DC::kLookupInteger/kLookupFloat: R1 R3 -> hashid: 0x9481E6778A8D0E9A(%alloc-array)
            loc_7 - CODE: 0x000060B8 4A 02 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R2, 7670DDEBC755A4C9(single-frame)
            loc_8 - CODE: 0x000060C0 0C 03 01 00 DC::kLoadU16Immediate: R3, 1 | (0 << 0x8)
            loc_9 - CODE: 0x000060C8 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_10 - CODE: 0x000060D0 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_11 - CODE: 0x000060D8 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_12 - CODE: 0x000060E0 43 32 03 00 DC::kMoveInteger/kMovePointer/kMove: R50, R3
            loc_13 - CODE: 0x000060E8 43 33 04 00 DC::kMoveInteger/kMovePointer/kMove: R51, R4
            loc_14 - CODE: 0x000060F0 43 34 05 00 DC::kMoveInteger/kMovePointer/kMove: R52, R5
            loc_15 - CODE: 0x000060F8 1C 01 01 04 DC::kCallFf: ( %alloc-array 'single-frame '#0000000000000001 '#0000000000000001 '#0000000000000000 )
            loc_16 - CODE: 0x00006100 43 02 01 00 DC::kMoveInteger/kMovePointer/kMove: R2, R1
            loc_17 - CODE: 0x00006108 0F 02 02 00 DC::kLoadPointer/kLoadI64/kLoadU64: R2, R2
            loc_18 - CODE: 0x00006110 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_19 - CODE: 0x00006118 3D 03 03 08 DC::kImultiplyImm: R3, R3 * 8
            loc_20 - CODE: 0x00006120 01 02 02 03 DC::kScriptCodeIAdd: R2, R2, R3
            loc_21 - CODE: 0x00006128 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_22 - CODE: 0x00006130 0C 04 07 00 DC::kLoadU16Immediate: R4, 7 | (0 << 0x8)
            loc_23 - CODE: 0x00006138 4A 05 06 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, 36C59AEA9B8D510D(#36C59AEA9B8D510D)
            loc_24 - CODE: 0x00006140 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_25 - CODE: 0x00006148 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_26 - CODE: 0x00006150 1C 03 03 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#36C59AEA9B8D510D )
            loc_27 - CODE: 0x00006158 12 02 02 03 DC::kStorePointer: R3!, {R2, R2}
            loc_28 - CODE: 0x00006160 15 02 05 00 DC::kLookupInteger/kLookupFloat: R2 R5 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_29 - CODE: 0x00006168 0C 03 15 00 DC::kLoadU16Immediate: R3, 21 | (0 << 0x8)
            loc_30 - CODE: 0x00006170 43 04 01 00 DC::kMoveInteger/kMovePointer/kMove: R4, R1
            loc_31 - CODE: 0x00006178 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_32 - CODE: 0x00006180 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_33 - CODE: 0x00006188 1C 02 02 02 DC::kCallFf: ( new-boxed-value '#0000000000000015 '%alloc-array )
            loc_34 - CODE: 0x00006190 43 01 02 00 DC::kMoveInteger/kMovePointer/kMove: R1, R2
            loc_35 - CODE: 0x00006198 0C 02 01 00 DC::kLoadU16Immediate: R2, 1 | (0 << 0x8)
            loc_36 - CODE: 0x000061A0 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_37 - CODE: 0x000061A8 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_38 - CODE: 0x000061B0 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_39 - CODE: 0x000061B8 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_40 - CODE: 0x000061C0 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_41 - CODE: 0x000061C8 43 34 04 00 DC::kMoveInteger/kMovePointer/kMove: R52, R4
            loc_42 - CODE: 0x000061D0 1B 00 00 04 DC::kCall: ( speak-text-to-speech-formatted 'new-boxed-value '#0000000000000001 '#0000000000000000 '#0000000000000001 )
            loc_43 - CODE: 0x000061D8 2D 61 00 01 DC::kBranch: B loc_353
            loc_44 - CODE: 0x000061E0 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0x1A51DEBC246B434E(get-svar-as-boolean)
            loc_45 - CODE: 0x000061E8 4A 01 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, FA62D725AECED084(buddy-mel)
            loc_46 - CODE: 0x000061F0 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_47 - CODE: 0x000061F8 1B 00 00 01 DC::kCall: ( get-svar-as-boolean 'buddy-mel )
            loc_48 - CODE: 0x00006200 2F 58 00 00 DC::kBranchIfNot: B loc_88
            loc_49 - CODE: 0x00006208 15 00 02 00 DC::kLookupInteger/kLookupFloat: R0 R2 -> hashid: 0xE04D6B2695705B11(speak-text-to-speech-formatted)
            loc_50 - CODE: 0x00006210 15 01 03 00 DC::kLookupInteger/kLookupFloat: R1 R3 -> hashid: 0x9481E6778A8D0E9A(%alloc-array)
            loc_51 - CODE: 0x00006218 4A 02 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R2, 7670DDEBC755A4C9(single-frame)
            loc_52 - CODE: 0x00006220 0C 03 01 00 DC::kLoadU16Immediate: R3, 1 | (0 << 0x8)
            loc_53 - CODE: 0x00006228 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_54 - CODE: 0x00006230 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_55 - CODE: 0x00006238 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_56 - CODE: 0x00006240 43 32 03 00 DC::kMoveInteger/kMovePointer/kMove: R50, R3
            loc_57 - CODE: 0x00006248 43 33 04 00 DC::kMoveInteger/kMovePointer/kMove: R51, R4
            loc_58 - CODE: 0x00006250 43 34 05 00 DC::kMoveInteger/kMovePointer/kMove: R52, R5
            loc_59 - CODE: 0x00006258 1C 01 01 04 DC::kCallFf: ( %alloc-array 'single-frame '#0000000000000001 '#0000000000000001 '#0000000000000000 )
            loc_60 - CODE: 0x00006260 43 02 01 00 DC::kMoveInteger/kMovePointer/kMove: R2, R1
            loc_61 - CODE: 0x00006268 0F 02 02 00 DC::kLoadPointer/kLoadI64/kLoadU64: R2, R2
            loc_62 - CODE: 0x00006270 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_63 - CODE: 0x00006278 3D 03 03 08 DC::kImultiplyImm: R3, R3 * 8
            loc_64 - CODE: 0x00006280 01 02 02 03 DC::kScriptCodeIAdd: R2, R2, R3
            loc_65 - CODE: 0x00006288 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_66 - CODE: 0x00006290 0C 04 07 00 DC::kLoadU16Immediate: R4, 7 | (0 << 0x8)
            loc_67 - CODE: 0x00006298 4A 05 08 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, C87729E0E4E29443(#C87729E0E4E29443)
            loc_68 - CODE: 0x000062A0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_69 - CODE: 0x000062A8 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_70 - CODE: 0x000062B0 1C 03 03 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#C87729E0E4E29443 )
            loc_71 - CODE: 0x000062B8 12 02 02 03 DC::kStorePointer: R3!, {R2, R2}
            loc_72 - CODE: 0x000062C0 15 02 05 00 DC::kLookupInteger/kLookupFloat: R2 R5 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_73 - CODE: 0x000062C8 0C 03 15 00 DC::kLoadU16Immediate: R3, 21 | (0 << 0x8)
            loc_74 - CODE: 0x000062D0 43 04 01 00 DC::kMoveInteger/kMovePointer/kMove: R4, R1
            loc_75 - CODE: 0x000062D8 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_76 - CODE: 0x000062E0 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_77 - CODE: 0x000062E8 1C 02 02 02 DC::kCallFf: ( new-boxed-value '#0000000000000015 '%alloc-array )
            loc_78 - CODE: 0x000062F0 43 01 02 00 DC::kMoveInteger/kMovePointer/kMove: R1, R2
            loc_79 - CODE: 0x000062F8 0C 02 01 00 DC::kLoadU16Immediate: R2, 1 | (0 << 0x8)
            loc_80 - CODE: 0x00006300 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_81 - CODE: 0x00006308 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_82 - CODE: 0x00006310 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_83 - CODE: 0x00006318 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_84 - CODE: 0x00006320 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_85 - CODE: 0x00006328 43 34 04 00 DC::kMoveInteger/kMovePointer/kMove: R52, R4
            loc_86 - CODE: 0x00006330 1B 00 00 04 DC::kCall: ( speak-text-to-speech-formatted 'new-boxed-value '#0000000000000001 '#0000000000000000 '#0000000000000001 )
            loc_87 - CODE: 0x00006338 2D 61 00 01 DC::kBranch: B loc_353
            loc_88 - CODE: 0x00006340 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0x1A51DEBC246B434E(get-svar-as-boolean)
            loc_89 - CODE: 0x00006348 4A 01 09 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 66CECF7790F19918(buddy-tommy)
            loc_90 - CODE: 0x00006350 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_91 - CODE: 0x00006358 1B 00 00 01 DC::kCall: ( get-svar-as-boolean 'buddy-tommy )
            loc_92 - CODE: 0x00006360 2F 84 00 00 DC::kBranchIfNot: B loc_132
            loc_93 - CODE: 0x00006368 15 00 02 00 DC::kLookupInteger/kLookupFloat: R0 R2 -> hashid: 0xE04D6B2695705B11(speak-text-to-speech-formatted)
            loc_94 - CODE: 0x00006370 15 01 03 00 DC::kLookupInteger/kLookupFloat: R1 R3 -> hashid: 0x9481E6778A8D0E9A(%alloc-array)
            loc_95 - CODE: 0x00006378 4A 02 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R2, 7670DDEBC755A4C9(single-frame)
            loc_96 - CODE: 0x00006380 0C 03 01 00 DC::kLoadU16Immediate: R3, 1 | (0 << 0x8)
            loc_97 - CODE: 0x00006388 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_98 - CODE: 0x00006390 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_99 - CODE: 0x00006398 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_100 - CODE: 0x000063A0 43 32 03 00 DC::kMoveInteger/kMovePointer/kMove: R50, R3
            loc_101 - CODE: 0x000063A8 43 33 04 00 DC::kMoveInteger/kMovePointer/kMove: R51, R4
            loc_102 - CODE: 0x000063B0 43 34 05 00 DC::kMoveInteger/kMovePointer/kMove: R52, R5
            loc_103 - CODE: 0x000063B8 1C 01 01 04 DC::kCallFf: ( %alloc-array 'single-frame '#0000000000000001 '#0000000000000001 '#0000000000000000 )
            loc_104 - CODE: 0x000063C0 43 02 01 00 DC::kMoveInteger/kMovePointer/kMove: R2, R1
            loc_105 - CODE: 0x000063C8 0F 02 02 00 DC::kLoadPointer/kLoadI64/kLoadU64: R2, R2
            loc_106 - CODE: 0x000063D0 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_107 - CODE: 0x000063D8 3D 03 03 08 DC::kImultiplyImm: R3, R3 * 8
            loc_108 - CODE: 0x000063E0 01 02 02 03 DC::kScriptCodeIAdd: R2, R2, R3
            loc_109 - CODE: 0x000063E8 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_110 - CODE: 0x000063F0 0C 04 07 00 DC::kLoadU16Immediate: R4, 7 | (0 << 0x8)
            loc_111 - CODE: 0x000063F8 4A 05 0A 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, 9410426841105E7F(#9410426841105E7F)
            loc_112 - CODE: 0x00006400 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_113 - CODE: 0x00006408 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_114 - CODE: 0x00006410 1C 03 03 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#9410426841105E7F )
            loc_115 - CODE: 0x00006418 12 02 02 03 DC::kStorePointer: R3!, {R2, R2}
            loc_116 - CODE: 0x00006420 15 02 05 00 DC::kLookupInteger/kLookupFloat: R2 R5 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_117 - CODE: 0x00006428 0C 03 15 00 DC::kLoadU16Immediate: R3, 21 | (0 << 0x8)
            loc_118 - CODE: 0x00006430 43 04 01 00 DC::kMoveInteger/kMovePointer/kMove: R4, R1
            loc_119 - CODE: 0x00006438 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_120 - CODE: 0x00006440 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_121 - CODE: 0x00006448 1C 02 02 02 DC::kCallFf: ( new-boxed-value '#0000000000000015 '%alloc-array )
            loc_122 - CODE: 0x00006450 43 01 02 00 DC::kMoveInteger/kMovePointer/kMove: R1, R2
            loc_123 - CODE: 0x00006458 0C 02 01 00 DC::kLoadU16Immediate: R2, 1 | (0 << 0x8)
            loc_124 - CODE: 0x00006460 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_125 - CODE: 0x00006468 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_126 - CODE: 0x00006470 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_127 - CODE: 0x00006478 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_128 - CODE: 0x00006480 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_129 - CODE: 0x00006488 43 34 04 00 DC::kMoveInteger/kMovePointer/kMove: R52, R4
            loc_130 - CODE: 0x00006490 1B 00 00 04 DC::kCall: ( speak-text-to-speech-formatted 'new-boxed-value '#0000000000000001 '#0000000000000000 '#0000000000000001 )
            loc_131 - CODE: 0x00006498 2D 61 00 01 DC::kBranch: B loc_353
            loc_132 - CODE: 0x000064A0 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0x1A51DEBC246B434E(get-svar-as-boolean)
            loc_133 - CODE: 0x000064A8 4A 01 0B 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 0EA39A6D5F1ABA2D(buddy-yara)
            loc_134 - CODE: 0x000064B0 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_135 - CODE: 0x000064B8 1B 00 00 01 DC::kCall: ( get-svar-as-boolean 'buddy-yara )
            loc_136 - CODE: 0x000064C0 2F B0 00 00 DC::kBranchIfNot: B loc_176
            loc_137 - CODE: 0x000064C8 15 00 02 00 DC::kLookupInteger/kLookupFloat: R0 R2 -> hashid: 0xE04D6B2695705B11(speak-text-to-speech-formatted)
            loc_138 - CODE: 0x000064D0 15 01 03 00 DC::kLookupInteger/kLookupFloat: R1 R3 -> hashid: 0x9481E6778A8D0E9A(%alloc-array)
            loc_139 - CODE: 0x000064D8 4A 02 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R2, 7670DDEBC755A4C9(single-frame)
            loc_140 - CODE: 0x000064E0 0C 03 01 00 DC::kLoadU16Immediate: R3, 1 | (0 << 0x8)
            loc_141 - CODE: 0x000064E8 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_142 - CODE: 0x000064F0 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_143 - CODE: 0x000064F8 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_144 - CODE: 0x00006500 43 32 03 00 DC::kMoveInteger/kMovePointer/kMove: R50, R3
            loc_145 - CODE: 0x00006508 43 33 04 00 DC::kMoveInteger/kMovePointer/kMove: R51, R4
            loc_146 - CODE: 0x00006510 43 34 05 00 DC::kMoveInteger/kMovePointer/kMove: R52, R5
            loc_147 - CODE: 0x00006518 1C 01 01 04 DC::kCallFf: ( %alloc-array 'single-frame '#0000000000000001 '#0000000000000001 '#0000000000000000 )
            loc_148 - CODE: 0x00006520 43 02 01 00 DC::kMoveInteger/kMovePointer/kMove: R2, R1
            loc_149 - CODE: 0x00006528 0F 02 02 00 DC::kLoadPointer/kLoadI64/kLoadU64: R2, R2
            loc_150 - CODE: 0x00006530 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_151 - CODE: 0x00006538 3D 03 03 08 DC::kImultiplyImm: R3, R3 * 8
            loc_152 - CODE: 0x00006540 01 02 02 03 DC::kScriptCodeIAdd: R2, R2, R3
            loc_153 - CODE: 0x00006548 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_154 - CODE: 0x00006550 0C 04 07 00 DC::kLoadU16Immediate: R4, 7 | (0 << 0x8)
            loc_155 - CODE: 0x00006558 4A 05 0C 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, 3894838B595258B4(#3894838B595258B4)
            loc_156 - CODE: 0x00006560 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_157 - CODE: 0x00006568 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_158 - CODE: 0x00006570 1C 03 03 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#3894838B595258B4 )
            loc_159 - CODE: 0x00006578 12 02 02 03 DC::kStorePointer: R3!, {R2, R2}
            loc_160 - CODE: 0x00006580 15 02 05 00 DC::kLookupInteger/kLookupFloat: R2 R5 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_161 - CODE: 0x00006588 0C 03 15 00 DC::kLoadU16Immediate: R3, 21 | (0 << 0x8)
            loc_162 - CODE: 0x00006590 43 04 01 00 DC::kMoveInteger/kMovePointer/kMove: R4, R1
            loc_163 - CODE: 0x00006598 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_164 - CODE: 0x000065A0 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_165 - CODE: 0x000065A8 1C 02 02 02 DC::kCallFf: ( new-boxed-value '#0000000000000015 '%alloc-array )
            loc_166 - CODE: 0x000065B0 43 01 02 00 DC::kMoveInteger/kMovePointer/kMove: R1, R2
            loc_167 - CODE: 0x000065B8 0C 02 01 00 DC::kLoadU16Immediate: R2, 1 | (0 << 0x8)
            loc_168 - CODE: 0x000065C0 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_169 - CODE: 0x000065C8 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_170 - CODE: 0x000065D0 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_171 - CODE: 0x000065D8 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_172 - CODE: 0x000065E0 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_173 - CODE: 0x000065E8 43 34 04 00 DC::kMoveInteger/kMovePointer/kMove: R52, R4
            loc_174 - CODE: 0x000065F0 1B 00 00 04 DC::kCall: ( speak-text-to-speech-formatted 'new-boxed-value '#0000000000000001 '#0000000000000000 '#0000000000000001 )
            loc_175 - CODE: 0x000065F8 2D 61 00 01 DC::kBranch: B loc_353
            loc_176 - CODE: 0x00006600 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0x1A51DEBC246B434E(get-svar-as-boolean)
            loc_177 - CODE: 0x00006608 4A 01 0D 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 1D8B6512057BB570(buddy-jesse)
            loc_178 - CODE: 0x00006610 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_179 - CODE: 0x00006618 1B 00 00 01 DC::kCall: ( get-svar-as-boolean 'buddy-jesse )
            loc_180 - CODE: 0x00006620 2F DC 00 00 DC::kBranchIfNot: B loc_220
            loc_181 - CODE: 0x00006628 15 00 02 00 DC::kLookupInteger/kLookupFloat: R0 R2 -> hashid: 0xE04D6B2695705B11(speak-text-to-speech-formatted)
            loc_182 - CODE: 0x00006630 15 01 03 00 DC::kLookupInteger/kLookupFloat: R1 R3 -> hashid: 0x9481E6778A8D0E9A(%alloc-array)
            loc_183 - CODE: 0x00006638 4A 02 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R2, 7670DDEBC755A4C9(single-frame)
            loc_184 - CODE: 0x00006640 0C 03 01 00 DC::kLoadU16Immediate: R3, 1 | (0 << 0x8)
            loc_185 - CODE: 0x00006648 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_186 - CODE: 0x00006650 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_187 - CODE: 0x00006658 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_188 - CODE: 0x00006660 43 32 03 00 DC::kMoveInteger/kMovePointer/kMove: R50, R3
            loc_189 - CODE: 0x00006668 43 33 04 00 DC::kMoveInteger/kMovePointer/kMove: R51, R4
            loc_190 - CODE: 0x00006670 43 34 05 00 DC::kMoveInteger/kMovePointer/kMove: R52, R5
            loc_191 - CODE: 0x00006678 1C 01 01 04 DC::kCallFf: ( %alloc-array 'single-frame '#0000000000000001 '#0000000000000001 '#0000000000000000 )
            loc_192 - CODE: 0x00006680 43 02 01 00 DC::kMoveInteger/kMovePointer/kMove: R2, R1
            loc_193 - CODE: 0x00006688 0F 02 02 00 DC::kLoadPointer/kLoadI64/kLoadU64: R2, R2
            loc_194 - CODE: 0x00006690 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_195 - CODE: 0x00006698 3D 03 03 08 DC::kImultiplyImm: R3, R3 * 8
            loc_196 - CODE: 0x000066A0 01 02 02 03 DC::kScriptCodeIAdd: R2, R2, R3
            loc_197 - CODE: 0x000066A8 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_198 - CODE: 0x000066B0 0C 04 07 00 DC::kLoadU16Immediate: R4, 7 | (0 << 0x8)
            loc_199 - CODE: 0x000066B8 4A 05 0E 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, 863B7FDA1ED66C27(#863B7FDA1ED66C27)
            loc_200 - CODE: 0x000066C0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_201 - CODE: 0x000066C8 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_202 - CODE: 0x000066D0 1C 03 03 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#863B7FDA1ED66C27 )
            loc_203 - CODE: 0x000066D8 12 02 02 03 DC::kStorePointer: R3!, {R2, R2}
            loc_204 - CODE: 0x000066E0 15 02 05 00 DC::kLookupInteger/kLookupFloat: R2 R5 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_205 - CODE: 0x000066E8 0C 03 15 00 DC::kLoadU16Immediate: R3, 21 | (0 << 0x8)
            loc_206 - CODE: 0x000066F0 43 04 01 00 DC::kMoveInteger/kMovePointer/kMove: R4, R1
            loc_207 - CODE: 0x000066F8 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_208 - CODE: 0x00006700 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_209 - CODE: 0x00006708 1C 02 02 02 DC::kCallFf: ( new-boxed-value '#0000000000000015 '%alloc-array )
            loc_210 - CODE: 0x00006710 43 01 02 00 DC::kMoveInteger/kMovePointer/kMove: R1, R2
            loc_211 - CODE: 0x00006718 0C 02 01 00 DC::kLoadU16Immediate: R2, 1 | (0 << 0x8)
            loc_212 - CODE: 0x00006720 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_213 - CODE: 0x00006728 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_214 - CODE: 0x00006730 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_215 - CODE: 0x00006738 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_216 - CODE: 0x00006740 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_217 - CODE: 0x00006748 43 34 04 00 DC::kMoveInteger/kMovePointer/kMove: R52, R4
            loc_218 - CODE: 0x00006750 1B 00 00 04 DC::kCall: ( speak-text-to-speech-formatted 'new-boxed-value '#0000000000000001 '#0000000000000000 '#0000000000000001 )
            loc_219 - CODE: 0x00006758 2D 61 00 01 DC::kBranch: B loc_353
            loc_220 - CODE: 0x00006760 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0x1A51DEBC246B434E(get-svar-as-boolean)
            loc_221 - CODE: 0x00006768 4A 01 0F 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 110916D1BDE14E4C(buddy-joel)
            loc_222 - CODE: 0x00006770 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_223 - CODE: 0x00006778 1B 00 00 01 DC::kCall: ( get-svar-as-boolean 'buddy-joel )
            loc_224 - CODE: 0x00006780 2F 08 00 01 DC::kBranchIfNot: B loc_264
            loc_225 - CODE: 0x00006788 15 00 02 00 DC::kLookupInteger/kLookupFloat: R0 R2 -> hashid: 0xE04D6B2695705B11(speak-text-to-speech-formatted)
            loc_226 - CODE: 0x00006790 15 01 03 00 DC::kLookupInteger/kLookupFloat: R1 R3 -> hashid: 0x9481E6778A8D0E9A(%alloc-array)
            loc_227 - CODE: 0x00006798 4A 02 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R2, 7670DDEBC755A4C9(single-frame)
            loc_228 - CODE: 0x000067A0 0C 03 01 00 DC::kLoadU16Immediate: R3, 1 | (0 << 0x8)
            loc_229 - CODE: 0x000067A8 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_230 - CODE: 0x000067B0 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_231 - CODE: 0x000067B8 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_232 - CODE: 0x000067C0 43 32 03 00 DC::kMoveInteger/kMovePointer/kMove: R50, R3
            loc_233 - CODE: 0x000067C8 43 33 04 00 DC::kMoveInteger/kMovePointer/kMove: R51, R4
            loc_234 - CODE: 0x000067D0 43 34 05 00 DC::kMoveInteger/kMovePointer/kMove: R52, R5
            loc_235 - CODE: 0x000067D8 1C 01 01 04 DC::kCallFf: ( %alloc-array 'single-frame '#0000000000000001 '#0000000000000001 '#0000000000000000 )
            loc_236 - CODE: 0x000067E0 43 02 01 00 DC::kMoveInteger/kMovePointer/kMove: R2, R1
            loc_237 - CODE: 0x000067E8 0F 02 02 00 DC::kLoadPointer/kLoadI64/kLoadU64: R2, R2
            loc_238 - CODE: 0x000067F0 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_239 - CODE: 0x000067F8 3D 03 03 08 DC::kImultiplyImm: R3, R3 * 8
            loc_240 - CODE: 0x00006800 01 02 02 03 DC::kScriptCodeIAdd: R2, R2, R3
            loc_241 - CODE: 0x00006808 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_242 - CODE: 0x00006810 0C 04 07 00 DC::kLoadU16Immediate: R4, 7 | (0 << 0x8)
            loc_243 - CODE: 0x00006818 4A 05 10 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, FD579DFB032ED7E5(#FD579DFB032ED7E5)
            loc_244 - CODE: 0x00006820 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_245 - CODE: 0x00006828 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_246 - CODE: 0x00006830 1C 03 03 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#FD579DFB032ED7E5 )
            loc_247 - CODE: 0x00006838 12 02 02 03 DC::kStorePointer: R3!, {R2, R2}
            loc_248 - CODE: 0x00006840 15 02 05 00 DC::kLookupInteger/kLookupFloat: R2 R5 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_249 - CODE: 0x00006848 0C 03 15 00 DC::kLoadU16Immediate: R3, 21 | (0 << 0x8)
            loc_250 - CODE: 0x00006850 43 04 01 00 DC::kMoveInteger/kMovePointer/kMove: R4, R1
            loc_251 - CODE: 0x00006858 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_252 - CODE: 0x00006860 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_253 - CODE: 0x00006868 1C 02 02 02 DC::kCallFf: ( new-boxed-value '#0000000000000015 '%alloc-array )
            loc_254 - CODE: 0x00006870 43 01 02 00 DC::kMoveInteger/kMovePointer/kMove: R1, R2
            loc_255 - CODE: 0x00006878 0C 02 01 00 DC::kLoadU16Immediate: R2, 1 | (0 << 0x8)
            loc_256 - CODE: 0x00006880 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_257 - CODE: 0x00006888 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_258 - CODE: 0x00006890 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_259 - CODE: 0x00006898 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_260 - CODE: 0x000068A0 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_261 - CODE: 0x000068A8 43 34 04 00 DC::kMoveInteger/kMovePointer/kMove: R52, R4
            loc_262 - CODE: 0x000068B0 1B 00 00 04 DC::kCall: ( speak-text-to-speech-formatted 'new-boxed-value '#0000000000000001 '#0000000000000000 '#0000000000000001 )
            loc_263 - CODE: 0x000068B8 2D 61 00 01 DC::kBranch: B loc_353
            loc_264 - CODE: 0x000068C0 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0x1A51DEBC246B434E(get-svar-as-boolean)
            loc_265 - CODE: 0x000068C8 4A 01 11 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, F38DBA25AB743979(buddy-lev)
            loc_266 - CODE: 0x000068D0 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_267 - CODE: 0x000068D8 1B 00 00 01 DC::kCall: ( get-svar-as-boolean 'buddy-lev )
            loc_268 - CODE: 0x000068E0 2F 34 00 01 DC::kBranchIfNot: B loc_308
            loc_269 - CODE: 0x000068E8 15 00 02 00 DC::kLookupInteger/kLookupFloat: R0 R2 -> hashid: 0xE04D6B2695705B11(speak-text-to-speech-formatted)
            loc_270 - CODE: 0x000068F0 15 01 03 00 DC::kLookupInteger/kLookupFloat: R1 R3 -> hashid: 0x9481E6778A8D0E9A(%alloc-array)
            loc_271 - CODE: 0x000068F8 4A 02 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R2, 7670DDEBC755A4C9(single-frame)
            loc_272 - CODE: 0x00006900 0C 03 01 00 DC::kLoadU16Immediate: R3, 1 | (0 << 0x8)
            loc_273 - CODE: 0x00006908 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_274 - CODE: 0x00006910 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_275 - CODE: 0x00006918 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_276 - CODE: 0x00006920 43 32 03 00 DC::kMoveInteger/kMovePointer/kMove: R50, R3
            loc_277 - CODE: 0x00006928 43 33 04 00 DC::kMoveInteger/kMovePointer/kMove: R51, R4
            loc_278 - CODE: 0x00006930 43 34 05 00 DC::kMoveInteger/kMovePointer/kMove: R52, R5
            loc_279 - CODE: 0x00006938 1C 01 01 04 DC::kCallFf: ( %alloc-array 'single-frame '#0000000000000001 '#0000000000000001 '#0000000000000000 )
            loc_280 - CODE: 0x00006940 43 02 01 00 DC::kMoveInteger/kMovePointer/kMove: R2, R1
            loc_281 - CODE: 0x00006948 0F 02 02 00 DC::kLoadPointer/kLoadI64/kLoadU64: R2, R2
            loc_282 - CODE: 0x00006950 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_283 - CODE: 0x00006958 3D 03 03 08 DC::kImultiplyImm: R3, R3 * 8
            loc_284 - CODE: 0x00006960 01 02 02 03 DC::kScriptCodeIAdd: R2, R2, R3
            loc_285 - CODE: 0x00006968 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_286 - CODE: 0x00006970 0C 04 07 00 DC::kLoadU16Immediate: R4, 7 | (0 << 0x8)
            loc_287 - CODE: 0x00006978 4A 05 12 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, D0FF4AE0E9AEC69A(#D0FF4AE0E9AEC69A)
            loc_288 - CODE: 0x00006980 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_289 - CODE: 0x00006988 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_290 - CODE: 0x00006990 1C 03 03 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#D0FF4AE0E9AEC69A )
            loc_291 - CODE: 0x00006998 12 02 02 03 DC::kStorePointer: R3!, {R2, R2}
            loc_292 - CODE: 0x000069A0 15 02 05 00 DC::kLookupInteger/kLookupFloat: R2 R5 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_293 - CODE: 0x000069A8 0C 03 15 00 DC::kLoadU16Immediate: R3, 21 | (0 << 0x8)
            loc_294 - CODE: 0x000069B0 43 04 01 00 DC::kMoveInteger/kMovePointer/kMove: R4, R1
            loc_295 - CODE: 0x000069B8 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_296 - CODE: 0x000069C0 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_297 - CODE: 0x000069C8 1C 02 02 02 DC::kCallFf: ( new-boxed-value '#0000000000000015 '%alloc-array )
            loc_298 - CODE: 0x000069D0 43 01 02 00 DC::kMoveInteger/kMovePointer/kMove: R1, R2
            loc_299 - CODE: 0x000069D8 0C 02 01 00 DC::kLoadU16Immediate: R2, 1 | (0 << 0x8)
            loc_300 - CODE: 0x000069E0 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_301 - CODE: 0x000069E8 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_302 - CODE: 0x000069F0 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_303 - CODE: 0x000069F8 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_304 - CODE: 0x00006A00 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_305 - CODE: 0x00006A08 43 34 04 00 DC::kMoveInteger/kMovePointer/kMove: R52, R4
            loc_306 - CODE: 0x00006A10 1B 00 00 04 DC::kCall: ( speak-text-to-speech-formatted 'new-boxed-value '#0000000000000001 '#0000000000000000 '#0000000000000001 )
            loc_307 - CODE: 0x00006A18 2D 61 00 01 DC::kBranch: B loc_353
            loc_308 - CODE: 0x00006A20 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0x1A51DEBC246B434E(get-svar-as-boolean)
            loc_309 - CODE: 0x00006A28 4A 01 13 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, B1BD07C67B9CC233(buddy-manny)
            loc_310 - CODE: 0x00006A30 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_311 - CODE: 0x00006A38 1B 00 00 01 DC::kCall: ( get-svar-as-boolean 'buddy-manny )
            loc_312 - CODE: 0x00006A40 2F 60 00 01 DC::kBranchIfNot: B loc_352
            loc_313 - CODE: 0x00006A48 15 00 02 00 DC::kLookupInteger/kLookupFloat: R0 R2 -> hashid: 0xE04D6B2695705B11(speak-text-to-speech-formatted)
            loc_314 - CODE: 0x00006A50 15 01 03 00 DC::kLookupInteger/kLookupFloat: R1 R3 -> hashid: 0x9481E6778A8D0E9A(%alloc-array)
            loc_315 - CODE: 0x00006A58 4A 02 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R2, 7670DDEBC755A4C9(single-frame)
            loc_316 - CODE: 0x00006A60 0C 03 01 00 DC::kLoadU16Immediate: R3, 1 | (0 << 0x8)
            loc_317 - CODE: 0x00006A68 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_318 - CODE: 0x00006A70 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_319 - CODE: 0x00006A78 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_320 - CODE: 0x00006A80 43 32 03 00 DC::kMoveInteger/kMovePointer/kMove: R50, R3
            loc_321 - CODE: 0x00006A88 43 33 04 00 DC::kMoveInteger/kMovePointer/kMove: R51, R4
            loc_322 - CODE: 0x00006A90 43 34 05 00 DC::kMoveInteger/kMovePointer/kMove: R52, R5
            loc_323 - CODE: 0x00006A98 1C 01 01 04 DC::kCallFf: ( %alloc-array 'single-frame '#0000000000000001 '#0000000000000001 '#0000000000000000 )
            loc_324 - CODE: 0x00006AA0 43 02 01 00 DC::kMoveInteger/kMovePointer/kMove: R2, R1
            loc_325 - CODE: 0x00006AA8 0F 02 02 00 DC::kLoadPointer/kLoadI64/kLoadU64: R2, R2
            loc_326 - CODE: 0x00006AB0 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_327 - CODE: 0x00006AB8 3D 03 03 08 DC::kImultiplyImm: R3, R3 * 8
            loc_328 - CODE: 0x00006AC0 01 02 02 03 DC::kScriptCodeIAdd: R2, R2, R3
            loc_329 - CODE: 0x00006AC8 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_330 - CODE: 0x00006AD0 0C 04 07 00 DC::kLoadU16Immediate: R4, 7 | (0 << 0x8)
            loc_331 - CODE: 0x00006AD8 4A 05 14 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, D1E394A0542A00C0(#D1E394A0542A00C0)
            loc_332 - CODE: 0x00006AE0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_333 - CODE: 0x00006AE8 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_334 - CODE: 0x00006AF0 1C 03 03 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#D1E394A0542A00C0 )
            loc_335 - CODE: 0x00006AF8 12 02 02 03 DC::kStorePointer: R3!, {R2, R2}
            loc_336 - CODE: 0x00006B00 15 02 05 00 DC::kLookupInteger/kLookupFloat: R2 R5 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_337 - CODE: 0x00006B08 0C 03 15 00 DC::kLoadU16Immediate: R3, 21 | (0 << 0x8)
            loc_338 - CODE: 0x00006B10 43 04 01 00 DC::kMoveInteger/kMovePointer/kMove: R4, R1
            loc_339 - CODE: 0x00006B18 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_340 - CODE: 0x00006B20 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_341 - CODE: 0x00006B28 1C 02 02 02 DC::kCallFf: ( new-boxed-value '#0000000000000015 '%alloc-array )
            loc_342 - CODE: 0x00006B30 43 01 02 00 DC::kMoveInteger/kMovePointer/kMove: R1, R2
            loc_343 - CODE: 0x00006B38 0C 02 01 00 DC::kLoadU16Immediate: R2, 1 | (0 << 0x8)
            loc_344 - CODE: 0x00006B40 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_345 - CODE: 0x00006B48 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_346 - CODE: 0x00006B50 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_347 - CODE: 0x00006B58 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_348 - CODE: 0x00006B60 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_349 - CODE: 0x00006B68 43 34 04 00 DC::kMoveInteger/kMovePointer/kMove: R52, R4
            loc_350 - CODE: 0x00006B70 1B 00 00 04 DC::kCall: ( speak-text-to-speech-formatted 'new-boxed-value '#0000000000000001 '#0000000000000000 '#0000000000000001 )
            loc_351 - CODE: 0x00006B78 2D 61 00 01 DC::kBranch: B loc_353
            loc_352 - CODE: 0x00006B80 0C 00 00 00 DC::kLoadU16Immediate: R0, 0 | (0 << 0x8)
            loc_353 - CODE: 0x00006B88 15 00 02 00 DC::kLookupInteger/kLookupFloat: R0 R2 -> hashid: 0xE04D6B2695705B11(speak-text-to-speech-formatted)
            loc_354 - CODE: 0x00006B90 15 01 03 00 DC::kLookupInteger/kLookupFloat: R1 R3 -> hashid: 0x9481E6778A8D0E9A(%alloc-array)
            loc_355 - CODE: 0x00006B98 4A 02 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R2, 7670DDEBC755A4C9(single-frame)
            loc_356 - CODE: 0x00006BA0 0C 03 01 00 DC::kLoadU16Immediate: R3, 1 | (0 << 0x8)
            loc_357 - CODE: 0x00006BA8 0C 04 02 00 DC::kLoadU16Immediate: R4, 2 | (0 << 0x8)
            loc_358 - CODE: 0x00006BB0 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_359 - CODE: 0x00006BB8 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_360 - CODE: 0x00006BC0 43 32 03 00 DC::kMoveInteger/kMovePointer/kMove: R50, R3
            loc_361 - CODE: 0x00006BC8 43 33 04 00 DC::kMoveInteger/kMovePointer/kMove: R51, R4
            loc_362 - CODE: 0x00006BD0 43 34 05 00 DC::kMoveInteger/kMovePointer/kMove: R52, R5
            loc_363 - CODE: 0x00006BD8 1C 01 01 04 DC::kCallFf: ( %alloc-array 'single-frame '#0000000000000001 '#0000000000000002 '#0000000000000000 )
            loc_364 - CODE: 0x00006BE0 43 02 01 00 DC::kMoveInteger/kMovePointer/kMove: R2, R1
            loc_365 - CODE: 0x00006BE8 0F 02 02 00 DC::kLoadPointer/kLoadI64/kLoadU64: R2, R2
            loc_366 - CODE: 0x00006BF0 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_367 - CODE: 0x00006BF8 3D 03 03 08 DC::kImultiplyImm: R3, R3 * 8
            loc_368 - CODE: 0x00006C00 01 02 02 03 DC::kScriptCodeIAdd: R2, R2, R3
            loc_369 - CODE: 0x00006C08 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_370 - CODE: 0x00006C10 0C 04 07 00 DC::kLoadU16Immediate: R4, 7 | (0 << 0x8)
            loc_371 - CODE: 0x00006C18 4A 05 15 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, DF9D8DB769827DD3(#DF9D8DB769827DD3)
            loc_372 - CODE: 0x00006C20 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_373 - CODE: 0x00006C28 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_374 - CODE: 0x00006C30 1C 03 03 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#DF9D8DB769827DD3 )
            loc_375 - CODE: 0x00006C38 12 02 02 03 DC::kStorePointer: R3!, {R2, R2}
            loc_376 - CODE: 0x00006C40 43 02 01 00 DC::kMoveInteger/kMovePointer/kMove: R2, R1
            loc_377 - CODE: 0x00006C48 0F 02 02 00 DC::kLoadPointer/kLoadI64/kLoadU64: R2, R2
            loc_378 - CODE: 0x00006C50 0C 03 01 00 DC::kLoadU16Immediate: R3, 1 | (0 << 0x8)
            loc_379 - CODE: 0x00006C58 3D 03 03 08 DC::kImultiplyImm: R3, R3 * 8
            loc_380 - CODE: 0x00006C60 01 02 02 03 DC::kScriptCodeIAdd: R2, R2, R3
            loc_381 - CODE: 0x00006C68 15 03 05 00 DC::kLookupInteger/kLookupFloat: R3 R5 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_382 - CODE: 0x00006C70 0C 04 02 00 DC::kLoadU16Immediate: R4, 2 | (0 << 0x8)
            loc_383 - CODE: 0x00006C78 15 05 16 00 DC::kLookupInteger/kLookupFloat: R5 R22 -> hashid: 0x88547F48DA223122(get-int32)
            loc_384 - CODE: 0x00006C80 4A 06 17 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R6, 9F2164611C211F24(#9F2164611C211F24)
            loc_385 - CODE: 0x00006C88 4A 07 18 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R7, 2D19E518D40792B7(self)
            loc_386 - CODE: 0x00006C90 43 31 06 00 DC::kMoveInteger/kMovePointer/kMove: R49, R6
            loc_387 - CODE: 0x00006C98 43 32 07 00 DC::kMoveInteger/kMovePointer/kMove: R50, R7
            loc_388 - CODE: 0x00006CA0 1C 05 05 02 DC::kCallFf: ( get-int32 '#9F2164611C211F24 'self )
            loc_389 - CODE: 0x00006CA8 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_390 - CODE: 0x00006CB0 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_391 - CODE: 0x00006CB8 1C 03 03 02 DC::kCallFf: ( new-boxed-value '#0000000000000002 'get-int32 )
            loc_392 - CODE: 0x00006CC0 12 02 02 03 DC::kStorePointer: R3!, {R2, R2}
            loc_393 - CODE: 0x00006CC8 15 02 05 00 DC::kLookupInteger/kLookupFloat: R2 R5 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_394 - CODE: 0x00006CD0 0C 03 15 00 DC::kLoadU16Immediate: R3, 21 | (0 << 0x8)
            loc_395 - CODE: 0x00006CD8 43 04 01 00 DC::kMoveInteger/kMovePointer/kMove: R4, R1
            loc_396 - CODE: 0x00006CE0 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_397 - CODE: 0x00006CE8 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_398 - CODE: 0x00006CF0 1C 02 02 02 DC::kCallFf: ( new-boxed-value '#0000000000000015 '%alloc-array )
            loc_399 - CODE: 0x00006CF8 43 01 02 00 DC::kMoveInteger/kMovePointer/kMove: R1, R2
            loc_400 - CODE: 0x00006D00 0C 02 01 00 DC::kLoadU16Immediate: R2, 1 | (0 << 0x8)
            loc_401 - CODE: 0x00006D08 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_402 - CODE: 0x00006D10 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_403 - CODE: 0x00006D18 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_404 - CODE: 0x00006D20 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_405 - CODE: 0x00006D28 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_406 - CODE: 0x00006D30 43 34 04 00 DC::kMoveInteger/kMovePointer/kMove: R52, R4
            loc_407 - CODE: 0x00006D38 1B 00 00 04 DC::kCall: ( speak-text-to-speech-formatted 'new-boxed-value '#0000000000000001 '#0000000000000000 '#0000000000000001 )
            loc_408 - CODE: 0x00006D40 00 00 00 00 DC::kScriptCodeReturn: 0xE04D6B2695705B11
        )
)

(defun '#F54395B602B2F2F2
        (
            loc_0 - CODE: 0x00006E68 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0xE04D6B2695705B11(speak-text-to-speech-formatted)
            loc_1 - CODE: 0x00006E70 15 01 01 00 DC::kLookupInteger/kLookupFloat: R1 R1 -> hashid: 0x9481E6778A8D0E9A(%alloc-array)
            loc_2 - CODE: 0x00006E78 4A 02 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R2, 7670DDEBC755A4C9(single-frame)
            loc_3 - CODE: 0x00006E80 0C 03 01 00 DC::kLoadU16Immediate: R3, 1 | (0 << 0x8)
            loc_4 - CODE: 0x00006E88 0C 04 02 00 DC::kLoadU16Immediate: R4, 2 | (0 << 0x8)
            loc_5 - CODE: 0x00006E90 0C 05 00 00 DC::kLoadU16Immediate: R5, 0 | (0 << 0x8)
            loc_6 - CODE: 0x00006E98 43 31 02 00 DC::kMoveInteger/kMovePointer/kMove: R49, R2
            loc_7 - CODE: 0x00006EA0 43 32 03 00 DC::kMoveInteger/kMovePointer/kMove: R50, R3
            loc_8 - CODE: 0x00006EA8 43 33 04 00 DC::kMoveInteger/kMovePointer/kMove: R51, R4
            loc_9 - CODE: 0x00006EB0 43 34 05 00 DC::kMoveInteger/kMovePointer/kMove: R52, R5
            loc_10 - CODE: 0x00006EB8 1C 01 01 04 DC::kCallFf: ( %alloc-array 'single-frame '#0000000000000001 '#0000000000000002 '#0000000000000000 )
            loc_11 - CODE: 0x00006EC0 43 02 01 00 DC::kMoveInteger/kMovePointer/kMove: R2, R1
            loc_12 - CODE: 0x00006EC8 0F 02 02 00 DC::kLoadPointer/kLoadI64/kLoadU64: R2, R2
            loc_13 - CODE: 0x00006ED0 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_14 - CODE: 0x00006ED8 3D 03 03 08 DC::kImultiplyImm: R3, R3 * 8
            loc_15 - CODE: 0x00006EE0 01 02 02 03 DC::kScriptCodeIAdd: R2, R2, R3
            loc_16 - CODE: 0x00006EE8 15 03 03 00 DC::kLookupInteger/kLookupFloat: R3 R3 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_17 - CODE: 0x00006EF0 0C 04 07 00 DC::kLoadU16Immediate: R4, 7 | (0 << 0x8)
            loc_18 - CODE: 0x00006EF8 4A 05 04 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R5, 3719186FBCB4FA3B(#3719186FBCB4FA3B)
            loc_19 - CODE: 0x00006F00 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_20 - CODE: 0x00006F08 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_21 - CODE: 0x00006F10 1C 03 03 02 DC::kCallFf: ( new-boxed-value '#0000000000000007 '#3719186FBCB4FA3B )
            loc_22 - CODE: 0x00006F18 12 02 02 03 DC::kStorePointer: R3!, {R2, R2}
            loc_23 - CODE: 0x00006F20 43 02 01 00 DC::kMoveInteger/kMovePointer/kMove: R2, R1
            loc_24 - CODE: 0x00006F28 0F 02 02 00 DC::kLoadPointer/kLoadI64/kLoadU64: R2, R2
            loc_25 - CODE: 0x00006F30 0C 03 01 00 DC::kLoadU16Immediate: R3, 1 | (0 << 0x8)
            loc_26 - CODE: 0x00006F38 3D 03 03 08 DC::kImultiplyImm: R3, R3 * 8
            loc_27 - CODE: 0x00006F40 01 02 02 03 DC::kScriptCodeIAdd: R2, R2, R3
            loc_28 - CODE: 0x00006F48 15 03 03 00 DC::kLookupInteger/kLookupFloat: R3 R3 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_29 - CODE: 0x00006F50 0C 04 02 00 DC::kLoadU16Immediate: R4, 2 | (0 << 0x8)
            loc_30 - CODE: 0x00006F58 15 05 05 00 DC::kLookupInteger/kLookupFloat: R5 R5 -> hashid: 0x88547F48DA223122(get-int32)
            loc_31 - CODE: 0x00006F60 4A 06 06 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R6, C75D966632533F17(#C75D966632533F17)
            loc_32 - CODE: 0x00006F68 4A 07 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R7, 2D19E518D40792B7(self)
            loc_33 - CODE: 0x00006F70 43 31 06 00 DC::kMoveInteger/kMovePointer/kMove: R49, R6
            loc_34 - CODE: 0x00006F78 43 32 07 00 DC::kMoveInteger/kMovePointer/kMove: R50, R7
            loc_35 - CODE: 0x00006F80 1C 05 05 02 DC::kCallFf: ( get-int32 '#C75D966632533F17 'self )
            loc_36 - CODE: 0x00006F88 15 06 05 00 DC::kLookupInteger/kLookupFloat: R6 R5 -> hashid: 0x88547F48DA223122(get-int32)
            loc_37 - CODE: 0x00006F90 4A 07 08 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R7, 76853ADC01E9E854(#76853ADC01E9E854)
            loc_38 - CODE: 0x00006F98 4A 08 07 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R8, 2D19E518D40792B7(self)
            loc_39 - CODE: 0x00006FA0 43 31 07 00 DC::kMoveInteger/kMovePointer/kMove: R49, R7
            loc_40 - CODE: 0x00006FA8 43 32 08 00 DC::kMoveInteger/kMovePointer/kMove: R50, R8
            loc_41 - CODE: 0x00006FB0 1C 06 06 02 DC::kCallFf: ( get-int32 '#76853ADC01E9E854 'self )
            loc_42 - CODE: 0x00006FB8 02 05 05 06 DC::kScriptCodeISubtract: R5, R5, R6
            loc_43 - CODE: 0x00006FC0 43 31 04 00 DC::kMoveInteger/kMovePointer/kMove: R49, R4
            loc_44 - CODE: 0x00006FC8 43 32 05 00 DC::kMoveInteger/kMovePointer/kMove: R50, R5
            loc_45 - CODE: 0x00006FD0 1C 03 03 02 DC::kCallFf: ( new-boxed-value '#0000000000000002 '#0000000000000000 )
            loc_46 - CODE: 0x00006FD8 12 02 02 03 DC::kStorePointer: R3!, {R2, R2}
            loc_47 - CODE: 0x00006FE0 15 02 03 00 DC::kLookupInteger/kLookupFloat: R2 R3 -> hashid: 0x332313EC0E2CB328(new-boxed-value)
            loc_48 - CODE: 0x00006FE8 0C 03 15 00 DC::kLoadU16Immediate: R3, 21 | (0 << 0x8)
            loc_49 - CODE: 0x00006FF0 43 04 01 00 DC::kMoveInteger/kMovePointer/kMove: R4, R1
            loc_50 - CODE: 0x00006FF8 43 31 03 00 DC::kMoveInteger/kMovePointer/kMove: R49, R3
            loc_51 - CODE: 0x00007000 43 32 04 00 DC::kMoveInteger/kMovePointer/kMove: R50, R4
            loc_52 - CODE: 0x00007008 1C 02 02 02 DC::kCallFf: ( new-boxed-value '#0000000000000015 '%alloc-array )
            loc_53 - CODE: 0x00007010 43 01 02 00 DC::kMoveInteger/kMovePointer/kMove: R1, R2
            loc_54 - CODE: 0x00007018 0C 02 01 00 DC::kLoadU16Immediate: R2, 1 | (0 << 0x8)
            loc_55 - CODE: 0x00007020 0C 03 00 00 DC::kLoadU16Immediate: R3, 0 | (0 << 0x8)
            loc_56 - CODE: 0x00007028 0C 04 01 00 DC::kLoadU16Immediate: R4, 1 | (0 << 0x8)
            loc_57 - CODE: 0x00007030 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_58 - CODE: 0x00007038 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_59 - CODE: 0x00007040 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_60 - CODE: 0x00007048 43 34 04 00 DC::kMoveInteger/kMovePointer/kMove: R52, R4
            loc_61 - CODE: 0x00007050 1B 00 00 04 DC::kCall: ( speak-text-to-speech-formatted 'new-boxed-value '#0000000000000001 '#0000000000000000 '#0000000000000001 )
            loc_62 - CODE: 0x00007058 15 00 09 00 DC::kLookupInteger/kLookupFloat: R0 R9 -> hashid: 0xF1F656F13B228C58(#F1F656F13B228C58)
            loc_63 - CODE: 0x00007060 1B 00 00 00 DC::kCall: ( #F1F656F13B228C58 )
            loc_64 - CODE: 0x00007068 00 00 00 00 DC::kScriptCodeReturn: 0xF1F656F13B228C58
        )
)

(define-state-script ss-prep-defense-manager
  :location "t2r/src/game/scriptx/ss-rogue/ss-prep-defense-manager.dcx":466)
  :initial-state '#0000000000000000  //value @ 000070D8
  :options (new ss-options :wait-for-levels (make-symbol-array 'player ))
  :declarations (declaration-list 
    (var int32 '#440B0B5FC9C9B85D = 20) //value @ 00009050
    (var int32 '#3646E757838616B9 = 0) //value @ 00009060
    (var int32 '#3D9EA354CA9070EA = 600) //value @ 00009070
    (var int32 '#A7085959458F9F4A = 0) //value @ 00009080
    (var boolean 'defense-wave-active? = ??? (nullptr))
    (var int32 '#BA36E0221D434E01 = 15) //value @ 00009090
    (var int32 '#5095B8B69860E137 = 0) //value @ 000090A0
    (var int32 '#EF787CF56D25F0DD = 0) //value @ 000090B0
    (var int32 '#72E01BEEBCB61949 = 0) //value @ 000090C0
    (var int32 '#9659C5907BABFB47 = 4) //value @ 000090D0
    (var int32 '#666A36D5D105DD03 = 4) //value @ 000090E0
    (var int32 '#4734285FD89016B2 = 7) //value @ 000090F0
    (var int32 '#3C5CDE64EF336F29 = 5) //value @ 00009100
    (var int32 '#C75D966632533F17 = 25) //value @ 00009110
    (var int32 '#76853ADC01E9E854 = 0) //value @ 00009120
    (var int32 '#CB63F25FDBD46A06 = 0) //value @ 00009130
    (var boolean '#C93021537547456D = ??? (nullptr))
    (var int32 '#6AA404543D7AB190 = 0) //value @ 00009140
    (var int32 '#7A10286ADDA58118 = 8) //value @ 00009150
    (var boolean '#7709BE792F8D874E = ??? (nullptr))
    (var int32 '#1E3C5B8AD771D96A = 20) //value @ 00009160
    (var boolean '#DD73BC6C9C8BD686 = ??? (nullptr))
    (var int32 '#A9839F519D50031B = 20) //value @ 00009170
    (var boolean '#F94808CAB0ADFB85 = ??? (nullptr))
    (var boolean '#6EDB04596940DB04 = ??? (nullptr))
    (var timer '#3F2DAB8D17ED29AC = ??? (nullptr))
    (var float '#5B2519BCAE97CE87 = 8.000000) //value @ 00009180
    (var symbol '#F58E5C89DCE15BD9 = null) //value @ 00009190
    (var symbol '#CD0502D69B547E94 = #CD0502D69B547E94) //value @ 000091A0
    (var symbol '#5FDC403B81C30778 = #5FDC403B81C30778) //value @ 000091B0
    (var int32 '#DC5EF1530954C30D = 0) //value @ 000091C0
    (var symbol '#ED0373F9E6B824FF = #ED0373F9E6B824FF) //value @ 000091D0
    (var int32 '#2507A720F72C6D87 = 18) //value @ 000091E0
    (var int32 '#0C5B80327836A593 = 100) //value @ 000091F0
    (var int32 '#9F2164611C211F24 = 100) //value @ 00009200
    (var boolean '#6F76C83C347BDE41 = #t) //value @ 00009210
    (var timer '#663A27CA51B2DA68 = ??? (nullptr))
    (var timer '#D0A57176777FC715 = ??? (nullptr))
    (var boolean '#BB2330E582B47BBD = #t) //value @ 00009220
    (var symbol '#43FEF6458EB0E749 = ??? (nullptr))
    (var boolean '#21BA73E8E1FA7A6C = ??? (nullptr))
    (var int32 '#8CA05A8CD6625E33 = 3) //value @ 00009230
    (var int32 '#E6CB2E0411D2E20D = 4) //value @ 00009240
    (var boolean '#025D9B1E4CAE2884 = ??? (nullptr))
    (var boolean '#7148A9FB3A8E3331 = #t) //value @ 00009250
    (var timer '#05C46B9298860277 = ??? (nullptr))
    (var timer '#405C1108DA40171C = ??? (nullptr))
    (var int32 '#F18F077253E7AE67 = 3) //value @ 00009260
    (var timer '#8ED039192006D481 = ??? (nullptr))
    (var boolean '#CB8DE6F3E3743EDC = ??? (nullptr))
    (var boolean '#6C0B062D71B1237C = ??? (nullptr))
    (var int32 '#C08D662EA18D9F98 = 3) //value @ 00009270
    (var boolean '#46D083FDDF8D9916 = ??? (nullptr))
    (var int32 '#E08F5176DD52B65B = 10) //value @ 00009280
    (var boolean '#07E3D29254D8BBC4 = ??? (nullptr))
    (var boolean '#A5649F440B443FFF = ??? (nullptr))
    (var boolean '#4E331FB2B8E5B748 = ??? (nullptr))
    (var float '#329CE4A245F15F87 = 0.000000) //value @ 00009290
    (var boolean '#B2B34B630AAD6B7F = #t) //value @ 000092A0
    (var timer '#6979A836A992D71D = ??? (nullptr))
    (var float '#3A2CFCFDD5F48158 = 5.000000) //value @ 000092B0
  )

  (state ("--script--")
    (on (event 'designer-menu-changed)
      (track ("main")
        (
            loc_0 - CODE: 0x00012440 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0xB96C7EEF7ACAB122(#B96C7EEF7ACAB122)
            loc_1 - CODE: 0x00012448 2F 06 00 00 DC::kBranchIfNot: B loc_6
            loc_2 - CODE: 0x00012450 15 00 00 01 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0xB96C7EEF7ACAB122(#B96C7EEF7ACAB122)
            loc_3 - CODE: 0x00012458 5D 00 00 00 DC::kAssertPointer:
            loc_4 - CODE: 0x00012460 3B 00 00 34 DC::kIaddImm: R0, R0, 52
            loc_5 - CODE: 0x00012468 4C 00 00 00 DC::kLoadU8: R0, B96C7EEF7ACAB122
            loc_6 - CODE: 0x00012470 2F 13 00 00 DC::kBranchIfNot: B loc_19
            loc_7 - CODE: 0x00012478 15 00 01 00 DC::kLookupInteger/kLookupFloat: R0 R1 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_8 - CODE: 0x00012480 4A 01 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 440B0B5FC9C9B85D(#440B0B5FC9C9B85D)
            loc_9 - CODE: 0x00012488 15 02 00 01 DC::kLookupInteger/kLookupFloat: R2 R0 -> hashid: 0xB96C7EEF7ACAB122(#B96C7EEF7ACAB122)
            loc_10 - CODE: 0x00012490 5D 02 00 00 DC::kAssertPointer:
            loc_11 - CODE: 0x00012498 3B 02 02 38 DC::kIaddImm: R2, R2, 56
            loc_12 - CODE: 0x000124A0 4F 02 02 00 DC::kLoadI32: R2, 440B0B5FC9C9B85D
            loc_13 - CODE: 0x000124A8 4A 03 03 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_14 - CODE: 0x000124B0 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_15 - CODE: 0x000124B8 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_16 - CODE: 0x000124C0 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_17 - CODE: 0x000124C8 1C 00 00 03 DC::kCallFf: ( set-int32 '#440B0B5FC9C9B85D '#B96C7EEF7ACAB15A 'self )
            loc_18 - CODE: 0x000124D0 2D 14 00 00 DC::kBranch: B loc_20
            loc_19 - CODE: 0x000124D8 0C 00 00 00 DC::kLoadU16Immediate: R0, 0 | (0 << 0x8)
            loc_20 - CODE: 0x000124E0 00 00 00 00 DC::kScriptCodeReturn: 0x0000000000000000
        )
      )
    )
    (on (start)
      (track ("main")
        (
            loc_0 - CODE: 0x00012440 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0xB96C7EEF7ACAB122(#B96C7EEF7ACAB122)
            loc_1 - CODE: 0x00012448 2F 06 00 00 DC::kBranchIfNot: B loc_6
            loc_2 - CODE: 0x00012450 15 00 00 01 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0xB96C7EEF7ACAB122(#B96C7EEF7ACAB122)
            loc_3 - CODE: 0x00012458 5D 00 00 00 DC::kAssertPointer:
            loc_4 - CODE: 0x00012460 3B 00 00 34 DC::kIaddImm: R0, R0, 52
            loc_5 - CODE: 0x00012468 4C 00 00 00 DC::kLoadU8: R0, B96C7EEF7ACAB122
            loc_6 - CODE: 0x00012470 2F 13 00 00 DC::kBranchIfNot: B loc_19
            loc_7 - CODE: 0x00012478 15 00 01 00 DC::kLookupInteger/kLookupFloat: R0 R1 -> hashid: 0xCF56CE6213BB9C96(set-int32)
            loc_8 - CODE: 0x00012480 4A 01 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 440B0B5FC9C9B85D(#440B0B5FC9C9B85D)
            loc_9 - CODE: 0x00012488 15 02 00 01 DC::kLookupInteger/kLookupFloat: R2 R0 -> hashid: 0xB96C7EEF7ACAB122(#B96C7EEF7ACAB122)
            loc_10 - CODE: 0x00012490 5D 02 00 00 DC::kAssertPointer:
            loc_11 - CODE: 0x00012498 3B 02 02 38 DC::kIaddImm: R2, R2, 56
            loc_12 - CODE: 0x000124A0 4F 02 02 00 DC::kLoadI32: R2, 440B0B5FC9C9B85D
            loc_13 - CODE: 0x000124A8 4A 03 03 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_14 - CODE: 0x000124B0 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_15 - CODE: 0x000124B8 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_16 - CODE: 0x000124C0 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_17 - CODE: 0x000124C8 1C 00 00 03 DC::kCallFf: ( set-int32 '#440B0B5FC9C9B85D '#B96C7EEF7ACAB15A 'self )
            loc_18 - CODE: 0x000124D0 2D 14 00 00 DC::kBranch: B loc_20
            loc_19 - CODE: 0x000124D8 0C 00 00 00 DC::kLoadU16Immediate: R0, 0 | (0 << 0x8)
            loc_20 - CODE: 0x000124E0 00 00 00 00 DC::kScriptCodeReturn: 0x0000000000000000
        )
      )
    )
    (on (event '#DD669D5BFFFEAF6C)
      (track ("main")
        (
            loc_0 - CODE: 0x00014A30 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0x313DF2331354B100(#313DF2331354B100)
            loc_1 - CODE: 0x00014A38 1B 00 00 00 DC::kCall: ( #313DF2331354B100 )
            loc_2 - CODE: 0x00014A40 00 00 00 00 DC::kScriptCodeReturn: 0x313DF2331354B100
        )
      )
    )
  )
  (state ("--all--")
    (on (start)
      (track ("main")
        (
            loc_0 - CODE: 0x00012000 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0xCB78DA33C0EA07D4(is-focus-test?)
            loc_1 - CODE: 0x00012008 1C 00 00 00 DC::kCallFf: ( is-focus-test? )
            loc_2 - CODE: 0x00012010 2F 07 00 00 DC::kBranchIfNot: B loc_7
            loc_3 - CODE: 0x00012018 15 00 01 00 DC::kLookupInteger/kLookupFloat: R0 R1 -> hashid: 0x123B57C00EF4B676(entity-exists?)
            loc_4 - CODE: 0x00012020 4A 01 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, C8007E10BE534132(#C8007E10BE534132)
            loc_5 - CODE: 0x00012028 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_6 - CODE: 0x00012030 1C 00 00 01 DC::kCallFf: ( entity-exists? '#C8007E10BE534132 )
            loc_7 - CODE: 0x00012038 2F 0D 00 00 DC::kBranchIfNot: B loc_13
            loc_8 - CODE: 0x00012040 15 00 03 00 DC::kLookupInteger/kLookupFloat: R0 R3 -> hashid: 0xE9354E7BBA446DDA(interactable-disable)
            loc_9 - CODE: 0x00012048 4A 01 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, C8007E10BE534132(#C8007E10BE534132)
            loc_10 - CODE: 0x00012050 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_11 - CODE: 0x00012058 1C 00 00 01 DC::kCallFf: ( interactable-disable '#C8007E10BE534132 )
            loc_12 - CODE: 0x00012060 2D 0E 00 00 DC::kBranch: B loc_14
            loc_13 - CODE: 0x00012068 0C 00 00 00 DC::kLoadU16Immediate: R0, 0 | (0 << 0x8)
            loc_14 - CODE: 0x00012070 00 00 00 00 DC::kScriptCodeReturn: 0x0000000000000000
        )
      )
    )
    (on (event '#3840C8B62830E64E)
      (track ("main")
        (
            loc_0 - CODE: 0x00012FD0 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0xFF17C0DCE7D03192(set-boolean)
            loc_1 - CODE: 0x00012FD8 4A 01 01 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 07E3D29254D8BBC4(#07E3D29254D8BBC4)
            loc_2 - CODE: 0x00012FE0 0C 02 01 00 DC::kLoadU16Immediate: R2, 1 | (0 << 0x8)
            loc_3 - CODE: 0x00012FE8 4A 03 02 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R3, 2D19E518D40792B7(self)
            loc_4 - CODE: 0x00012FF0 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_5 - CODE: 0x00012FF8 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_6 - CODE: 0x00013000 43 33 03 00 DC::kMoveInteger/kMovePointer/kMove: R51, R3
            loc_7 - CODE: 0x00013008 1C 00 00 03 DC::kCallFf: ( set-boolean '#07E3D29254D8BBC4 '#0000000000000001 'self )
            loc_8 - CODE: 0x00013010 00 00 00 00 DC::kScriptCodeReturn: 0xFF17C0DCE7D03192
        )
        (
            loc_0 - CODE: 0x000126E8 15 00 00 00 DC::kLookupInteger/kLookupFloat: R0 R0 -> hashid: 0x08953907B53F670B(go)
            loc_1 - CODE: 0x000126F0 4A 01 01 00 DC::kLoadStaticI64Imm/kLoadStaticU64Imm: R1, 0FA3391DB68E4425(disabled)
            loc_2 - CODE: 0x000126F8 0C 02 01 00 DC::kLoadU16Immediate: R2, 1 | (0 << 0x8)
            loc_3 - CODE: 0x00012700 43 31 01 00 DC::kMoveInteger/kMovePointer/kMove: R49, R1
            loc_4 - CODE: 0x00012708 43 32 02 00 DC::kMoveInteger/kMovePointer/kMove: R50, R2
            loc_5 - CODE: 0x00012710 1C 00 00 02 DC::kCallFf: ( go 'disabled 